(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     72856,       1642]
NotebookOptionsPosition[     67825,       1548]
NotebookOutlinePosition[     68309,       1567]
CellTagsIndexPosition[     68266,       1564]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Companion code for the paper \[OpenCurlyDoubleQuote]Stars In Their \
Constellations: Great person or great team?\[CloseCurlyDoubleQuote] by \
Mindruta, Bercovitz, Mares, and Feldman.\n\nThis notebook calculates the \
point estimates and 95% confidence intervals. Results are reported in Table \
2a of the paper.",
  FontFamily->"Consolas",
  FontSize->20,
  FontWeight->"Normal",
  FontColor->RGBColor[0.5019607843137255, 0., 0.]],
 "\n\ninit"
}], "Section",
 CellChangeTimes->{{3.6303386092666483`*^9, 3.6303386103447733`*^9}, {
  3.90386212363258*^9, 3.903862127357546*^9}, {3.9038621901567793`*^9, 
  3.903862190328501*^9}, {3.9038624961390305`*^9, 3.9038625614540076`*^9}, {
  3.9038627457796288`*^9, 3.9038627551745615`*^9}, {3.9038635529409328`*^9, 
  3.90386355843464*^9}},ExpressionUUID->"a07aa20e-9937-4186-bc43-\
89ffc8a76382"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "directory", "=", 
   "\"\<https://raw.githubusercontent.com/MaximumScoreEstimator/MSE-\
Mathematica/stars/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", 
  RowBox[{"directory", "<>", "\"\<mse.m\>\""}], "]"}]}], "Input",
 CellChangeTimes->{
  3.897711241844165*^9, {3.897714258687591*^9, 3.8977142721957703`*^9}, {
   3.8977150755664873`*^9, 3.897715076611128*^9}, {3.897715994187922*^9, 
   3.8977159960705757`*^9}, {3.9019298908696747`*^9, 
   3.9019298944156847`*^9}, {3.902285652992422*^9, 3.9022856980258913`*^9}, {
   3.9028985929897213`*^9, 3.902898595999941*^9}, {3.9029950914231157`*^9, 
   3.9029951162009478`*^9}, {3.903057206152025*^9, 3.9030572079193687`*^9}, {
   3.903057926471017*^9, 3.903057930289658*^9}, {3.903866367643085*^9, 
   3.90386637095503*^9}, {3.903866469031447*^9, 3.9038664745599117`*^9}, {
   3.903867616837978*^9, 3.903867660032977*^9}, {3.9038677199206057`*^9, 
   3.90386772035787*^9}, {3.903924201570176*^9, 3.9039242029542847`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"42a4d363-9498-4b0b-bf7c-5f123f12c347"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Loaded import.m\"\>"], "Echo",
 CellChangeTimes->{
  3.9042164369219656`*^9},ExpressionUUID->"d170e1db-f25c-4dfa-915b-\
aba6a603702d"],

Cell[BoxData["\<\"Loaded payoff.m\"\>"], "Echo",
 CellChangeTimes->{
  3.904216437187899*^9},ExpressionUUID->"3a7f0148-35d9-4b07-9562-\
0d53610e720f"],

Cell[BoxData["\<\"Loaded matching.m\"\>"], "Echo",
 CellChangeTimes->{
  3.9042164375158243`*^9},ExpressionUUID->"c628d0aa-5d18-4085-81b9-\
2adb648abba4"],

Cell[BoxData["\<\"Loaded inequalities.m\"\>"], "Echo",
 CellChangeTimes->{
  3.9042164378285527`*^9},ExpressionUUID->"865a6d79-ad95-48ad-80fd-\
27186f057953"],

Cell[BoxData["\<\"Loaded dataArray.m\"\>"], "Echo",
 CellChangeTimes->{
  3.9042164380236883`*^9},ExpressionUUID->"c769bc55-3e27-43fc-8c39-\
32c598e2469e"],

Cell[BoxData["\<\"Loaded objective.m\"\>"], "Echo",
 CellChangeTimes->{
  3.9042164381487103`*^9},ExpressionUUID->"56376726-c8bd-4f58-b072-\
b211fc1fefff"],

Cell[BoxData["\<\"Loaded maximize.m\"\>"], "Echo",
 CellChangeTimes->{
  3.904216438429573*^9},ExpressionUUID->"c2fa2dff-ee98-4a3a-99f5-\
e8a2775cb1ba"],

Cell[BoxData["\<\"Loaded confidence.m\"\>"], "Echo",
 CellChangeTimes->{
  3.904216438586092*^9},ExpressionUUID->"243e8447-fbcf-4239-ace0-\
22710cc3b1b4"],

Cell[BoxData["\<\"Loaded modifydata.m\"\>"], "Echo",
 CellChangeTimes->{
  3.9042164387110915`*^9},ExpressionUUID->"cfe8d165-4bc1-4026-9fcb-\
c08ffbe5782a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"218367112", ",", "184922896", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.903866516580048*^9, 3.903867587620523*^9, 
  3.9042162478857436`*^9, 3.9042164393150673`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"98a4b531-2c5b-4f28-a296-9b995ec067dc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import precomputed data", "Section",
 CellChangeTimes->{{3.630312113309617*^9, 3.630312115762742*^9}, {
  3.684103937250903*^9, 3.684103945195757*^9}, {3.684106438963768*^9, 
  3.68410644892039*^9}},ExpressionUUID->"416c3353-f5b9-4d09-be4d-\
6ea5d195adb0"],

Cell["Load the data", "Text",
 CellChangeTimes->{{3.6841042607207613`*^9, 3.684104266945219*^9}, {
   3.684104320856389*^9, 3.684104345457032*^9}, 
   3.9038664614324827`*^9},ExpressionUUID->"cf1aea60-faba-4443-8417-\
502a3ce75e62"],

Cell[BoxData[
 RowBox[{
  RowBox[{"filename", "=", "\"\<../data/stars_replication_step1.dat\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.897715115730977*^9, 3.897715133079192*^9}, 
   3.899948322289242*^9, 3.9028103492595177`*^9, {3.9038637934022784`*^9, 
   3.903863796419042*^9}, {3.9038664334423637`*^9, 3.903866436815172*^9}, {
   3.904216397710374*^9, 3.9042164009819736`*^9}},
 Background->RGBColor[1, 1, 0],
 CellLabel->"In[22]:=",ExpressionUUID->"959f3ecc-5958-4830-87a9-802b23509b58"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"import", "[", 
   RowBox[{"filename", ",", "\"\<precomp\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
  "header", ",", "noM", ",", "noU", ",", "noD", ",", "noAttr", ",", 
   "distanceMatrices", ",", "matchMatrix", ",", "mate"}], "}"}]}], "Input",
 CellChangeTimes->{{3.717728962088194*^9, 3.717728967908416*^9}, {
  3.717729012277205*^9, 3.717729012553649*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"534c9725-9fc5-4ddc-a626-008f72861c46"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"market\"\>", ",", "\<\"upstreamid\"\>", 
             ",", "\<\"downstreamid\"\>", ",", "\<\"cites_cites\"\>", 
             ",", "\<\"cites_size\"\>", ",", "\<\"kn_similarity\"\>", 
             ",", "\<\"_sq (kn_similarity)\"\>", 
             ",", "\<\"domain_similarity\"\>", ",", "\<\"cites_rankcmd\"\>", 
             ",", "\<\"cites_experience\"\>", ",", "\<\"match\"\>"}], "}"}], 
           ",", 
           TemplateBox[{"6"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1", "}"}], ",", 
                 RowBox[{"{", "2", "}"}], ",", 
                 RowBox[{"{", "3", "}"}], ",", 
                 RowBox[{"{", "4", "}"}], ",", 
                 RowBox[{"{", "5", "}"}], ",", 
                 RowBox[{"{", "6", "}"}], ",", 
                 RowBox[{"{", "7", "}"}], ",", 
                 RowBox[{"{", "8", "}"}], ",", 
                 RowBox[{"{", "9", "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], "}"}], ",", 
             TemplateBox[{"31"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"{", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"], "}"}]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{61.512451171875, {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{49.85595703125, {0., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 24, 17286902821440407496, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{58.4197998046875, {0., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{58.4197998046875, {0., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 24, 17286902821440407496, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{43.121337890625, {0., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{43.121337890625, {0., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 24, 17286902821440407496, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74.6630859375, {0., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74.6630859375, {0., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[17286902821440407496 === $SessionID, 
   Out[24], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.903866527130698*^9, 3.903867588475246*^9, 
  3.9042162481668906`*^9, 3.9042164398159604`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"13556962-eca8-4d83-bba8-b48e36da38eb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Routines (calculate payoff matrix, inequalities members, dataArray)\
\>", "Section",
 CellChangeTimes->{{3.6841044513858833`*^9, 3.684104453137322*^9}, {
  3.684106468489313*^9, 
  3.684106506813888*^9}},ExpressionUUID->"ced5500b-4566-48ac-8cde-\
a8906449ff29"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CpayoffMatrix", "[", 
   RowBox[{"payoffDM", ",", "noM", ",", "noU", ",", "noD"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.684105012296954*^9, 3.68410501978755*^9}, {
   3.684106015679117*^9, 3.684106032757155*^9}, 3.684107226749753*^9, 
   3.68410777616145*^9, {3.718005723465626*^9, 3.718005724957798*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"f9f339ed-6e9d-4219-9f14-ec4fd6ee0620"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cineqmembers", "[", "mate", "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.6841071955756617`*^9, {3.684107242456472*^9, 3.684107248610227*^9}, {
   3.718005726414258*^9, 3.718005727950242*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"f0620080-0323-4a60-85b2-985dcc798459"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CdataArray", "[", 
   RowBox[{"payoffMatrix", ",", 
    RowBox[{"Cx", "[", 
     RowBox[{"noAttr", "-", "1"}], "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.684105202625043*^9, 3.6841052093160973`*^9}, {
   3.684105642018467*^9, 3.684105669830946*^9}, {3.6841063953107767`*^9, 
   3.684106404380844*^9}, 3.684107251197228*^9, {3.718005729180099*^9, 
   3.718005730395912*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"162d8ea8-a453-4914-9a88-892e1f6d36ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Maximization", "Section",
 CellChangeTimes->{{3.684107328012385*^9, 3.684107334518333*^9}, {
  3.6970297677393293`*^9, 
  3.697029776828178*^9}},ExpressionUUID->"71386755-6d8d-46c0-87b9-\
c454c7a907e6"],

Cell[CellGroupData[{

Cell["Differential Evolution Method", "Subsection",
 CellChangeTimes->{{3.69702978534949*^9, 
  3.697029795194523*^9}},ExpressionUUID->"fca830df-8a71-4e7e-be61-\
98fc484b7b07"],

Cell["The default DifferentialEvolution parameters:", "Text",
 CellChangeTimes->{{3.6304811339951696`*^9, 3.6304811513701696`*^9}, {
  3.6304855977012243`*^9, 
  3.6304856109512243`*^9}},ExpressionUUID->"c90d05f2-32d6-4dd4-93a2-\
55c5e0799e87"],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader",ExpressionUUID->
     "8d4f6802-26e9-4882-b529-464160c96067"], Cell[
    "default value", "TableHeader",ExpressionUUID->
     "52999ce8-802b-44e2-99e8-464cec048de1"], " "},
   {"\"\<CrossProbability\>\"", "0.5", Cell[TextData[{
     "probability that a gene is taken from ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["x", "TI"], 
       StyleBox["i", "TI"]]], "InlineFormula",ExpressionUUID->
      "da0c26c6-a1f5-4ebc-80bf-b4e91eb23d22"]
    }], "TableText",ExpressionUUID->"36fa5179-cf03-4963-be18-85949f9a31f4"]},
   {"\"\<InitialPoints\>\"", 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell[
    "set of initial points ", "TableText",ExpressionUUID->
     "66c968e7-dea6-4653-8d18-7b00b4c3b47a"]},
   {"\"\<PenaltyFunction\>\"", 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell[
    "function applied to constraints to penalize invalid points", "TableText",
     ExpressionUUID->"1f182333-609a-445c-a8eb-ad7bc940874c"]},
   {"\"\<PostProcess\>\"", 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell[
    "whether to post-process using local search methods ", "TableText",
     ExpressionUUID->"7f475f3f-1a41-4dd8-b7de-b2b72cada390"]},
   {"\"\<RandomSeed\>\"", "0", Cell[
    "starting value for the random number generator", "TableText",
     ExpressionUUID->"df305937-ebef-4f7c-a061-d71fcda2e742"]},
   {"\"\<ScalingFactor\>\"", "0.6", Cell[
    "scale applied to the difference vector in creating a mate ", "TableText",
     ExpressionUUID->"037d7ff4-549d-4c20-a1dc-0988d1dd1aa6"]},
   {"\"\<SearchPoints\>\"", 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell[
    "size of the population used for evolution ", "TableText",ExpressionUUID->
     "ca2c5711-eb9c-4b60-ba30-f3d8191433f8"]},
   {"\"\<Tolerance\>\"", "0.001", Cell[
    "tolerance for accepting constraint violations ", "TableText",
     ExpressionUUID->"f6467c12-463d-451b-b9a0-5a67584b877f"]}
  }]], "DefinitionBox3Col",
 CellChangeTimes->{{3.6304856989824743`*^9, 3.6304856998105993`*^9}},
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->18427541,ExpressionUUID->"325b5874-97af-491c-8ad3-6a4532534bc2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "maximize"}]], "Input",
 CellChangeTimes->{{3.684107546117594*^9, 3.684107548082258*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"2c8a2a07-5435-40dc-ba26-872f39c8d32c"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"maximize[dataArray_,noAttr_,method_:\\\"\
DifferentialEvolution\\\", permuteinvariant_:True, printflag_:True] is MSE \
specific and uses the optimize function. It uses the objective function (that \
counts the number of satisfied inequalities). It returns a list \
{max,{x1->value1, x2->value2, ...}, number of inequalities} where max is the \
maximum number of satisfied inequalities found and the solution of the \
maximization method {value1,value2,...}\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"maximize", "[", 
                    RowBox[{"dataArray_", ",", "noAttr_", ",", 
                    RowBox[{"method_", ":", "\"DifferentialEvolution\""}], 
                    ",", 
                    RowBox[{"permuteinvariant_", ":", "True"}], ",", 
                    RowBox[{"printflag_", ":", "True"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"sol", ",", "x", ",", "order", ",", 
                    "invariantdataArray", ",", "reverseorder"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    
                    RowBox[{"Developer`PackedArrayQ", "[", "dataArray", 
                    "]"}]}], ",", 
                    
                    RowBox[{"Print", "[", 
                    "\"WARNING - The dataArray IS NOT a packed array. \
Calculations will be severely slowed down.\"", "]"}]}], "]"}], ";", 
                    RowBox[{"x", "=", 
                    RowBox[{"Cx", "[", 
                    RowBox[{"noAttr", "-", "1"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"permuteinvariant", ",", 
                    RowBox[{
                    RowBox[{"order", "=", 
                    RowBox[{"Ordering", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"StandardDeviation", "/@", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"dataArray", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"2", ";;", 
                    RowBox[{"-", "1"}]}]}], "\[RightDoubleBracket]"}], 
                    "]"}]}], "]"}], "]"}]}], ";", 
                    RowBox[{"invariantdataArray", "=", 
                    RowBox[{"dataArray", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"order", "+", "1"}], ",", "1"}], "]"}]}], 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"sol", "=", 
                    RowBox[{"optimize", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"objective", "[", 
                    RowBox[{"invariantdataArray", ",", 
                    RowBox[{"Sequence", "@@", "#1"}]}], "]"}], "&"}], ",", 
                    "x", ",", "method"}], "]"}]}], ";", 
                    RowBox[{"sol", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"x", "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", 
                    RowBox[{"reverseorder", "=", 
                    RowBox[{
                    RowBox[{"SortBy", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", "order"}], "}"}], "]"}], 
                    ",", "Last"}], "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"sol", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "reverseorder", ",", 
                    RowBox[{"Length", "[", "dataArray", "]"}]}], "}"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"printflag", ",", 
                    RowBox[{"Print", "[", 
                    
                    RowBox[{
                    "\" The new ordering of attributes used for calculating \
the solutio order=\"", ",", "order"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"sol", "=", 
                    RowBox[{"optimize", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"objective", "[", 
                    RowBox[{"dataArray", ",", 
                    RowBox[{"Sequence", "@@", "#1"}]}], "]"}], "&"}], ",", 
                    "x", ",", "method"}], "]"}]}], ";", 
                    RowBox[{"sol", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"x", "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"Length", "[", "dataArray", "]"}]}], "}"}]}]}]}], 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"printflag", ",", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"\"Method \"", "<>", 
                    RowBox[{"ToString", "[", "method", "]"}]}], "]"}], ";", 
                    RowBox[{"Print", "[", 
                    RowBox[{"\"Completed : \"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"Number of satisfied inequalities\"", "\[Rule]", 
                    RowBox[{"sol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    RowBox[{"header", "\[LeftDoubleBracket]", 
                    RowBox[{"5", ";;", 
                    RowBox[{"5", "+", "noAttr", "-", "2"}]}], 
                    "\[RightDoubleBracket]"}], "\[Rule]", 
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"\"Number of inequalities\"", "\[Rule]", 
                    RowBox[{"Length", "[", "dataArray", "]"}]}]}], "}"}], ",",
                     "\"\\nSatisfied Ineqs Analysis:\\n \"", ",", 
                    RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"objectiveV", "[", 
                    RowBox[{"dataArray", ",", 
                    RowBox[{"Sequence", "@@", 
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
                    RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "]"}]}]}],
                     "]"}], ";", "sol"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`maximize\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"maximize[dataArray_,noAttr_,method_:\\\"\
DifferentialEvolution\\\", permuteinvariant_:True, printflag_:True] is MSE \
specific and uses the optimize function. It uses the objective function (that \
counts the number of satisfied inequalities). It returns a list \
{max,{x1->value1, x2->value2, ...}, number of inequalities} where max is the \
maximum number of satisfied inequalities found and the solution of the \
maximization method {value1,value2,...}\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{12.5, {4., 8.5}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{12.5, {4., 8.5}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "maximize[dataArray_,noAttr_,method_:\"DifferentialEvolution\", \
permuteinvariant_:True, printflag_:True] is MSE specific and uses the \
optimize function. It uses the objective function (that counts the number of \
satisfied inequalities). It returns a list {max,{x1->value1, x2->value2, \
...}, number of inequalities} where max is the maximum number of satisfied \
inequalities found and the solution of the maximization method \
{value1,value2,...}", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`maximize, {$CellContext`maximize[
         Pattern[$CellContext`dataArray, 
          Blank[]], 
         Pattern[$CellContext`noAttr, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`method, 
           Blank[]], "DifferentialEvolution"], 
         Optional[
          Pattern[$CellContext`permuteinvariant, 
           Blank[]], True], 
         Optional[
          Pattern[$CellContext`printflag, 
           Blank[]], True]] :> 
       Module[{$CellContext`sol, $CellContext`x, $CellContext`order, \
$CellContext`invariantdataArray, $CellContext`reverseorder}, If[
           Not[
            Developer`PackedArrayQ[$CellContext`dataArray]], 
           Print[
           "WARNING - The dataArray IS NOT a packed array. Calculations will \
be severely slowed down."]]; $CellContext`x = \
$CellContext`Cx[$CellContext`noAttr - 1]; 
         If[$CellContext`permuteinvariant, $CellContext`order = Ordering[
              N[
               Map[StandardDeviation, 
                Transpose[
                 Part[$CellContext`dataArray, All, 
                  Span[2, -1]]]]]]; $CellContext`invariantdataArray = 
            Part[$CellContext`dataArray, All, 
              
              Prepend[$CellContext`order + 1, 
               1]]; $CellContext`sol = \
$CellContext`optimize[$CellContext`objective[$CellContext`invariantdataArray, 
               Apply[
               Sequence, #]]& , $CellContext`x, $CellContext`method]; \
$CellContext`sol = {
              Part[$CellContext`sol, 1], 
              ReplaceAll[$CellContext`x, 
               Part[$CellContext`sol, 2]]}; $CellContext`reverseorder = Part[
              SortBy[
               Transpose[{
                 Part[$CellContext`sol, 2], $CellContext`order}], Last], All, 
              1]; $CellContext`sol = {
              Part[$CellContext`sol, 1], $CellContext`reverseorder, 
              Length[$CellContext`dataArray]}; If[$CellContext`printflag, 
             Print[
             " The new ordering of attributes used for calculating the \
solutio order=", $CellContext`order]], $CellContext`sol = \
$CellContext`optimize[$CellContext`objective[$CellContext`dataArray, 
               Apply[
               Sequence, #]]& , $CellContext`x, $CellContext`method]; \
$CellContext`sol = {
              Part[$CellContext`sol, 1], 
              ReplaceAll[$CellContext`x, 
               Part[$CellContext`sol, 2]], 
              Length[$CellContext`dataArray]}]; 
         If[$CellContext`printflag, Print[
             StringJoin["Method ", 
              ToString[$CellContext`method]]]; 
           Print[
            "Completed : ", {
             "Number of satisfied inequalities" -> Part[$CellContext`sol, 1], 
              Thread[Part[$CellContext`header, 
                 Span[5, 5 + $CellContext`noAttr - 2]] -> 
               Part[$CellContext`sol, 2]], "Number of inequalities" -> 
              Length[$CellContext`dataArray]}, 
             "\nSatisfied Ineqs Analysis:\n ", 
             Grid[
              $CellContext`objectiveV[$CellContext`dataArray, 
               Apply[Sequence, 
                Part[$CellContext`sol, 2]]], Frame -> 
              All]]]; $CellContext`sol]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Global`maximize"], 
   False]]], "Output",
 CellChangeTimes->{3.904216248260663*^9, 3.9042164403142548`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"45692b32-6661-401e-9479-6ea08e01b7bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"method", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<DifferentialEvolution\>\"", ",", 
     RowBox[{"\"\<CrossProbability\>\"", "\[Rule]", "0.5"}], ",", 
     RowBox[{"\"\<InitialPoints\>\"", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"\"\<PenaltyFunction\>\"", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"\"\<PostProcess\>\"", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"\"\<RandomSeed\>\"", "\[Rule]", "12"}], ",", 
     RowBox[{"\"\<ScalingFactor\>\"", "\[Rule]", "0.6"}], ",", 
     RowBox[{"\"\<SearchPoints\>\"", "\[Rule]", "300"}], ",", 
     RowBox[{"\"\<Tolerance\>\"", "\[Rule]", "0.001"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"maximize", "[", 
    RowBox[{"dataArray", ",", "noAttr", ",", "method"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6304822228477087`*^9, 3.6304823703789587`*^9}, {
   3.6304824780195837`*^9, 3.6304824869883337`*^9}, {3.6304825679258337`*^9, 
   3.6304825738008337`*^9}, {3.6304855466699743`*^9, 3.6304855623418493`*^9}, 
   3.6304857214199743`*^9, 3.6304858862480993`*^9, {3.630488085369193*^9, 
   3.630488085775443*^9}, {3.6305596885382614`*^9, 3.6305597002970505`*^9}, {
   3.6305597806851206`*^9, 3.6305598314048877`*^9}, {3.630587798517194*^9, 
   3.630587829517194*^9}, 3.684107472522455*^9, 3.684107610829526*^9, {
   3.684107690541943*^9, 3.684107693032625*^9}, {3.6841079213122168`*^9, 
   3.684107930131075*^9}, {3.7177297091693068`*^9, 3.717729711996545*^9}, {
   3.724868597819215*^9, 3.724868598249215*^9}, {3.7248686544490075`*^9, 
   3.7248686565705276`*^9}, {3.7248687103007975`*^9, 3.724868710510798*^9}, {
   3.7248774510672636`*^9, 3.7248774590293083`*^9}, 3.7516415965428495`*^9, 
   3.751641658617448*^9, {3.751647045250207*^9, 3.7516470484107704`*^9}, {
   3.75164708378633*^9, 3.7516470843541193`*^9}, {3.7516475149182653`*^9, 
   3.7516475169412184`*^9}, {3.7516480255365105`*^9, 3.751648027369003*^9}, {
   3.7516480761648912`*^9, 3.75164807831883*^9}, {3.751648120530672*^9, 
   3.751648121114725*^9}, {3.7516481824856157`*^9, 3.7516481856906524`*^9}, {
   3.7516482326901965`*^9, 3.7516482336707516`*^9}, {3.751648347412221*^9, 
   3.751648348285627*^9}, {3.7516484147359934`*^9, 3.751648416517783*^9}, {
   3.7516486028458767`*^9, 3.751648604021776*^9}, {3.7516487373079443`*^9, 
   3.7516487398893824`*^9}, {3.751648902558056*^9, 3.751648908567179*^9}, {
   3.7516489620177593`*^9, 3.7516489628587303`*^9}, {3.7516490220502386`*^9, 
   3.751649022487234*^9}, {3.7516495184281235`*^9, 3.7516495189351125`*^9}, {
   3.751649575161005*^9, 3.751649575453924*^9}, {3.751649617497419*^9, 
   3.7516496189174323`*^9}, 3.7516497089715567`*^9, {3.75165580686434*^9, 
   3.751655807372949*^9}, {3.7516559568995624`*^9, 3.751655959601763*^9}, {
   3.7517393876180973`*^9, 3.75173939049594*^9}, {3.7517394346569033`*^9, 
   3.751739436859147*^9}, {3.751739481552821*^9, 3.751739482099723*^9}, {
   3.7517396360990305`*^9, 3.7517396376428185`*^9}, {3.751739707744193*^9, 
   3.751739709754423*^9}, {3.7517397594672966`*^9, 3.751739764678769*^9}, {
   3.7517398141128025`*^9, 3.7517398439213953`*^9}, {3.7517398946867113`*^9, 
   3.751739906610604*^9}, {3.751777318100591*^9, 3.7517773186176395`*^9}, {
   3.751825367809388*^9, 3.751825373827042*^9}, {3.751825474965791*^9, 
   3.751825478539391*^9}, {3.751825624973032*^9, 3.751825628640165*^9}, {
   3.7518261149734726`*^9, 3.751826118642008*^9}, {3.751827283346988*^9, 
   3.7518272846786757`*^9}, {3.751828701008978*^9, 3.751828702830877*^9}, {
   3.7526032617471714`*^9, 3.752603262307495*^9}, {3.7526040126838017`*^9, 
   3.7526040128339586`*^9}, {3.7526055501957226`*^9, 
   3.7526055559472523`*^9}, {3.7528387661596394`*^9, 3.752838767052846*^9}, {
   3.752838857217001*^9, 3.7528388578953648`*^9}, {3.753019178139283*^9, 
   3.753019180826672*^9}, {3.7752181687838116`*^9, 3.7752181786457663`*^9}, {
   3.7752496747887273`*^9, 3.775249691810316*^9}, {3.850745347464692*^9, 
   3.8507453480635204`*^9}, {3.85074575835836*^9, 3.850745758952396*^9}, {
   3.850789454211578*^9, 3.8507894553993645`*^9}, {3.85780607694471*^9, 
   3.8578060831430407`*^9}, {3.8578786170114713`*^9, 3.857878631289914*^9}, {
   3.8579131611269474`*^9, 3.857913164522959*^9}, {3.857913203631836*^9, 
   3.8579132235939474`*^9}, {3.857913792376492*^9, 3.8579137968535423`*^9}, {
   3.857925333420268*^9, 3.8579253344305506`*^9}, {3.857925394734469*^9, 
   3.8579253971045094`*^9}, {3.8628428255157876`*^9, 
   3.8628428302592297`*^9}, {3.8628447105042686`*^9, 3.862844711927375*^9}, {
   3.8628455627396283`*^9, 3.8628455653331985`*^9}, {3.86284818046189*^9, 
   3.862848183287689*^9}, {3.862849621830513*^9, 3.8628496245250998`*^9}, {
   3.8628833996597953`*^9, 3.8628834017315784`*^9}, {3.8628843058150887`*^9, 
   3.8628843094611044`*^9}, {3.862886093681155*^9, 3.8628860976220264`*^9}, 
   3.865498252544183*^9, {3.8655820649194355`*^9, 3.8655821004631696`*^9}, 
   3.865582162624036*^9, 3.8655821967758293`*^9, 3.8655858398409653`*^9, {
   3.865585907522145*^9, 3.865585934636943*^9}, {3.865585999201132*^9, 
   3.8655860017480927`*^9}, 3.8655934705105853`*^9, {3.8766454004576874`*^9, 
   3.87664540414887*^9}, 3.87664555477232*^9, {3.876645667364785*^9, 
   3.8766456685541506`*^9}, {3.876645785189412*^9, 3.8766457906753597`*^9}, {
   3.877667904958999*^9, 3.8776679075373583`*^9}, {3.902999855641488*^9, 
   3.9029998869395638`*^9}, {3.902999964934442*^9, 3.902999983445662*^9}, {
   3.903867944431066*^9, 3.903867957949087*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"6c4ca98c-0ad3-47b8-ac3d-462340d8b54b"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" The new ordering of attributes used for calculating the \
solutio order=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "1", ",", "3", ",", "2", ",", "4"}], "}"}]}],
  SequenceForm[
  " The new ordering of attributes used for calculating the solutio order=", {
   5, 6, 1, 3, 2, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.9038665573853683`*^9, 3.903867600439234*^9, 
  3.904216248307482*^9, 3.9042164524644437`*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"9b176818-e375-452e-aad2-1f58ea5f4599"],

Cell[BoxData["\<\"Method {DifferentialEvolution, CrossProbability -> 0.5, \
InitialPoints -> Automatic, PenaltyFunction -> Automatic, PostProcess -> \
Automatic, RandomSeed -> 12, ScalingFactor -> 0.6, SearchPoints -> 300, \
Tolerance -> 0.001}\"\>"], "Print",
 CellChangeTimes->{3.9038665573853683`*^9, 3.903867600439234*^9, 
  3.904216248307482*^9, 3.9042164524644437`*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"eda8e113-e049-4ac5-85c7-9d94b5d33389"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Completed : \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Number of satisfied inequalities\"\>", "\[Rule]", 
      "3731.`"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"cites_size\"\>", "\[Rule]", "0.06642024971697014`"}], ",", 
       RowBox[{"\<\"kn_similarity\"\>", "\[Rule]", "4.981905468469215`"}], 
       ",", 
       RowBox[{"\<\"_sq (kn_similarity)\"\>", "\[Rule]", 
        RowBox[{"-", "2.4016513033944378`"}]}], ",", 
       RowBox[{"\<\"domain_similarity\"\>", "\[Rule]", "2.76088191399337`"}], 
       ",", 
       RowBox[{"\<\"cites_rankcmd\"\>", "\[Rule]", "1.3983116175519597`"}], 
       ",", 
       RowBox[{"\<\"cites_experience\"\>", "\[Rule]", 
        "1.2889501155821126`"}]}], "}"}], ",", 
     RowBox[{"\<\"Number of inequalities\"\>", "\[Rule]", "3745"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\"\\nSatisfied Ineqs Analysis:\\n \"\>", 
   "\[InvisibleSpace]", 
   TagBox[GridBox[{
      {"\<\"Market no\"\>", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10",
        "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", 
       "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33"},
      {"\<\"Satisfied\"\>", "36", "66", "20", "36", "28", "21", "21", "55", 
       "15", "66", "208", "28", "90", "209", "21", "55", "209", "104", "91", 
       "276", "44", "149", "170", "66", "153", "435", "28", "153", "231", 
       "105", "120", "377", "45"},
      {"\<\"Total\"\>", "36", "66", "21", "36", "28", "21", "21", "55", "15", 
       "66", "210", "28", "91", "210", "21", "55", "210", "105", "91", "276", 
       "45", "153", "171", "66", "153", "435", "28", "153", "231", "105", 
       "120", "378", "45"},
      {"\<\"Percentage %\"\>", "100", "100", "95", "100", "100", "100", "100",
        "100", "100", "100", "99", "100", "99", "100", "100", "100", "100", 
       "99", "100", "100", "98", "97", "99", "100", "100", "100", "100", 
       "100", "100", "100", "100", "100", "100"}
     },
     AutoDelete->False,
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]}],
  SequenceForm[
  "Completed : ", {
   "Number of satisfied inequalities" -> 3731., {
    "cites_size" -> 0.06642024971697014, "kn_similarity" -> 4.981905468469215,
      "_sq (kn_similarity)" -> -2.4016513033944378`, "domain_similarity" -> 
     2.76088191399337, "cites_rankcmd" -> 1.3983116175519597`, 
     "cites_experience" -> 1.2889501155821126`}, "Number of inequalities" -> 
    3745}, "\nSatisfied Ineqs Analysis:\n ", 
   Grid[{{
     "Market no", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
      18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}, {
     "Satisfied", 36, 66, 20, 36, 28, 21, 21, 55, 15, 66, 208, 28, 90, 209, 
      21, 55, 209, 104, 91, 276, 44, 149, 170, 66, 153, 435, 28, 153, 231, 
      105, 120, 377, 45}, {
     "Total", 36, 66, 21, 36, 28, 21, 21, 55, 15, 66, 210, 28, 91, 210, 21, 
      55, 210, 105, 91, 276, 45, 153, 171, 66, 153, 435, 28, 153, 231, 105, 
      120, 378, 45}, {
     "Percentage %", 100, 100, 95, 100, 100, 100, 100, 100, 100, 100, 99, 100,
       99, 100, 100, 100, 100, 99, 100, 100, 98, 97, 99, 100, 100, 100, 100, 
      100, 100, 100, 100, 100, 100}}, Frame -> All]],
  Editable->False]], "Print",
 CellChangeTimes->{3.9038665573853683`*^9, 3.903867600439234*^9, 
  3.904216248307482*^9, 3.9042164524800653`*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"7d83dbee-26f6-45eb-b134-18b7483d5a6c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Confidence Intervals", "Section",
 CellChangeTimes->{{3.6304822013320837`*^9, 3.6304822015664587`*^9}, {
  3.684107642567583*^9, 
  3.684107657451939*^9}},ExpressionUUID->"95c09f6d-9646-4129-9b50-\
7d1c427084f3"],

Cell[CellGroupData[{

Cell["execution", "Subsection",
 CellChangeTimes->{{3.902898545286371*^9, 
  3.902898547013657*^9}},ExpressionUUID->"f0dde87b-1842-47c0-8251-\
87267e62fdd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ssSize", "=", "28"}], ";", 
  RowBox[{"numSubsamples", "=", "2500"}], ";", 
  RowBox[{"alpha", "=", "0.05"}], ";"}]], "Input",
 CellChangeTimes->{{3.630310397247117*^9, 3.630310402465867*^9}, 
   3.630310937637742*^9, 3.6305594046037283`*^9, {3.6305728467632647`*^9, 
   3.6305728468413897`*^9}, 3.6305736592388506`*^9, {3.671170646515985*^9, 
   3.671170649539482*^9}, 3.671171562366686*^9, 3.671171630504067*^9, 
   3.671172133070477*^9, {3.671172621267507*^9, 3.671172623146764*^9}, {
   3.71843801786828*^9, 3.7184380229677043`*^9}, {3.7188243637410774`*^9, 
   3.718824364402115*^9}, {3.7188257767346506`*^9, 3.7188257811396737`*^9}, {
   3.7189131997942867`*^9, 3.718913200236312*^9}, {3.741631622456807*^9, 
   3.7416316319839354`*^9}, 3.7504441048374376`*^9, 3.7516317353686614`*^9, 
   3.751647088775778*^9, {3.751655354778119*^9, 3.751655355127874*^9}, {
   3.7526045538867445`*^9, 3.7526045677943745`*^9}, {3.757067916732103*^9, 
   3.7570679169149556`*^9}, {3.774934813909644*^9, 3.774934815423119*^9}, {
   3.775215230698141*^9, 3.775215232189506*^9}, {3.7752181833646107`*^9, 
   3.7752181838635564`*^9}, {3.775249658186366*^9, 3.775249668364419*^9}, 
   3.775367986632574*^9, {3.7753718321118584`*^9, 3.7753718329430957`*^9}, {
   3.775398860532031*^9, 3.775398861203822*^9}, 3.7797782923047695`*^9, {
   3.7802006193051033`*^9, 3.780200619873547*^9}, {3.78020352117225*^9, 
   3.7802035219528413`*^9}, 3.7805960624221954`*^9, {3.780599886973386*^9, 
   3.7805998870968304`*^9}, {3.850735876075034*^9, 3.8507358785644894`*^9}, 
   3.8507429367435045`*^9, 3.850754348909645*^9, {3.8507894605441127`*^9, 
   3.850789461601899*^9}, {3.850790290417602*^9, 3.850790291503863*^9}, 
   3.857803612552045*^9, {3.865575188629183*^9, 3.86557518979929*^9}, 
   3.86558196687096*^9, 3.8679441380236006`*^9, 3.868032956196849*^9, 
   3.8682436507678537`*^9, 3.8776678873997154`*^9, {3.8789691804921722`*^9, 
   3.878969181411969*^9}, {3.8795318153698215`*^9, 3.8795318173445454`*^9}, 
   3.879589339701396*^9, {3.879594449094036*^9, 3.879594450856142*^9}, {
   3.8795957645330653`*^9, 3.8795957660639195`*^9}, 3.8796245263338423`*^9, {
   3.8796245838460083`*^9, 3.8796245853606586`*^9}, {3.879878633677662*^9, 
   3.879878635603636*^9}, {3.8799072977399673`*^9, 3.8799073020621767`*^9}, {
   3.879961593460987*^9, 3.879961603321316*^9}, {3.8815831007193136`*^9, 
   3.8815831010847325`*^9}, {3.881643195494691*^9, 3.881643205386758*^9}, {
   3.901929914318879*^9, 3.901929917204464*^9}, {3.901930357798924*^9, 
   3.90193037727621*^9}, {3.9019419764141893`*^9, 3.901941978398734*^9}, {
   3.9022737632725677`*^9, 3.902273764859241*^9}, {3.902908052921977*^9, 
   3.902908054143011*^9}, {3.9029937321745853`*^9, 3.902993734790411*^9}, {
   3.902995564770545*^9, 3.902995567388145*^9}, {3.902999120343672*^9, 
   3.902999121488326*^9}, {3.903057221473806*^9, 3.903057221801098*^9}, {
   3.903058513202173*^9, 3.903058513338109*^9}, {3.903744673228565*^9, 
   3.903744673405995*^9}, {3.903745249051074*^9, 3.903745249349374*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"8153c58f-56c4-494d-b2a3-491cfd546369"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
    "If", " ", "you", " ", "want", " ", "to", " ", "calculate", " ", 
     "confidence", " ", "intervals", " ", "with", " ", "other", " ", 
     "subSamples", " ", "please", " ", "uncomment", " ", "the", " ", "code", 
     " ", "below"}], "*)"}],
   FontSize->14,
   FontWeight->"Bold",
   FontColor->RGBColor[0.5019607843137255, 0., 0.]], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Starting pointIdentified process where alpha = \>\"", ",", 
        "alpha"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"pointIdentified", "=", 
       RowBox[{"pointIdentifiedCR", "[", 
        RowBox[{"ssSize", ",", "numSubsamples", ",", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{"Cx", "[", 
          RowBox[{"noAttr", "-", "1"}], "]"}], ",", " ", "groupIDs", ",", " ",
          "dataArray", ",", "method", ",", "True", ",", 
         RowBox[{"confidenceLevel", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"1", "-", "alpha"}], ")"}]}], ",", 
         RowBox[{"asymptotics", "\[Rule]", "nests"}], ",", " ", 
         RowBox[{"progressUpdate", "\[Rule]", "10"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"pointIdentified", ",", "\[IndentingNewLine]", 
        RowBox[{"ListPlot", "@", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Map", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"MapIndexed", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Flatten", "@", 
                  RowBox[{"{", 
                   RowBox[{"#2", ",", "#1"}], "}"}]}], "&"}], ",", "#"}], 
               "]"}], "&"}], ",", "\[IndentingNewLine]", 
             RowBox[{"pointIdentified", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
            "]"}], ",", "1"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
     ")"}], "//", "AbsoluteTiming"}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.630310275200242*^9, {3.630310329918992*^9, 3.630310357309617*^9}, {
   3.630310589606492*^9, 3.630310614840867*^9}, {3.630310768262742*^9, 
   3.630310769262742*^9}, {3.630311286325242*^9, 3.630311287637742*^9}, {
   3.6303355083603983`*^9, 3.6303355101728983`*^9}, {3.6303358144541483`*^9, 
   3.6303358164853983`*^9}, {3.6303359362353983`*^9, 
   3.6303359372822733`*^9}, {3.6304824158477087`*^9, 
   3.6304824168008337`*^9}, {3.6305725670601397`*^9, 
   3.6305725904507647`*^9}, {3.6305729219195147`*^9, 
   3.6305729247632647`*^9}, {3.6305733948794756`*^9, 
   3.6305734127544756`*^9}, {3.6305734630669756`*^9, 
   3.6305734834263506`*^9}, {3.9019303608972*^9, 3.901930381574362*^9}, {
   3.90193174345966*^9, 3.901931747603012*^9}, {3.9029935511034718`*^9, 
   3.902993556942482*^9}, {3.902993724423065*^9, 3.90299372783045*^9}, {
   3.903057262945971*^9, 3.903057263617872*^9}, {3.903226447729773*^9, 
   3.903226452942013*^9}, {3.903228937319675*^9, 3.903228973697847*^9}, {
   3.903229012235186*^9, 3.903229012346157*^9}, {3.9038626372369957`*^9, 
   3.903862676350317*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"058a9a13-9dae-4800-892b-318cbb05cce5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "If", " ", "you", " ", "need", " ", "to", " ", "save", " ", "the", " ", 
    "calculated", " ", "list", " ", "of", " ", "subSamples", " ", "please", 
    " ", "uncomment", " ", "the", " ", "code", " ", "below"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"savedGroups", "=", "randomGroups"}], ";", "\[IndentingNewLine]", 
    RowBox[{"savedGroups", ">>", "\"\<savedGroups.m\>\""}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"savedGroups", "\[IndentingNewLine]", "savedGroups"}], "=."}], 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"clears", " ", "the", " ", "variable"}], "*)"}], 
   "\[IndentingNewLine]", "*)"}]}]], "Input",
 CellChangeTimes->{{3.901942509585409*^9, 3.901942520934511*^9}, {
  3.902285468457823*^9, 3.9022854734303617`*^9}, {3.902285514906727*^9, 
  3.90228551745146*^9}, {3.902285588550123*^9, 3.9022855888590612`*^9}, {
  3.90299361750697*^9, 3.902993620223475*^9}, {3.902994574163557*^9, 
  3.902994576195326*^9}, {3.9032264731443157`*^9, 3.9032264764855623`*^9}, {
  3.903228896995109*^9, 3.90322890721941*^9}, {3.903228982052988*^9, 
  3.903229038324854*^9}},
 Background->RGBColor[1, 1, 0],
 CellLabel->"In[33]:=",ExpressionUUID->"4a0315c1-852a-4cb2-a867-db7e9d4bd545"],

Cell[CellGroupData[{

Cell["Run with saved subSamples (Random Groups)", "Subsubsection",
 CellChangeTimes->{{3.903229048912941*^9, 3.903229066604827*^9}, {
  3.903229104518812*^9, 
  3.903229120347959*^9}},ExpressionUUID->"7aa69475-664e-4202-9223-\
82711749cbfa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"savedGroups", "=", 
   RowBox[{"<<", "\"\<../data/savedGroupsReplication.m\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"numSubsamples", "=", 
  RowBox[{"Length", "[", "savedGroups", "]"}]}]}], "Input",
 CellChangeTimes->{{3.902272788560197*^9, 3.90227284311373*^9}, {
   3.902272927239952*^9, 3.902272971076291*^9}, {3.902273498057432*^9, 
   3.90227349855459*^9}, {3.902273799563682*^9, 3.90227380846456*^9}, {
   3.902274196645982*^9, 3.902274247667609*^9}, {3.902274417532733*^9, 
   3.9022744354206448`*^9}, {3.9022837346457987`*^9, 
   3.9022837956321363`*^9}, {3.902285528417015*^9, 3.9022855822366533`*^9}, {
   3.902993623137549*^9, 3.902993628132927*^9}, {3.90299457925368*^9, 
   3.90299458271485*^9}, {3.9032264804326963`*^9, 3.903226501411935*^9}, {
   3.903228912144611*^9, 3.903228912899105*^9}, {3.90339938022556*^9, 
   3.903399398679229*^9}, {3.9037442779774113`*^9, 3.903744279561153*^9}, 
   3.903744383980123*^9, {3.9037446905593567`*^9, 3.903744708805357*^9}, {
   3.9038432358713007`*^9, 3.903843238115677*^9}, {3.9038648543216276`*^9, 
   3.9038648560607395`*^9}, {3.903866570112615*^9, 3.903866625723048*^9}, {
   3.903867568828137*^9, 3.903867569812767*^9}},
 Background->RGBColor[1, 1, 0],
 CellLabel->"In[34]:=",ExpressionUUID->"73344bb0-0037-4945-acfe-2ea9b7dbcd06"],

Cell[BoxData["2500"], "Output",
 CellChangeTimes->{{3.9038665823610773`*^9, 3.903866626473473*^9}, 
   3.90386760070282*^9, 3.9042162484637313`*^9, 3.904216452620655*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"b928d65f-2be4-44e8-923f-7af01d72924a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<Starting pointIdentified process where alpha = \>\"", ",", 
       "alpha"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"pointIdentified", "=", 
      RowBox[{"pointIdentifiedCR", "[", 
       RowBox[{"ssSize", ",", "numSubsamples", ",", 
        RowBox[{"sol", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
        RowBox[{"Cx", "[", 
         RowBox[{"noAttr", "-", "1"}], "]"}], ",", " ", "groupIDs", ",", " ", 
        "dataArray", ",", "method", ",", "True", ",", 
        RowBox[{"confidenceLevel", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"1", "-", "alpha"}], ")"}]}], ",", 
        RowBox[{"asymptotics", "\[Rule]", "nests"}], ",", " ", 
        RowBox[{"progressUpdate", "\[Rule]", "10"}], ",", 
        RowBox[{"useSavedGroups", "\[Rule]", "True"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointIdentified", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"pointIdentified", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"MapIndexed", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Flatten", "@", 
                 RowBox[{"{", 
                  RowBox[{"#2", ",", "#1"}], "}"}]}], "&"}], ",", "#"}], 
              "]"}], "&"}], ",", "\[IndentingNewLine]", 
            RowBox[{"pointIdentified", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
           "]"}], ",", "1"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
    ")"}], "//", "AbsoluteTiming"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Attention", ":", " ", 
     RowBox[{
     "the", " ", "graph", " ", "represents", " ", "all", " ", "point", " ", 
      "estimates"}]}], ",", " ", 
    RowBox[{
    "regardless", " ", "of", " ", "whether", " ", "they", " ", "fall", " ", 
     "or", " ", "not", " ", "in", " ", "the", " ", "confidence", " ", 
     "intervals"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.630310275200242*^9, {3.630310329918992*^9, 3.630310357309617*^9}, {
   3.630310589606492*^9, 3.630310614840867*^9}, {3.630310768262742*^9, 
   3.630310769262742*^9}, {3.630311286325242*^9, 3.630311287637742*^9}, {
   3.6303355083603983`*^9, 3.6303355101728983`*^9}, {3.6303358144541483`*^9, 
   3.6303358164853983`*^9}, {3.6303359362353983`*^9, 
   3.6303359372822733`*^9}, {3.6304824158477087`*^9, 
   3.6304824168008337`*^9}, {3.6305725670601397`*^9, 
   3.6305725904507647`*^9}, {3.6305729219195147`*^9, 
   3.6305729247632647`*^9}, {3.6305733948794756`*^9, 
   3.6305734127544756`*^9}, {3.6305734630669756`*^9, 
   3.6305734834263506`*^9}, {3.9019303608972*^9, 3.901930381574362*^9}, {
   3.90193174345966*^9, 3.901931747603012*^9}, {3.9019420126839457`*^9, 
   3.9019420224949703`*^9}, {3.901942065601927*^9, 3.901942067655796*^9}, 
   3.9022730419267*^9, {3.902287817024399*^9, 3.9022878231221657`*^9}, {
   3.9030575205002193`*^9, 3.903057521191359*^9}, {3.903745134413439*^9, 
   3.903745161126507*^9}, {3.9042311530890865`*^9, 
   3.9042312432030044`*^9}},ExpressionUUID->"1e72ac41-1763-4f4e-8c85-\
5e200208df11"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Starting pointIdentified process where alpha = \"\>", 
   "\[InvisibleSpace]", "0.05`"}],
  SequenceForm["Starting pointIdentified process where alpha = ", 0.05],
  Editable->False]], "Print",
 CellChangeTimes->{3.9038666311231327`*^9, 3.9038676007633047`*^9, 
  3.904216248494938*^9, 3.904216452667519*^9},
 CellLabel->
  "During evaluation of \
In[36]:=",ExpressionUUID->"0cd6014c-299e-4190-bb70-13e1951a525d"],

Cell["\<\

Iterations completed:10\
\>", "Print",
 CellChangeTimes->{3.9038666311231327`*^9, 3.9038676007633047`*^9, 
  3.904216248494938*^9, 3.9042165968024836`*^9},
 CellLabel->
  "During evaluation of \
In[36]:=",ExpressionUUID->"93adbaf4-4cb7-47c2-9bcb-b8f778d57d48"]
}, Open  ]],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.903866834888376*^9, 3.903885251783269*^9, 
  3.904216270617118*^9, 3.9042166374962234`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"5977a51f-a2cb-44cf-b8ab-eaa58149fdee"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{949, 467},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DockedCells->{},
TaggingRules->Association["TryRealOnly" -> False],
Magnification->1.25,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (May 11, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"89f89306-2a43-497c-8afa-23cc57c25492"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 864, 17, 326, "Section",ExpressionUUID->"a07aa20e-9937-4186-bc43-89ffc8a76382"],
Cell[CellGroupData[{
Cell[1469, 43, 1227, 23, 107, "Input",ExpressionUUID->"42a4d363-9498-4b0b-bf7c-5f123f12c347"],
Cell[CellGroupData[{
Cell[2721, 70, 152, 3, 30, "Echo",ExpressionUUID->"d170e1db-f25c-4dfa-915b-aba6a603702d"],
Cell[2876, 75, 150, 3, 30, "Echo",ExpressionUUID->"3a7f0148-35d9-4b07-9562-0d53610e720f"],
Cell[3029, 80, 154, 3, 30, "Echo",ExpressionUUID->"c628d0aa-5d18-4085-81b9-2adb648abba4"],
Cell[3186, 85, 158, 3, 30, "Echo",ExpressionUUID->"865a6d79-ad95-48ad-80fd-27186f057953"],
Cell[3347, 90, 155, 3, 30, "Echo",ExpressionUUID->"c769bc55-3e27-43fc-8c39-32c598e2469e"],
Cell[3505, 95, 155, 3, 30, "Echo",ExpressionUUID->"56376726-c8bd-4f58-b072-b211fc1fefff"],
Cell[3663, 100, 152, 3, 30, "Echo",ExpressionUUID->"c2fa2dff-ee98-4a3a-99f5-e8a2775cb1ba"],
Cell[3818, 105, 154, 3, 30, "Echo",ExpressionUUID->"243e8447-fbcf-4239-ace0-22710cc3b1b4"],
Cell[3975, 110, 156, 3, 30, "Echo",ExpressionUUID->"cfe8d165-4bc1-4026-9fcb-c08ffbe5782a"]
}, Open  ]],
Cell[4146, 116, 293, 5, 40, "Output",ExpressionUUID->"98a4b531-2c5b-4f28-a296-9b995ec067dc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4488, 127, 262, 4, 83, "Section",ExpressionUUID->"416c3353-f5b9-4d09-be4d-6ea5d195adb0"],
Cell[4753, 133, 232, 4, 43, "Text",ExpressionUUID->"cf1aea60-faba-4443-8417-502a3ce75e62"],
Cell[4988, 139, 498, 9, 55, "Input",ExpressionUUID->"959f3ecc-5958-4830-87a9-802b23509b58"],
Cell[CellGroupData[{
Cell[5511, 152, 505, 11, 60, "Input",ExpressionUUID->"534c9725-9fc5-4ddc-a626-008f72861c46"],
Cell[6019, 165, 10450, 264, 187, "Output",ExpressionUUID->"13556962-eca8-4d83-bba8-b48e36da38eb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16518, 435, 271, 6, 131, "Section",ExpressionUUID->"ced5500b-4566-48ac-8cde-a8906449ff29"],
Cell[16792, 443, 431, 8, 35, "Input",ExpressionUUID->"f9f339ed-6e9d-4219-9f14-ec4fd6ee0620"],
Cell[17226, 453, 308, 6, 35, "Input",ExpressionUUID->"f0620080-0323-4a60-85b2-985dcc798459"],
Cell[17537, 461, 499, 10, 35, "Input",ExpressionUUID->"162d8ea8-a453-4914-9a88-892e1f6d36ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18073, 476, 208, 4, 83, "Section",ExpressionUUID->"71386755-6d8d-46c0-87b9-c454c7a907e6"],
Cell[CellGroupData[{
Cell[18306, 484, 176, 3, 67, "Subsection",ExpressionUUID->"fca830df-8a71-4e7e-be61-98fc484b7b07"],
Cell[18485, 489, 244, 4, 43, "Text",ExpressionUUID->"c90d05f2-32d6-4dd4-93a2-55c5e0799e87"],
Cell[18732, 495, 2463, 52, 233, "DefinitionBox3Col",ExpressionUUID->"325b5874-97af-491c-8ad3-6a4532534bc2",
 CellID->18427541],
Cell[CellGroupData[{
Cell[21220, 551, 196, 3, 35, "Input",ExpressionUUID->"2c8a2a07-5435-40dc-ba26-872f39c8d32c"],
Cell[21419, 556, 21001, 476, 214, "Output",ExpressionUUID->"45692b32-6661-401e-9479-6ea08e01b7bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42457, 1037, 5604, 82, 107, "Input",ExpressionUUID->"6c4ca98c-0ad3-47b8-ac3d-462340d8b54b"],
Cell[CellGroupData[{
Cell[48086, 1123, 613, 14, 27, "Print",ExpressionUUID->"9b176818-e375-452e-aad2-1f58ea5f4599"],
Cell[48702, 1139, 480, 8, 72, "Print",ExpressionUUID->"eda8e113-e049-4ac5-85c7-9d94b5d33389"],
Cell[49185, 1149, 3643, 69, 789, "Print",ExpressionUUID->"7d83dbee-26f6-45eb-b134-18b7483d5a6c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[52901, 1226, 218, 4, 83, "Section",ExpressionUUID->"95c09f6d-9646-4129-9b50-7d1c427084f3"],
Cell[CellGroupData[{
Cell[53144, 1234, 157, 3, 67, "Subsection",ExpressionUUID->"f0dde87b-1842-47c0-8251-87267e62fdd7"],
Cell[53304, 1239, 3143, 44, 35, "Input",ExpressionUUID->"8153c58f-56c4-494d-b2a3-491cfd546369"],
Cell[56450, 1285, 3468, 73, 393, "Input",ExpressionUUID->"058a9a13-9dae-4800-892b-318cbb05cce5"],
Cell[59921, 1360, 1329, 27, 222, "Input",ExpressionUUID->"4a0315c1-852a-4cb2-a867-db7e9d4bd545"],
Cell[CellGroupData[{
Cell[61275, 1391, 241, 4, 56, "Subsubsection",ExpressionUUID->"7aa69475-664e-4202-9223-82711749cbfa"],
Cell[CellGroupData[{
Cell[61541, 1399, 1339, 22, 80, "Input",ExpressionUUID->"73344bb0-0037-4945-acfe-2ea9b7dbcd06"],
Cell[62883, 1423, 249, 3, 40, "Output",ExpressionUUID->"b928d65f-2be4-44e8-923f-7af01d72924a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63169, 1431, 3602, 81, 321, "Input",ExpressionUUID->"1e72ac41-1763-4f4e-8c85-5e200208df11"],
Cell[CellGroupData[{
Cell[66796, 1516, 461, 10, 27, "Print",ExpressionUUID->"0cd6014c-299e-4190-bb70-13e1951a525d"],
Cell[67260, 1528, 271, 8, 47, "Print",ExpressionUUID->"93adbaf4-4cb7-47c2-9bcb-b8f778d57d48"]
}, Open  ]],
Cell[67546, 1539, 227, 3, 40, "Output",ExpressionUUID->"5977a51f-a2cb-44cf-b8ab-eaa58149fdee"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

