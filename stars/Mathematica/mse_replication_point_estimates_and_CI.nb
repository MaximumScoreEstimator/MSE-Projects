(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    272578,       5422]
NotebookOptionsPosition[    267555,       5329]
NotebookOutlinePosition[    268020,       5347]
CellTagsIndexPosition[    267977,       5344]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Companion code for the paper \[OpenCurlyDoubleQuote]Stars In Their \
Constellations: Great person or great team?\[CloseCurlyDoubleQuote] by \
Mindruta, Bercovitz, Mares, and Feldman.\n\nThis notebook calculates the \
point estimates and 95% confidence intervals. Results are reported in Table \
2a of the paper.\nThe notebook was created in Mathematica 12.3.\n",
  FontFamily->"Consolas",
  FontSize->20,
  FontWeight->"Normal",
  FontColor->RGBColor[0.5019607843137255, 0., 0.]],
 "\ninit"
}], "Section",
 CellChangeTimes->{{3.6303386092666483`*^9, 3.6303386103447733`*^9}, {
  3.90386212363258*^9, 3.903862127357546*^9}, {3.9038621901567793`*^9, 
  3.903862190328501*^9}, {3.9038624961390305`*^9, 3.9038625614540076`*^9}, {
  3.9038627457796288`*^9, 3.9038627551745615`*^9}, {3.9038635529409328`*^9, 
  3.90386355843464*^9}, {3.904294376532873*^9, 3.9042944061086674`*^9}, {
  3.904294889444491*^9, 3.9042949374697094`*^9}, {3.904295062179494*^9, 
  3.904295062354679*^9}, {3.904296910292379*^9, 
  3.904296917999166*^9}},ExpressionUUID->"a07aa20e-9937-4186-bc43-\
89ffc8a76382"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "directory", "=", 
   "\"\<https://raw.githubusercontent.com/MaximumScoreEstimator/MSE-\
Mathematica/stars/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", 
  RowBox[{"directory", "<>", "\"\<mse.m\>\""}], "]"}]}], "Input",
 CellChangeTimes->{
  3.897711241844165*^9, {3.897714258687591*^9, 3.8977142721957703`*^9}, {
   3.8977150755664873`*^9, 3.897715076611128*^9}, {3.897715994187922*^9, 
   3.8977159960705757`*^9}, {3.9019298908696747`*^9, 
   3.9019298944156847`*^9}, {3.902285652992422*^9, 3.9022856980258913`*^9}, {
   3.9028985929897213`*^9, 3.902898595999941*^9}, {3.9029950914231157`*^9, 
   3.9029951162009478`*^9}, {3.903057206152025*^9, 3.9030572079193687`*^9}, {
   3.903057926471017*^9, 3.903057930289658*^9}, {3.903866367643085*^9, 
   3.90386637095503*^9}, {3.903866469031447*^9, 3.9038664745599117`*^9}, {
   3.903867616837978*^9, 3.903867660032977*^9}, {3.9038677199206057`*^9, 
   3.90386772035787*^9}, {3.903924201570176*^9, 3.9039242029542847`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"42a4d363-9498-4b0b-bf7c-5f123f12c347"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Loaded import.m\"\>"], "Echo",
 CellChangeTimes->{
  3.9061907243659506`*^9},ExpressionUUID->"849958ba-693e-4286-afae-\
b18f8df09c2b"],

Cell[BoxData["\<\"Loaded payoff.m\"\>"], "Echo",
 CellChangeTimes->{
  3.9061907250221863`*^9},ExpressionUUID->"1d8fb79b-2a2e-471a-b6c3-\
70736efd11b9"],

Cell[BoxData["\<\"Loaded matching.m\"\>"], "Echo",
 CellChangeTimes->{
  3.9061907256651115`*^9},ExpressionUUID->"8d56b988-4cc2-4bd6-af76-\
9676e86634b2"],

Cell[BoxData["\<\"Loaded inequalities.m\"\>"], "Echo",
 CellChangeTimes->{
  3.906190726225362*^9},ExpressionUUID->"aa02fe32-66fd-4c58-a8b2-\
f61b65121d3b"],

Cell[BoxData["\<\"Loaded dataArray.m\"\>"], "Echo",
 CellChangeTimes->{
  3.9061907266785684`*^9},ExpressionUUID->"2d9bf9a9-e5a0-4f1c-9a2c-\
3a9a7d388c86"],

Cell[BoxData["\<\"Loaded objective.m\"\>"], "Echo",
 CellChangeTimes->{
  3.9061907270530624`*^9},ExpressionUUID->"8630d723-03aa-4896-a842-\
8647a62663de"],

Cell[BoxData["\<\"Loaded maximize.m\"\>"], "Echo",
 CellChangeTimes->{
  3.906190727771912*^9},ExpressionUUID->"9ec388cf-e8fe-4bba-9b86-\
52dc58ece3a9"],

Cell[BoxData["\<\"Loaded confidence.m\"\>"], "Echo",
 CellChangeTimes->{
  3.9061907282534056`*^9},ExpressionUUID->"7f507fec-3d4e-40b4-a8f8-\
4bd69534df6c"],

Cell[BoxData["\<\"Loaded modifydata.m\"\>"], "Echo",
 CellChangeTimes->{
  3.9061907285844493`*^9},ExpressionUUID->"5d1b544d-0094-4133-8a04-\
18a308828e25"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"970066264", ",", "227147344", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.9061782681978707`*^9, 3.9061907301720448`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"b3ab5ce1-729a-4738-9078-c6e376f0d77f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import precomputed data", "Section",
 CellChangeTimes->{{3.630312113309617*^9, 3.630312115762742*^9}, {
  3.684103937250903*^9, 3.684103945195757*^9}, {3.684106438963768*^9, 
  3.68410644892039*^9}},ExpressionUUID->"416c3353-f5b9-4d09-be4d-\
6ea5d195adb0"],

Cell["Load the data", "Text",
 CellChangeTimes->{{3.6841042607207613`*^9, 3.684104266945219*^9}, {
   3.684104320856389*^9, 3.684104345457032*^9}, 
   3.9038664614324827`*^9},ExpressionUUID->"cf1aea60-faba-4443-8417-\
502a3ce75e62"],

Cell[BoxData[
 RowBox[{
  RowBox[{"filename", "=", "\"\<../data/stars_replication_step1.dat\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.897715115730977*^9, 3.897715133079192*^9}, 
   3.899948322289242*^9, 3.9028103492595177`*^9, {3.9038637934022784`*^9, 
   3.903863796419042*^9}, {3.9038664334423637`*^9, 3.903866436815172*^9}, {
   3.904216397710374*^9, 3.9042164009819736`*^9}},
 Background->RGBColor[1, 1, 0],
 CellLabel->"In[41]:=",ExpressionUUID->"959f3ecc-5958-4830-87a9-802b23509b58"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"import", "[", 
   RowBox[{"filename", ",", "\"\<precomp\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
  "header", ",", "noM", ",", "noU", ",", "noD", ",", "noAttr", ",", 
   "distanceMatrices", ",", "matchMatrix", ",", "mate"}], "}"}]}], "Input",
 CellChangeTimes->{{3.717728962088194*^9, 3.717728967908416*^9}, {
  3.717729012277205*^9, 3.717729012553649*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"534c9725-9fc5-4ddc-a626-008f72861c46"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"marketid\"\>", ",", "\<\"upstreamid\"\>", 
             ",", "\<\"downstreamid\"\>", ",", "\<\"cites_cites\"\>", 
             ",", "\<\"cites_size\"\>", ",", "\<\"kn_similarity\"\>", 
             ",", "\<\"_sq (kn_similarity)\"\>", 
             ",", "\<\"domain_similarity\"\>", ",", "\<\"cites_rankcmd\"\>", 
             ",", "\<\"cites_experience\"\>", ",", "\<\"match\"\>"}], "}"}], 
           ",", "33", ",", 
           TemplateBox[{"4"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1", "}"}], ",", 
                 RowBox[{"{", "2", "}"}], ",", 
                 RowBox[{"{", "3", "}"}], ",", 
                 RowBox[{"{", "4", "}"}], ",", 
                 RowBox[{"{", "5", "}"}], ",", 
                 RowBox[{"{", "6", "}"}], ",", 
                 RowBox[{"{", "7", "}"}], ",", 
                 RowBox[{"{", "8", "}"}], ",", 
                 RowBox[{"{", "9", "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3", "}"}], ",", 
                 RowBox[{"{", "4", "}"}], ",", 
                 RowBox[{"{", "2", "}"}], ",", 
                 RowBox[{"{", "9", "}"}], ",", 
                 RowBox[{"{", "7", "}"}], ",", 
                 RowBox[{"{", "8", "}"}], ",", 
                 RowBox[{"{", "6", "}"}], ",", 
                 RowBox[{"{", "1", "}"}], ",", 
                 RowBox[{"{", "5", "}"}]}], "}"}]}], "}"}], ",", 
             TemplateBox[{"31"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1", "}"}], ",", 
                 RowBox[{"{", "2", "}"}], ",", 
                 RowBox[{"{", "3", "}"}], ",", 
                 RowBox[{"{", "4", "}"}], ",", 
                 RowBox[{"{", "5", "}"}], ",", 
                 RowBox[{"{", "6", "}"}], ",", 
                 RowBox[{"{", "7", "}"}], ",", 
                 RowBox[{"{", "8", "}"}], ",", 
                 RowBox[{"{", "9", "}"}], ",", 
                 RowBox[{"{", "10", "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "10", "}"}], ",", 
                 RowBox[{"{", "1", "}"}], ",", 
                 RowBox[{"{", "3", "}"}], ",", 
                 RowBox[{"{", "8", "}"}], ",", 
                 RowBox[{"{", "6", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "12"}], "}"}], ",", 
                 RowBox[{"{", "7", "}"}], ",", 
                 RowBox[{"{", "11", "}"}], ",", 
                 RowBox[{"{", "5", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"4", ",", "9"}], "}"}]}], "}"}]}], "}"}]}], "}"}]}],
           "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{49.2099609375, {2., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39.884765625, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 43, 25412187815192612877, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{46.73583984375, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 43, 25412187815192612877, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{34.4970703125, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 43, 25412187815192612877, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{59.73046875, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[25412187815192612877 === $SessionID, 
   Out[43], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.906178269668396*^9, 3.906190730693751*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"a3b70e7b-efa7-4c2a-9e92-cdc348b0010a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Routines (calculate payoff matrix, inequalities members, dataArray)\
\>", "Section",
 CellChangeTimes->{{3.6841044513858833`*^9, 3.684104453137322*^9}, {
  3.684106468489313*^9, 
  3.684106506813888*^9}},ExpressionUUID->"ced5500b-4566-48ac-8cde-\
a8906449ff29"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CpayoffMatrix", "[", 
   RowBox[{"payoffDM", ",", "noM", ",", "noU", ",", "noD"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.684105012296954*^9, 3.68410501978755*^9}, {
   3.684106015679117*^9, 3.684106032757155*^9}, 3.684107226749753*^9, 
   3.68410777616145*^9, {3.718005723465626*^9, 3.718005724957798*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"f9f339ed-6e9d-4219-9f14-ec4fd6ee0620"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cineqmembers", "[", "mate", "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.6841071955756617`*^9, {3.684107242456472*^9, 3.684107248610227*^9}, {
   3.718005726414258*^9, 3.718005727950242*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"f0620080-0323-4a60-85b2-985dcc798459"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CdataArray", "[", 
   RowBox[{"payoffMatrix", ",", 
    RowBox[{"Cx", "[", 
     RowBox[{"noAttr", "-", "1"}], "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.684105202625043*^9, 3.6841052093160973`*^9}, {
   3.684105642018467*^9, 3.684105669830946*^9}, {3.6841063953107767`*^9, 
   3.684106404380844*^9}, 3.684107251197228*^9, {3.718005729180099*^9, 
   3.718005730395912*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"162d8ea8-a453-4914-9a88-892e1f6d36ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Maximization", "Section",
 CellChangeTimes->{{3.684107328012385*^9, 3.684107334518333*^9}, {
  3.6970297677393293`*^9, 
  3.697029776828178*^9}},ExpressionUUID->"71386755-6d8d-46c0-87b9-\
c454c7a907e6"],

Cell[CellGroupData[{

Cell["Differential Evolution Method", "Subsection",
 CellChangeTimes->{{3.69702978534949*^9, 
  3.697029795194523*^9}},ExpressionUUID->"fca830df-8a71-4e7e-be61-\
98fc484b7b07"],

Cell["The default DifferentialEvolution parameters:", "Text",
 CellChangeTimes->{{3.6304811339951696`*^9, 3.6304811513701696`*^9}, {
  3.6304855977012243`*^9, 
  3.6304856109512243`*^9}},ExpressionUUID->"c90d05f2-32d6-4dd4-93a2-\
55c5e0799e87"],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader",ExpressionUUID->
     "8d4f6802-26e9-4882-b529-464160c96067"], Cell[
    "default value", "TableHeader",ExpressionUUID->
     "52999ce8-802b-44e2-99e8-464cec048de1"], " "},
   {"\"\<CrossProbability\>\"", "0.5", Cell[TextData[{
     "probability that a gene is taken from ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["x", "TI"], 
       StyleBox["i", "TI"]]], "InlineFormula",ExpressionUUID->
      "da0c26c6-a1f5-4ebc-80bf-b4e91eb23d22"]
    }], "TableText",ExpressionUUID->"36fa5179-cf03-4963-be18-85949f9a31f4"]},
   {"\"\<InitialPoints\>\"", 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell[
    "set of initial points ", "TableText",ExpressionUUID->
     "66c968e7-dea6-4653-8d18-7b00b4c3b47a"]},
   {"\"\<PenaltyFunction\>\"", 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell[
    "function applied to constraints to penalize invalid points", "TableText",
     ExpressionUUID->"1f182333-609a-445c-a8eb-ad7bc940874c"]},
   {"\"\<PostProcess\>\"", 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell[
    "whether to post-process using local search methods ", "TableText",
     ExpressionUUID->"7f475f3f-1a41-4dd8-b7de-b2b72cada390"]},
   {"\"\<RandomSeed\>\"", "0", Cell[
    "starting value for the random number generator", "TableText",
     ExpressionUUID->"df305937-ebef-4f7c-a061-d71fcda2e742"]},
   {"\"\<ScalingFactor\>\"", "0.6", Cell[
    "scale applied to the difference vector in creating a mate ", "TableText",
     ExpressionUUID->"037d7ff4-549d-4c20-a1dc-0988d1dd1aa6"]},
   {"\"\<SearchPoints\>\"", 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell[
    "size of the population used for evolution ", "TableText",ExpressionUUID->
     "ca2c5711-eb9c-4b60-ba30-f3d8191433f8"]},
   {"\"\<Tolerance\>\"", "0.001", Cell[
    "tolerance for accepting constraint violations ", "TableText",
     ExpressionUUID->"f6467c12-463d-451b-b9a0-5a67584b877f"]}
  }]], "DefinitionBox3Col",
 CellChangeTimes->{{3.6304856989824743`*^9, 3.6304856998105993`*^9}},
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->18427541,ExpressionUUID->"325b5874-97af-491c-8ad3-6a4532534bc2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "maximize"}]], "Input",
 CellChangeTimes->{{3.684107546117594*^9, 3.684107548082258*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"2c8a2a07-5435-40dc-ba26-872f39c8d32c"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"maximize[dataArray_,noAttr_,method_:\\\"\
DifferentialEvolution\\\", permuteinvariant_:True, printflag_:True] is MSE \
specific and uses the optimize function. It uses the objective function (that \
counts the number of satisfied inequalities). It returns a list \
{max,{x1->value1, x2->value2, ...}, number of inequalities} where max is the \
maximum number of satisfied inequalities found and the solution of the \
maximization method {value1,value2,...}\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"maximize", "[", 
                    RowBox[{"dataArray_", ",", "noAttr_", ",", 
                    RowBox[{"method_", ":", "\"DifferentialEvolution\""}], 
                    ",", 
                    RowBox[{"permuteinvariant_", ":", "True"}], ",", 
                    RowBox[{"printflag_", ":", "True"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"sol", ",", "x", ",", "order", ",", 
                    "invariantdataArray", ",", "reverseorder"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    
                    RowBox[{"Developer`PackedArrayQ", "[", "dataArray", 
                    "]"}]}], ",", 
                    
                    RowBox[{"Print", "[", 
                    "\"WARNING - The dataArray IS NOT a packed array. \
Calculations will be severely slowed down.\"", "]"}]}], "]"}], ";", 
                    RowBox[{"x", "=", 
                    RowBox[{"Cx", "[", 
                    RowBox[{"noAttr", "-", "1"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"permuteinvariant", ",", 
                    RowBox[{
                    RowBox[{"order", "=", 
                    RowBox[{"Ordering", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"StandardDeviation", "/@", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"dataArray", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"2", ";;", 
                    RowBox[{"-", "1"}]}]}], "\[RightDoubleBracket]"}], 
                    "]"}]}], "]"}], "]"}]}], ";", 
                    RowBox[{"invariantdataArray", "=", 
                    RowBox[{"dataArray", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"order", "+", "1"}], ",", "1"}], "]"}]}], 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"sol", "=", 
                    RowBox[{"optimize", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"objective", "[", 
                    RowBox[{"invariantdataArray", ",", 
                    RowBox[{"Sequence", "@@", "#1"}]}], "]"}], "&"}], ",", 
                    "x", ",", "method"}], "]"}]}], ";", 
                    RowBox[{"sol", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"x", "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", 
                    RowBox[{"reverseorder", "=", 
                    RowBox[{
                    RowBox[{"SortBy", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", "order"}], "}"}], "]"}], 
                    ",", "Last"}], "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"sol", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "reverseorder", ",", 
                    RowBox[{"Length", "[", "dataArray", "]"}]}], "}"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"printflag", ",", 
                    RowBox[{"Print", "[", 
                    
                    RowBox[{
                    "\" The new ordering of attributes used for calculating \
the solutio order=\"", ",", "order"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"sol", "=", 
                    RowBox[{"optimize", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"objective", "[", 
                    RowBox[{"dataArray", ",", 
                    RowBox[{"Sequence", "@@", "#1"}]}], "]"}], "&"}], ",", 
                    "x", ",", "method"}], "]"}]}], ";", 
                    RowBox[{"sol", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"x", "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"Length", "[", "dataArray", "]"}]}], "}"}]}]}]}], 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"printflag", ",", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"\"Method \"", "<>", 
                    RowBox[{"ToString", "[", "method", "]"}]}], "]"}], ";", 
                    RowBox[{"Print", "[", 
                    RowBox[{"\"Completed : \"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"Number of satisfied inequalities\"", "\[Rule]", 
                    RowBox[{"sol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    RowBox[{"header", "\[LeftDoubleBracket]", 
                    RowBox[{"5", ";;", 
                    RowBox[{"5", "+", "noAttr", "-", "2"}]}], 
                    "\[RightDoubleBracket]"}], "\[Rule]", 
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"\"Number of inequalities\"", "\[Rule]", 
                    RowBox[{"Length", "[", "dataArray", "]"}]}]}], "}"}], ",",
                     "\"\\nSatisfied Ineqs Analysis:\\n \"", ",", 
                    RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"objectiveV", "[", 
                    RowBox[{"dataArray", ",", 
                    RowBox[{"Sequence", "@@", 
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
                    RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "]"}]}]}],
                     "]"}], ";", "sol"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`maximize\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"maximize[dataArray_,noAttr_,method_:\\\"\
DifferentialEvolution\\\", permuteinvariant_:True, printflag_:True] is MSE \
specific and uses the optimize function. It uses the objective function (that \
counts the number of satisfied inequalities). It returns a list \
{max,{x1->value1, x2->value2, ...}, number of inequalities} where max is the \
maximum number of satisfied inequalities found and the solution of the \
maximization method {value1,value2,...}\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "maximize[dataArray_,noAttr_,method_:\"DifferentialEvolution\", \
permuteinvariant_:True, printflag_:True] is MSE specific and uses the \
optimize function. It uses the objective function (that counts the number of \
satisfied inequalities). It returns a list {max,{x1->value1, x2->value2, \
...}, number of inequalities} where max is the maximum number of satisfied \
inequalities found and the solution of the maximization method \
{value1,value2,...}", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`maximize, {$CellContext`maximize[
         Pattern[$CellContext`dataArray, 
          Blank[]], 
         Pattern[$CellContext`noAttr, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`method, 
           Blank[]], "DifferentialEvolution"], 
         Optional[
          Pattern[$CellContext`permuteinvariant, 
           Blank[]], True], 
         Optional[
          Pattern[$CellContext`printflag, 
           Blank[]], True]] :> 
       Module[{$CellContext`sol, $CellContext`x, $CellContext`order, \
$CellContext`invariantdataArray, $CellContext`reverseorder}, If[
           Not[
            Developer`PackedArrayQ[$CellContext`dataArray]], 
           Print[
           "WARNING - The dataArray IS NOT a packed array. Calculations will \
be severely slowed down."]]; $CellContext`x = \
$CellContext`Cx[$CellContext`noAttr - 1]; 
         If[$CellContext`permuteinvariant, $CellContext`order = Ordering[
              N[
               Map[StandardDeviation, 
                Transpose[
                 Part[$CellContext`dataArray, All, 
                  Span[2, -1]]]]]]; $CellContext`invariantdataArray = 
            Part[$CellContext`dataArray, All, 
              
              Prepend[$CellContext`order + 1, 
               1]]; $CellContext`sol = \
$CellContext`optimize[$CellContext`objective[$CellContext`invariantdataArray, 
               Apply[
               Sequence, #]]& , $CellContext`x, $CellContext`method]; \
$CellContext`sol = {
              Part[$CellContext`sol, 1], 
              ReplaceAll[$CellContext`x, 
               Part[$CellContext`sol, 2]]}; $CellContext`reverseorder = Part[
              SortBy[
               Transpose[{
                 Part[$CellContext`sol, 2], $CellContext`order}], Last], All, 
              1]; $CellContext`sol = {
              Part[$CellContext`sol, 1], $CellContext`reverseorder, 
              Length[$CellContext`dataArray]}; If[$CellContext`printflag, 
             Print[
             " The new ordering of attributes used for calculating the \
solutio order=", $CellContext`order]], $CellContext`sol = \
$CellContext`optimize[$CellContext`objective[$CellContext`dataArray, 
               Apply[
               Sequence, #]]& , $CellContext`x, $CellContext`method]; \
$CellContext`sol = {
              Part[$CellContext`sol, 1], 
              ReplaceAll[$CellContext`x, 
               Part[$CellContext`sol, 2]], 
              Length[$CellContext`dataArray]}]; 
         If[$CellContext`printflag, 
           Print["Method " <> ToString[$CellContext`method]]; 
           Print["Completed : ", {
             "Number of satisfied inequalities" -> Part[$CellContext`sol, 1], 
              Thread[Part[$CellContext`header, 
                 Span[5, 5 + $CellContext`noAttr - 2]] -> 
               Part[$CellContext`sol, 2]], "Number of inequalities" -> 
              Length[$CellContext`dataArray]}, 
             "\nSatisfied Ineqs Analysis:\n ", 
             Grid[
              $CellContext`objectiveV[$CellContext`dataArray, 
               Apply[Sequence, 
                Part[$CellContext`sol, 2]]], Frame -> 
              All]]]; $CellContext`sol]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Global`maximize"|>, 
   False]]], "Output",
 CellChangeTimes->{3.9061782707904263`*^9, 3.9061907312692084`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"ed3ab1e2-131a-4ebe-ab56-99537765e7f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"method", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<DifferentialEvolution\>\"", ",", 
     RowBox[{"\"\<CrossProbability\>\"", "\[Rule]", "0.5"}], ",", 
     RowBox[{"\"\<InitialPoints\>\"", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"\"\<PenaltyFunction\>\"", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"\"\<PostProcess\>\"", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"\"\<RandomSeed\>\"", "\[Rule]", "321"}], ",", 
     RowBox[{"\"\<ScalingFactor\>\"", "\[Rule]", "0.6"}], ",", 
     RowBox[{"\"\<SearchPoints\>\"", "\[Rule]", "300"}], ",", 
     RowBox[{"\"\<Tolerance\>\"", "\[Rule]", "0.001"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"maximize", "[", 
    RowBox[{"dataArray", ",", "noAttr", ",", "method"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6304822228477087`*^9, 3.6304823703789587`*^9}, {
   3.6304824780195837`*^9, 3.6304824869883337`*^9}, {3.6304825679258337`*^9, 
   3.6304825738008337`*^9}, {3.6304855466699743`*^9, 3.6304855623418493`*^9}, 
   3.6304857214199743`*^9, 3.6304858862480993`*^9, {3.630488085369193*^9, 
   3.630488085775443*^9}, {3.6305596885382614`*^9, 3.6305597002970505`*^9}, {
   3.6305597806851206`*^9, 3.6305598314048877`*^9}, {3.630587798517194*^9, 
   3.630587829517194*^9}, 3.684107472522455*^9, 3.684107610829526*^9, {
   3.684107690541943*^9, 3.684107693032625*^9}, {3.6841079213122168`*^9, 
   3.684107930131075*^9}, {3.7177297091693068`*^9, 3.717729711996545*^9}, {
   3.724868597819215*^9, 3.724868598249215*^9}, {3.7248686544490075`*^9, 
   3.7248686565705276`*^9}, {3.7248687103007975`*^9, 3.724868710510798*^9}, {
   3.7248774510672636`*^9, 3.7248774590293083`*^9}, 3.7516415965428495`*^9, 
   3.751641658617448*^9, {3.751647045250207*^9, 3.7516470484107704`*^9}, {
   3.75164708378633*^9, 3.7516470843541193`*^9}, {3.7516475149182653`*^9, 
   3.7516475169412184`*^9}, {3.7516480255365105`*^9, 3.751648027369003*^9}, {
   3.7516480761648912`*^9, 3.75164807831883*^9}, {3.751648120530672*^9, 
   3.751648121114725*^9}, {3.7516481824856157`*^9, 3.7516481856906524`*^9}, {
   3.7516482326901965`*^9, 3.7516482336707516`*^9}, {3.751648347412221*^9, 
   3.751648348285627*^9}, {3.7516484147359934`*^9, 3.751648416517783*^9}, {
   3.7516486028458767`*^9, 3.751648604021776*^9}, {3.7516487373079443`*^9, 
   3.7516487398893824`*^9}, {3.751648902558056*^9, 3.751648908567179*^9}, {
   3.7516489620177593`*^9, 3.7516489628587303`*^9}, {3.7516490220502386`*^9, 
   3.751649022487234*^9}, {3.7516495184281235`*^9, 3.7516495189351125`*^9}, {
   3.751649575161005*^9, 3.751649575453924*^9}, {3.751649617497419*^9, 
   3.7516496189174323`*^9}, 3.7516497089715567`*^9, {3.75165580686434*^9, 
   3.751655807372949*^9}, {3.7516559568995624`*^9, 3.751655959601763*^9}, {
   3.7517393876180973`*^9, 3.75173939049594*^9}, {3.7517394346569033`*^9, 
   3.751739436859147*^9}, {3.751739481552821*^9, 3.751739482099723*^9}, {
   3.7517396360990305`*^9, 3.7517396376428185`*^9}, {3.751739707744193*^9, 
   3.751739709754423*^9}, {3.7517397594672966`*^9, 3.751739764678769*^9}, {
   3.7517398141128025`*^9, 3.7517398439213953`*^9}, {3.7517398946867113`*^9, 
   3.751739906610604*^9}, {3.751777318100591*^9, 3.7517773186176395`*^9}, {
   3.751825367809388*^9, 3.751825373827042*^9}, {3.751825474965791*^9, 
   3.751825478539391*^9}, {3.751825624973032*^9, 3.751825628640165*^9}, {
   3.7518261149734726`*^9, 3.751826118642008*^9}, {3.751827283346988*^9, 
   3.7518272846786757`*^9}, {3.751828701008978*^9, 3.751828702830877*^9}, {
   3.7526032617471714`*^9, 3.752603262307495*^9}, {3.7526040126838017`*^9, 
   3.7526040128339586`*^9}, {3.7526055501957226`*^9, 
   3.7526055559472523`*^9}, {3.7528387661596394`*^9, 3.752838767052846*^9}, {
   3.752838857217001*^9, 3.7528388578953648`*^9}, {3.753019178139283*^9, 
   3.753019180826672*^9}, {3.7752181687838116`*^9, 3.7752181786457663`*^9}, {
   3.7752496747887273`*^9, 3.775249691810316*^9}, {3.850745347464692*^9, 
   3.8507453480635204`*^9}, {3.85074575835836*^9, 3.850745758952396*^9}, {
   3.850789454211578*^9, 3.8507894553993645`*^9}, {3.85780607694471*^9, 
   3.8578060831430407`*^9}, {3.8578786170114713`*^9, 3.857878631289914*^9}, {
   3.8579131611269474`*^9, 3.857913164522959*^9}, {3.857913203631836*^9, 
   3.8579132235939474`*^9}, {3.857913792376492*^9, 3.8579137968535423`*^9}, {
   3.857925333420268*^9, 3.8579253344305506`*^9}, {3.857925394734469*^9, 
   3.8579253971045094`*^9}, {3.8628428255157876`*^9, 
   3.8628428302592297`*^9}, {3.8628447105042686`*^9, 3.862844711927375*^9}, {
   3.8628455627396283`*^9, 3.8628455653331985`*^9}, {3.86284818046189*^9, 
   3.862848183287689*^9}, {3.862849621830513*^9, 3.8628496245250998`*^9}, {
   3.8628833996597953`*^9, 3.8628834017315784`*^9}, {3.8628843058150887`*^9, 
   3.8628843094611044`*^9}, {3.862886093681155*^9, 3.8628860976220264`*^9}, 
   3.865498252544183*^9, {3.8655820649194355`*^9, 3.8655821004631696`*^9}, 
   3.865582162624036*^9, 3.8655821967758293`*^9, 3.8655858398409653`*^9, {
   3.865585907522145*^9, 3.865585934636943*^9}, {3.865585999201132*^9, 
   3.8655860017480927`*^9}, 3.8655934705105853`*^9, {3.8766454004576874`*^9, 
   3.87664540414887*^9}, 3.87664555477232*^9, {3.876645667364785*^9, 
   3.8766456685541506`*^9}, {3.876645785189412*^9, 3.8766457906753597`*^9}, {
   3.877667904958999*^9, 3.8776679075373583`*^9}, {3.902999855641488*^9, 
   3.9029998869395638`*^9}, {3.902999964934442*^9, 3.902999983445662*^9}, {
   3.903867944431066*^9, 3.903867957949087*^9}, {3.906175626918731*^9, 
   3.9061756274592867`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"6c4ca98c-0ad3-47b8-ac3d-462340d8b54b"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" The new ordering of attributes used for calculating the \
solutio order=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "1", ",", "3", ",", "2", ",", "4"}], "}"}]}],
  SequenceForm[
  " The new ordering of attributes used for calculating the solutio order=", {
   5, 6, 1, 3, 2, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.9061783113213997`*^9, 3.9061907440655065`*^9},
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"674bd8fa-e6b5-494b-8d4b-776e7c9c1ce2"],

Cell[BoxData["\<\"Method {DifferentialEvolution, CrossProbability -> 0.5, \
InitialPoints -> Automatic, PenaltyFunction -> Automatic, PostProcess -> \
Automatic, RandomSeed -> 321, ScalingFactor -> 0.6, SearchPoints -> 300, \
Tolerance -> 0.001}\"\>"], "Print",
 CellChangeTimes->{3.9061783113213997`*^9, 3.9061907440936985`*^9},
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"6cf0284e-d4e1-4511-a9cb-c0414f3d6c60"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Completed : \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Number of satisfied inequalities\"\>", "\[Rule]", 
      "3733.`"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"cites_size\"\>", "\[Rule]", "0.8647185894805215`"}], ",", 
       RowBox[{"\<\"kn_similarity\"\>", "\[Rule]", "5.779401410940838`"}], 
       ",", 
       RowBox[{"\<\"_sq (kn_similarity)\"\>", "\[Rule]", 
        RowBox[{"-", "2.6456032704736994`"}]}], ",", 
       RowBox[{"\<\"domain_similarity\"\>", "\[Rule]", 
        "3.3901711331785256`"}], ",", 
       RowBox[{"\<\"cites_rankcmd\"\>", "\[Rule]", "1.6199736480992488`"}], 
       ",", 
       RowBox[{"\<\"cites_experience\"\>", "\[Rule]", 
        "2.0775031924093352`"}]}], "}"}], ",", 
     RowBox[{"\<\"Number of inequalities\"\>", "\[Rule]", "3745"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\"\\nSatisfied Ineqs Analysis:\\n \"\>", 
   "\[InvisibleSpace]", 
   TagBox[GridBox[{
      {"\<\"Market no\"\>", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10",
        "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", 
       "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33"},
      {"\<\"Satisfied\"\>", "36", "66", "21", "36", "28", "21", "21", "55", 
       "15", "66", "208", "28", "90", "209", "21", "55", "209", "104", "91", 
       "276", "44", "150", "170", "66", "153", "435", "28", "153", "231", 
       "105", "120", "377", "45"},
      {"\<\"Total\"\>", "36", "66", "21", "36", "28", "21", "21", "55", "15", 
       "66", "210", "28", "91", "210", "21", "55", "210", "105", "91", "276", 
       "45", "153", "171", "66", "153", "435", "28", "153", "231", "105", 
       "120", "378", "45"},
      {"\<\"Percentage %\"\>", "100", "100", "100", "100", "100", "100", 
       "100", "100", "100", "100", "99", "100", "99", "100", "100", "100", 
       "100", "99", "100", "100", "98", "98", "99", "100", "100", "100", 
       "100", "100", "100", "100", "100", "100", "100"}
     },
     AutoDelete->False,
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]}],
  SequenceForm[
  "Completed : ", {
   "Number of satisfied inequalities" -> 3733., {
    "cites_size" -> 0.8647185894805215, "kn_similarity" -> 5.779401410940838, 
     "_sq (kn_similarity)" -> -2.6456032704736994`, "domain_similarity" -> 
     3.3901711331785256`, "cites_rankcmd" -> 1.6199736480992488`, 
     "cites_experience" -> 2.0775031924093352`}, "Number of inequalities" -> 
    3745}, "\nSatisfied Ineqs Analysis:\n ", 
   Grid[{{
     "Market no", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
      18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}, {
     "Satisfied", 36, 66, 21, 36, 28, 21, 21, 55, 15, 66, 208, 28, 90, 209, 
      21, 55, 209, 104, 91, 276, 44, 150, 170, 66, 153, 435, 28, 153, 231, 
      105, 120, 377, 45}, {
     "Total", 36, 66, 21, 36, 28, 21, 21, 55, 15, 66, 210, 28, 91, 210, 21, 
      55, 210, 105, 91, 276, 45, 153, 171, 66, 153, 435, 28, 153, 231, 105, 
      120, 378, 45}, {
     "Percentage %", 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 99, 
      100, 99, 100, 100, 100, 100, 99, 100, 100, 98, 98, 99, 100, 100, 100, 
      100, 100, 100, 100, 100, 100, 100}}, Frame -> All]],
  Editable->False]], "Print",
 CellChangeTimes->{3.9061783113213997`*^9, 3.9061907441057816`*^9},
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"ea6b520b-357f-49aa-9c53-b583a1753ccc"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Confidence Intervals", "Section",
 CellChangeTimes->{{3.6304822013320837`*^9, 3.6304822015664587`*^9}, {
  3.684107642567583*^9, 
  3.684107657451939*^9}},ExpressionUUID->"95c09f6d-9646-4129-9b50-\
7d1c427084f3"],

Cell[CellGroupData[{

Cell["execution ", "Subsection",
 CellChangeTimes->{{3.902898545286371*^9, 3.902898547013657*^9}, {
  3.9061781367068124`*^9, 
  3.9061781455983667`*^9}},ExpressionUUID->"f0dde87b-1842-47c0-8251-\
87267e62fdd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ssSize", "=", "28"}], ";", 
   RowBox[{"numSubsamples", "=", "2500"}], ";", 
   RowBox[{"alpha", "=", "0.05"}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.630310397247117*^9, 3.630310402465867*^9}, 
   3.630310937637742*^9, 3.6305594046037283`*^9, {3.6305728467632647`*^9, 
   3.6305728468413897`*^9}, 3.6305736592388506`*^9, {3.671170646515985*^9, 
   3.671170649539482*^9}, 3.671171562366686*^9, 3.671171630504067*^9, 
   3.671172133070477*^9, {3.671172621267507*^9, 3.671172623146764*^9}, {
   3.71843801786828*^9, 3.7184380229677043`*^9}, {3.7188243637410774`*^9, 
   3.718824364402115*^9}, {3.7188257767346506`*^9, 3.7188257811396737`*^9}, {
   3.7189131997942867`*^9, 3.718913200236312*^9}, {3.741631622456807*^9, 
   3.7416316319839354`*^9}, 3.7504441048374376`*^9, 3.7516317353686614`*^9, 
   3.751647088775778*^9, {3.751655354778119*^9, 3.751655355127874*^9}, {
   3.7526045538867445`*^9, 3.7526045677943745`*^9}, {3.757067916732103*^9, 
   3.7570679169149556`*^9}, {3.774934813909644*^9, 3.774934815423119*^9}, {
   3.775215230698141*^9, 3.775215232189506*^9}, {3.7752181833646107`*^9, 
   3.7752181838635564`*^9}, {3.775249658186366*^9, 3.775249668364419*^9}, 
   3.775367986632574*^9, {3.7753718321118584`*^9, 3.7753718329430957`*^9}, {
   3.775398860532031*^9, 3.775398861203822*^9}, 3.7797782923047695`*^9, {
   3.7802006193051033`*^9, 3.780200619873547*^9}, {3.78020352117225*^9, 
   3.7802035219528413`*^9}, 3.7805960624221954`*^9, {3.780599886973386*^9, 
   3.7805998870968304`*^9}, {3.850735876075034*^9, 3.8507358785644894`*^9}, 
   3.8507429367435045`*^9, 3.850754348909645*^9, {3.8507894605441127`*^9, 
   3.850789461601899*^9}, {3.850790290417602*^9, 3.850790291503863*^9}, 
   3.857803612552045*^9, {3.865575188629183*^9, 3.86557518979929*^9}, 
   3.86558196687096*^9, 3.8679441380236006`*^9, 3.868032956196849*^9, 
   3.8682436507678537`*^9, 3.8776678873997154`*^9, {3.8789691804921722`*^9, 
   3.878969181411969*^9}, {3.8795318153698215`*^9, 3.8795318173445454`*^9}, 
   3.879589339701396*^9, {3.879594449094036*^9, 3.879594450856142*^9}, {
   3.8795957645330653`*^9, 3.8795957660639195`*^9}, 3.8796245263338423`*^9, {
   3.8796245838460083`*^9, 3.8796245853606586`*^9}, {3.879878633677662*^9, 
   3.879878635603636*^9}, {3.8799072977399673`*^9, 3.8799073020621767`*^9}, {
   3.879961593460987*^9, 3.879961603321316*^9}, {3.8815831007193136`*^9, 
   3.8815831010847325`*^9}, {3.881643195494691*^9, 3.881643205386758*^9}, {
   3.901929914318879*^9, 3.901929917204464*^9}, {3.901930357798924*^9, 
   3.90193037727621*^9}, {3.9019419764141893`*^9, 3.901941978398734*^9}, {
   3.9022737632725677`*^9, 3.902273764859241*^9}, {3.902908052921977*^9, 
   3.902908054143011*^9}, {3.9029937321745853`*^9, 3.902993734790411*^9}, {
   3.902995564770545*^9, 3.902995567388145*^9}, {3.902999120343672*^9, 
   3.902999121488326*^9}, {3.903057221473806*^9, 3.903057221801098*^9}, {
   3.903058513202173*^9, 3.903058513338109*^9}, {3.903744673228565*^9, 
   3.903744673405995*^9}, {3.903745249051074*^9, 3.903745249349374*^9}, {
   3.904901574118384*^9, 3.904901587499553*^9}, {3.9049016236809793`*^9, 
   3.9049016770415497`*^9}, {3.9049017556176634`*^9, 3.904901765930893*^9}, 
   3.906178130578994*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"8153c58f-56c4-494d-b2a3-491cfd546369"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "If", " ", "you", " ", "want", " ", "to", " ", "calculate", " ", 
       "confidence", " ", "intervals", " ", "with", " ", "other", " ", 
       "subSamples", " ", "please", " ", "uncomment", " ", "the", " ", "code",
        " ", "below"}], ";", " ", 
      RowBox[{"note", " ", "that", " ", "sample", " ", "size", " ", 
       RowBox[{"(", "ssSize", ")"}]}]}], ",", " ", 
     RowBox[{"number", " ", "of", " ", "draws", " ", 
      RowBox[{"(", "numSubsmaples", ")"}]}], ",", " ", 
     RowBox[{
     "and", " ", "alpha", " ", "can", " ", "all", " ", "be", " ", 
      "modified"}]}], "*)"}],
   FontSize->14,
   FontWeight->"Bold",
   FontColor->RGBColor[0.5019607843137255, 0., 0.]], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Starting pointIdentified process where alpha = \>\"", ",", 
        "alpha"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"pointIdentified", "=", 
       RowBox[{"pointIdentifiedCR", "[", 
        RowBox[{"ssSize", ",", "numSubsamples", ",", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{"Cx", "[", 
          RowBox[{"noAttr", "-", "1"}], "]"}], ",", " ", "groupIDs", ",", " ",
          "dataArray", ",", "method", ",", "True", ",", 
         RowBox[{"confidenceLevel", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"1", "-", "alpha"}], ")"}]}], ",", 
         RowBox[{"asymptotics", "\[Rule]", "nests"}], ",", " ", 
         RowBox[{"progressUpdate", "\[Rule]", "10"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"pointIdentified", ",", "\[IndentingNewLine]", 
        RowBox[{"ListPlot", "@", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Map", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"MapIndexed", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Flatten", "@", 
                  RowBox[{"{", 
                   RowBox[{"#2", ",", "#1"}], "}"}]}], "&"}], ",", "#"}], 
               "]"}], "&"}], ",", "\[IndentingNewLine]", 
             RowBox[{"pointIdentified", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
            "]"}], ",", "1"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
     ")"}], "//", "AbsoluteTiming"}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.630310275200242*^9, {3.630310329918992*^9, 3.630310357309617*^9}, {
   3.630310589606492*^9, 3.630310614840867*^9}, {3.630310768262742*^9, 
   3.630310769262742*^9}, {3.630311286325242*^9, 3.630311287637742*^9}, {
   3.6303355083603983`*^9, 3.6303355101728983`*^9}, {3.6303358144541483`*^9, 
   3.6303358164853983`*^9}, {3.6303359362353983`*^9, 
   3.6303359372822733`*^9}, {3.6304824158477087`*^9, 
   3.6304824168008337`*^9}, {3.6305725670601397`*^9, 
   3.6305725904507647`*^9}, {3.6305729219195147`*^9, 
   3.6305729247632647`*^9}, {3.6305733948794756`*^9, 
   3.6305734127544756`*^9}, {3.6305734630669756`*^9, 
   3.6305734834263506`*^9}, {3.9019303608972*^9, 3.901930381574362*^9}, {
   3.90193174345966*^9, 3.901931747603012*^9}, {3.9029935511034718`*^9, 
   3.902993556942482*^9}, {3.902993724423065*^9, 3.90299372783045*^9}, {
   3.903057262945971*^9, 3.903057263617872*^9}, {3.903226447729773*^9, 
   3.903226452942013*^9}, {3.903228937319675*^9, 3.903228973697847*^9}, {
   3.903229012235186*^9, 3.903229012346157*^9}, {3.9038626372369957`*^9, 
   3.903862676350317*^9}, {3.906178165188471*^9, 3.906178229179834*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"058a9a13-9dae-4800-892b-318cbb05cce5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "If", " ", "you", " ", "need", " ", "to", " ", "save", " ", "the", " ", 
    "calculated", " ", "list", " ", "of", " ", "subSamples", " ", "please", 
    " ", "uncomment", " ", "the", " ", "code", " ", 
    RowBox[{"below", ".", " ", "This"}], " ", "is", " ", "rarely", " ", 
    "necessary", " ", "in", " ", "practice", " ", "and", " ", "we", " ", 
    "included", " ", "here", " ", "for", " ", "reproducibility", " ", 
    "purposes"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"savedGroups", "=", "randomGroups"}], ";", "\[IndentingNewLine]", 
    RowBox[{"savedGroups", ">>", "\"\<savedGroups.m\>\""}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"savedGroups", "\[IndentingNewLine]", "savedGroups"}], "=."}], 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"clears", " ", "the", " ", "variable"}], "*)"}], 
   "\[IndentingNewLine]", "*)"}]}]], "Input",
 CellChangeTimes->{{3.901942509585409*^9, 3.901942520934511*^9}, {
  3.902285468457823*^9, 3.9022854734303617`*^9}, {3.902285514906727*^9, 
  3.90228551745146*^9}, {3.902285588550123*^9, 3.9022855888590612`*^9}, {
  3.90299361750697*^9, 3.902993620223475*^9}, {3.902994574163557*^9, 
  3.902994576195326*^9}, {3.9032264731443157`*^9, 3.9032264764855623`*^9}, {
  3.903228896995109*^9, 3.90322890721941*^9}, {3.903228982052988*^9, 
  3.903229038324854*^9}, {3.904296947500442*^9, 3.9042969729479585`*^9}, {
  3.9049017275556927`*^9, 3.904901729154208*^9}},
 Background->RGBColor[1, 1, 0],
 CellLabel->"In[52]:=",ExpressionUUID->"4a0315c1-852a-4cb2-a867-db7e9d4bd545"],

Cell[CellGroupData[{

Cell["\<\
Run with saved subSamples (Random Groups)

(*This step is provided in the code for reproducibility purposes. Running the \
confidence intervals using the saved random groups allows users to obtain the \
same results as in Table 2a of the paper. Skip this step if you want to \
generate the confidence intervals with own set of subsamples *)\
\>", "Subsubsection",
 CellChangeTimes->{{3.903229048912941*^9, 3.903229066604827*^9}, {
  3.903229104518812*^9, 3.903229120347959*^9}, {3.90429423616606*^9, 
  3.904294351143983*^9}, {3.9042969834947624`*^9, 3.904297050950268*^9}, {
  3.9049015438500185`*^9, 
  3.9049015451518946`*^9}},ExpressionUUID->"7aa69475-664e-4202-9223-\
82711749cbfa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"savedGroups", "=", 
   RowBox[{"<<", "\"\<../data/savedGroupsReplication.m\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"numSubsamples", "=", 
  RowBox[{"Length", "[", "savedGroups", "]"}]}]}], "Input",
 CellChangeTimes->{{3.902272788560197*^9, 3.90227284311373*^9}, {
   3.902272927239952*^9, 3.902272971076291*^9}, {3.902273498057432*^9, 
   3.90227349855459*^9}, {3.902273799563682*^9, 3.90227380846456*^9}, {
   3.902274196645982*^9, 3.902274247667609*^9}, {3.902274417532733*^9, 
   3.9022744354206448`*^9}, {3.9022837346457987`*^9, 
   3.9022837956321363`*^9}, {3.902285528417015*^9, 3.9022855822366533`*^9}, {
   3.902993623137549*^9, 3.902993628132927*^9}, {3.90299457925368*^9, 
   3.90299458271485*^9}, {3.9032264804326963`*^9, 3.903226501411935*^9}, {
   3.903228912144611*^9, 3.903228912899105*^9}, {3.90339938022556*^9, 
   3.903399398679229*^9}, {3.9037442779774113`*^9, 3.903744279561153*^9}, 
   3.903744383980123*^9, {3.9037446905593567`*^9, 3.903744708805357*^9}, {
   3.9038432358713007`*^9, 3.903843238115677*^9}, {3.9038648543216276`*^9, 
   3.9038648560607395`*^9}, {3.903866570112615*^9, 3.903866625723048*^9}, {
   3.903867568828137*^9, 3.903867569812767*^9}},
 Background->RGBColor[1, 1, 0],
 CellLabel->"In[53]:=",ExpressionUUID->"73344bb0-0037-4945-acfe-2ea9b7dbcd06"],

Cell[BoxData["2500"], "Output",
 CellChangeTimes->{3.9061783116096296`*^9, 3.9061907442164435`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"c544a9d4-3aa3-4197-9434-e971ebc3d816"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<Starting pointIdentified process where alpha = \>\"", ",", 
       "alpha"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"pointIdentified", "=", 
      RowBox[{"pointIdentifiedCR", "[", 
       RowBox[{"ssSize", ",", "numSubsamples", ",", 
        RowBox[{"sol", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
        RowBox[{"Cx", "[", 
         RowBox[{"noAttr", "-", "1"}], "]"}], ",", " ", "groupIDs", ",", " ", 
        "dataArray", ",", "method", ",", "True", ",", 
        RowBox[{"confidenceLevel", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"1", "-", "alpha"}], ")"}]}], ",", 
        RowBox[{"asymptotics", "\[Rule]", "nests"}], ",", " ", 
        RowBox[{"progressUpdate", "\[Rule]", "10"}], ",", 
        RowBox[{"useSavedGroups", "\[Rule]", "True"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointIdentified", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"pointIdentified", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"MapIndexed", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Flatten", "@", 
                 RowBox[{"{", 
                  RowBox[{"#2", ",", "#1"}], "}"}]}], "&"}], ",", "#"}], 
              "]"}], "&"}], ",", "\[IndentingNewLine]", 
            RowBox[{"pointIdentified", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
           "]"}], ",", "1"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
    ")"}], "//", "AbsoluteTiming"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Attention", ":", " ", 
     RowBox[{
     "the", " ", "graph", " ", "plots", " ", "all", " ", "point", " ", 
      "estimates"}]}], ",", " ", 
    RowBox[{
    "regardless", " ", "of", " ", "whether", " ", "they", " ", "fall", " ", 
     "or", " ", "not", " ", "in", " ", "the", " ", "confidence", " ", 
     "intervals"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.630310275200242*^9, {3.630310329918992*^9, 3.630310357309617*^9}, {
   3.630310589606492*^9, 3.630310614840867*^9}, {3.630310768262742*^9, 
   3.630310769262742*^9}, {3.630311286325242*^9, 3.630311287637742*^9}, {
   3.6303355083603983`*^9, 3.6303355101728983`*^9}, {3.6303358144541483`*^9, 
   3.6303358164853983`*^9}, {3.6303359362353983`*^9, 
   3.6303359372822733`*^9}, {3.6304824158477087`*^9, 
   3.6304824168008337`*^9}, {3.6305725670601397`*^9, 
   3.6305725904507647`*^9}, {3.6305729219195147`*^9, 
   3.6305729247632647`*^9}, {3.6305733948794756`*^9, 
   3.6305734127544756`*^9}, {3.6305734630669756`*^9, 
   3.6305734834263506`*^9}, {3.9019303608972*^9, 3.901930381574362*^9}, {
   3.90193174345966*^9, 3.901931747603012*^9}, {3.9019420126839457`*^9, 
   3.9019420224949703`*^9}, {3.901942065601927*^9, 3.901942067655796*^9}, 
   3.9022730419267*^9, {3.902287817024399*^9, 3.9022878231221657`*^9}, {
   3.9030575205002193`*^9, 3.903057521191359*^9}, {3.903745134413439*^9, 
   3.903745161126507*^9}, {3.9042311530890865`*^9, 3.9042312432030044`*^9}, {
   3.904297070596005*^9, 3.9042970714791217`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"1e72ac41-1763-4f4e-8c85-5e200208df11"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Starting pointIdentified process where alpha = \"\>", 
   "\[InvisibleSpace]", "0.05`"}],
  SequenceForm["Starting pointIdentified process where alpha = ", 0.05],
  Editable->False]], "Print",
 CellChangeTimes->{3.906178311674456*^9, 3.906190744236537*^9},
 CellLabel->
  "During evaluation of \
In[55]:=",ExpressionUUID->"fb5ddf44-9b66-476e-a0e9-77220dad5aed"],

Cell["\<\

Iterations completed:10

Iterations completed:20

Iterations completed:30

Iterations completed:40

Iterations completed:50

Iterations completed:60

Iterations completed:70

Iterations completed:80

Iterations completed:90

Iterations completed:100

Iterations completed:110

Iterations completed:120

Iterations completed:130

Iterations completed:140

Iterations completed:150

Iterations completed:160

Iterations completed:170

Iterations completed:180

Iterations completed:190

Iterations completed:200

Iterations completed:210

Iterations completed:220

Iterations completed:230

Iterations completed:240

Iterations completed:250

Iterations completed:260

Iterations completed:270

Iterations completed:280

Iterations completed:290

Iterations completed:300

Iterations completed:310

Iterations completed:320

Iterations completed:330

Iterations completed:340

Iterations completed:350

Iterations completed:360

Iterations completed:370

Iterations completed:380

Iterations completed:390

Iterations completed:400

Iterations completed:410

Iterations completed:420

Iterations completed:430

Iterations completed:440

Iterations completed:450

Iterations completed:460

Iterations completed:470

Iterations completed:480

Iterations completed:490

Iterations completed:500

Iterations completed:510

Iterations completed:520

Iterations completed:530

Iterations completed:540

Iterations completed:550

Iterations completed:560

Iterations completed:570

Iterations completed:580

Iterations completed:590

Iterations completed:600

Iterations completed:610

Iterations completed:620

Iterations completed:630

Iterations completed:640

Iterations completed:650

Iterations completed:660

Iterations completed:670

Iterations completed:680

Iterations completed:690

Iterations completed:700

Iterations completed:710

Iterations completed:720

Iterations completed:730

Iterations completed:740

Iterations completed:750

Iterations completed:760

Iterations completed:770

Iterations completed:780

Iterations completed:790

Iterations completed:800

Iterations completed:810

Iterations completed:820

Iterations completed:830

Iterations completed:840

Iterations completed:850

Iterations completed:860

Iterations completed:870

Iterations completed:880

Iterations completed:890

Iterations completed:900

Iterations completed:910

Iterations completed:920

Iterations completed:930

Iterations completed:940

Iterations completed:950

Iterations completed:960

Iterations completed:970

Iterations completed:980

Iterations completed:990

Iterations completed:1000

Iterations completed:1010

Iterations completed:1020

Iterations completed:1030

Iterations completed:1040

Iterations completed:1050

Iterations completed:1060

Iterations completed:1070

Iterations completed:1080

Iterations completed:1090

Iterations completed:1100

Iterations completed:1110

Iterations completed:1120

Iterations completed:1130

Iterations completed:1140

Iterations completed:1150

Iterations completed:1160

Iterations completed:1170

Iterations completed:1180

Iterations completed:1190

Iterations completed:1200

Iterations completed:1210

Iterations completed:1220

Iterations completed:1230

Iterations completed:1240

Iterations completed:1250

Iterations completed:1260

Iterations completed:1270

Iterations completed:1280

Iterations completed:1290

Iterations completed:1300

Iterations completed:1310

Iterations completed:1320

Iterations completed:1330

Iterations completed:1340

Iterations completed:1350

Iterations completed:1360

Iterations completed:1370

Iterations completed:1380

Iterations completed:1390

Iterations completed:1400

Iterations completed:1410

Iterations completed:1420

Iterations completed:1430

Iterations completed:1440

Iterations completed:1450

Iterations completed:1460

Iterations completed:1470

Iterations completed:1480

Iterations completed:1490

Iterations completed:1500

Iterations completed:1510

Iterations completed:1520

Iterations completed:1530

Iterations completed:1540

Iterations completed:1550

Iterations completed:1560

Iterations completed:1570

Iterations completed:1580

Iterations completed:1590

Iterations completed:1600

Iterations completed:1610

Iterations completed:1620

Iterations completed:1630

Iterations completed:1640

Iterations completed:1650

Iterations completed:1660

Iterations completed:1670

Iterations completed:1680

Iterations completed:1690

Iterations completed:1700

Iterations completed:1710

Iterations completed:1720

Iterations completed:1730

Iterations completed:1740

Iterations completed:1750

Iterations completed:1760

Iterations completed:1770

Iterations completed:1780

Iterations completed:1790

Iterations completed:1800

Iterations completed:1810

Iterations completed:1820

Iterations completed:1830

Iterations completed:1840

Iterations completed:1850

Iterations completed:1860

Iterations completed:1870

Iterations completed:1880

Iterations completed:1890

Iterations completed:1900

Iterations completed:1910

Iterations completed:1920

Iterations completed:1930

Iterations completed:1940

Iterations completed:1950

Iterations completed:1960

Iterations completed:1970

Iterations completed:1980

Iterations completed:1990

Iterations completed:2000

Iterations completed:2010

Iterations completed:2020

Iterations completed:2030

Iterations completed:2040

Iterations completed:2050

Iterations completed:2060

Iterations completed:2070

Iterations completed:2080

Iterations completed:2090

Iterations completed:2100

Iterations completed:2110

Iterations completed:2120

Iterations completed:2130

Iterations completed:2140

Iterations completed:2150

Iterations completed:2160

Iterations completed:2170

Iterations completed:2180

Iterations completed:2190

Iterations completed:2200

Iterations completed:2210

Iterations completed:2220

Iterations completed:2230

Iterations completed:2240

Iterations completed:2250

Iterations completed:2260

Iterations completed:2270

Iterations completed:2280

Iterations completed:2290

Iterations completed:2300

Iterations completed:2310

Iterations completed:2320

Iterations completed:2330

Iterations completed:2340

Iterations completed:2350

Iterations completed:2360

Iterations completed:2370

Iterations completed:2380

Iterations completed:2390

Iterations completed:2400

Iterations completed:2410

Iterations completed:2420

Iterations completed:2430

Iterations completed:2440

Iterations completed:2450

Iterations completed:2460

Iterations completed:2470

Iterations completed:2480

Iterations completed:2490

Iterations completed:2500\
\>", "Print",
 CellChangeTimes->{3.906178311674456*^9, 3.9061908534680223`*^9},
 CellLabel->
  "During evaluation of \
In[55]:=",ExpressionUUID->"7ae36c34-4f16-4ede-96a8-5e85954686b1"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"27311.330429`", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Symmetric case\"\>", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\<\"cites_size\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.20221491070404707`"}], ",", 
                    "1.9316520896650902`"}], "}"}]}], ",", 
                   RowBox[{"\<\"kn_similarity\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "2.8424274281960593`", ",", "8.716375393685617`"}], 
                    "}"}]}], ",", 
                   RowBox[{"\<\"_sq (kn_similarity)\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.835418284009102`"}], ",", 
                    RowBox[{"-", "0.4557882569382965`"}]}], "}"}]}], ",", 
                   RowBox[{"\<\"domain_similarity\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "1.7916223965618563`", ",", "4.988719869795195`"}], 
                    "}"}]}], ",", 
                   RowBox[{"\<\"cites_rankcmd\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.14759658556250033`", ",", "3.0923507106359973`"}], 
                    "}"}]}], ",", 
                   RowBox[{"\<\"cites_experience\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.7949177244389711`", ",", "3.3600886603796996`"}], 
                    "}"}]}]}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "0.8309940205438838`"}], ",", 
                   "1.4752098591939966`", ",", 
                   RowBox[{"-", "1.807252312566716`"}], ",", 
                   RowBox[{"-", "0.0978054347461388`"}], ",", 
                   "0.09372189283002544`", ",", 
                   RowBox[{"-", "1.3575534421661923`"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1.0085138322194396`"}], ",", 
                   RowBox[{"-", "3.10815856495311`"}], ",", 
                   RowBox[{"-", "1.1037099779746258`"}], ",", 
                   RowBox[{"-", "1.0312543591972638`"}], ",", 
                   RowBox[{"-", "0.08598568665113585`"}], ",", 
                   RowBox[{"-", "1.6678789696922713`"}]}], "}"}], ",", 
                 TemplateBox[{"2497"},
                  "OutputSizeLimit`Skeleton"], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "2.2861994777163734`"}], ",", 
                   "5.35794927775319`", ",", 
                   RowBox[{"-", "5.564078436365561`"}], ",", 
                   "0.1806911635002328`", ",", 
                   RowBox[{"-", "1.2894961704347707`"}], ",", 
                   RowBox[{"-", "1.3689264341960905`"}]}], "}"}]}], "}"}]}], 
              "}"}], ",", 
             GraphicsBox[{{}, 
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                 NCache[
                  Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[
                1.6], PointBox[CompressedData["
1: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
/411TNvfUvQX+p/y3HjYgfzZP697W3IC+LHsu6u42rZj/uJ9crtqQ+hnwv/0
apV/t53C+yLDIsdDOQb+xi2ap4ej9v8hzv/A9JCxgRjeX8ZCI/sKQ+yveRi2
tHRzdn2fAR1JnKnGsKYa+njKL9jDav4DP6Fq7S6d2qEmwj7p5XWdquIu4vza
nD5adI7I30xCPpUHTYD/PNccuu1sKg1x/qMnmP4yyIH/PHb171bf+3WEfY1p
vsn3LHhfrLa6Kk1KFRPnN2dlKF5LEiDsn96U0MN+BfUFozL5lMI28BuH1Gdd
V/mgz6zUm1TwrB37BXQChhRfjGC+77n6UFbEFOYrvd+21lIvwn6ZdZu//WvM
R4SuSGrKs2L+Iivf1ObcJuAPDY5xtLl+mN+h4nz8NdfjJ2H/WnH884nN+L5T
wuO0dR7Qj7Iv4Bt2Jv0gzp/dsnkvRwX0XfmmbpmVes0T/v9ySGJFJxP8ZP1T
she7xBH/M0PSxSuo0H9/aRCWxBX0lbifnAHMiXzjJYR9izSjtHv3kZ/cjOjW
NToK/sYwFWvpiCTuT3L3YWN6dvy+Ijjfv1PQwP67PVmOsiNmFYT9EyaV7vsT
UB99o7au+LMX/Zca+t+CL3jAH3b+9VjA8Tz6R16BK1zPeMCfWVZWG7WxQf3S
qDx05PUr9I/sLRxPiv9F/5rWusxH/hbw+T1hajOWgYhvdD+CDUTDgZ+Q7d80
8OncF+L8z32sU90uYL5+Zkdlcg0D/E/X/tRPIAX81W29ITdSV1A/Rol+Miwf
wP25cIH2cIEx6vf+gJT97qLoP8bdYfh1M7CesC+xwmAykQb8R97XSZmZA/19
I9NXw0uD0Mf49f1u/7/ZfuL8UVMtJ+rjsD/6mfqVmYO7KQj/qMSVtH+dx3yN
gkfXxKUr6L9s9RAOYNmwX4bq7YW5kHHEz4GxA63qd8E/NKZxmCHZQz+f6p5R
fqYe8nPpizv+u/0Z/qFMcrigQIf5u0Dz30YhXWmE/b0y40IKDzH/NdoQSjXO
uj6PQEcSCo470q2H/aTarEbnMnci/1xZpVEUyPtO3M8cO6Op8KAN+iRFHd1T
k5jvO9DbrBoXj/eFdf/S1VEx+F/3sKmQ8Tbs560/RlfV3w1+iNdlA3tTAejz
XzWcHLaWB394IrjlhfQT6OONfTVjLiOt1z/MpCuDLRdmONfjKyvpv8cUJ6wc
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
/Da9aylxeAX7WaY9nrGodYK/yqxUG+tPC/y5TmAp0q0A+iQDt983DHVjf4fD
vH2Q4Bj4aTf+DX7wNf9KnP/L7j2cV1swP3V/6VZypEAvcf6au4vTmfehP2ZI
OhFGdwf9femu72Iml8EPFDyt9bhCG/iG9nlDFyNGvL+/h77UF9/C73fvXFos
FRn47cV7OG547wQ/zeP6ktOuRegDfP/lNRpb30v4Rzrh855N4ev5Oh2pz/6A
69ZY5A92MpZJaRPgh7/b3jTxdyv4A6ISL398ZEN/+Z2lTMzD/agfn+2PMrUz
RPyptvfqStdD/mAy2H01WyWBOP/dEcYSUy/wV5u9Gs+R7kB/Vcyph+da5vr3
/F984GRm3JS/Ib4tXxPweo33Nzz1Xw1LAvilJwZEKDjNgY/9Hluc+nYS+N4D
56xA6yrwK74d/3DdRwvxPy/86D66Ovx+b+198PCRB/hvVDF75w41tBP25+XL
Bvn9Wonzc/nPF3ncBP65NWk7/7LxTsK+ulrLpOYT4EspB4usbneBP5l0hZTy
ZxP4sX4yxxaV/2B/7tG3dpPc09i/E8H6wq+dD/fHqYrarGwC96dlKTPnxxHo
a9Vdi50alu4g7s97n75D3WTvifuvp+1JuaMX+JLMzt9vUinQv24bOHlqvAL4
8wkS/V8yBeAb86wP6Cv24H5ezOrautYaQfiHZOBM+3oJ+pmBjlmOfWSYv9PW
ZwseDoE+2LFtDj0PD4GfU0T+Qsk8Ffw6l4QAheem0N9Qf5goY/GwnfBPR5fd
V3q3QMJ+PIvFNhpl6GvZBZaQ20+AHzjqtbngVj/0Tyz1P/SdsMf8YNCpMul2
AZyfMk2HJ/8A9qsWCcYFWbjSEOenEM1OHxDH/tO7baecNx1C/q8wpvxj8jXw
pU6SyWXtJ+DHKkwy3o17RUFat281QT5bUoD4/6vD91qnPvh7JWGt1ZadwGdc
brXntSRsqN+jvtr9uwh9jNNayazW+4E/vIvuzlUaRvyXnD3R+G1yiPAPy4GB
Z0+XcP5OMrqi5/PgV6S92pJxWC+O8L/8ru5oqk7sfyS7EnB8iukDYd/q5M8A
+iLsL95++sHY6yC8j5Ti5VmxaujvtCaGsaydxO/rhY4ww/Ny8J/5dCZpOwpx
f25frKa0t4W+RATfK1+LFcSH0yGjfxRYoP/TPPugf0UJ+kh7q1NjrJaw37B4
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
qslnUmPA/9HPLTzHN4D6SGiO/RmnLvoLbOOR8m+j0R+vdmSbOh+C+ujWDZ9/
/NrgDwf5kbK5JtC/ZjvmOFjjh/0yR/Yytyd/hD5DjnFM1G067MfRU2CXfkCJ
+fdlLqUZrfOIP5NkDQ177ciJ8wvKmO0dcsf+vnKGM4fvVIgR5z+tTdvzYQb4
s4+dqZoqA/RDim9P7GX2Bn9JLV+H11YTv9+7WTJUgaxNxPlN5fLnYsqQH35d
ykh8Lov5ZfG5wAvMf4HPHG7e6C19FP3ZKD3J8W4hxDdz45ROb2vogz09OpGV
UTBH2L98Wt5152PoJ2+4fd+XdpyHsP/9vGXdXBr0bf5YlR5dZMb77jjTkVbc
jP2JvQr3V64S94WRFJDs4fivE/pU124ldYn9hv58s9NrrW9piD8Dw+m+nHnI
/6upOycES4EvictHuqTnQh+1b9MdMsXH2O8cTTP6/lRECmH/6ZFNFNd21hDn
P7krwjWZbJK4/9qnOK4qU6H+rXQrchM/ufZ7+s//JvyP5O6DH2J32q7WUAP8
gVav2gbtPvQ341cKFeLX7U/ZmDR/Wvkq9A2e69d46VWjv3NfqLl3LA/9I8dx
8qvnsvC+7PtI53ck7j1hv65vv4mhK+YTbR/y3x/sWafP8/5ikP3wuv0yjiEz
FA7I3/a9OLsrwAD6SzRpRcrPJr8Rv99qqU3bL5UhPw92Z1II/wn+yZ4WgbN/
ZXH+jd4Xm0az0B+xzFEW4nNEfVSepeHwyBj6BjdvPLHMncP7rnE00ev+Xcx3
vLrnEJbMg/lxUS2lId154CcyPfzK7w+v8SHYSd8m9On9Odb+fVPKjsp7piyv
Y75gTPCZzz0y7D9aNX4Q1+4Aft2QtdsPh1roex+grdoi+gj113dHTc6+a/h9
ZY/+szXJBz9BN7DulFkL6sfTm6f+UC+s1RuMpOJNriWy99byIRbSRj2myvAJ
2Cf7zLqo7YD4/6ijha12P/b73NGhu3leAb/fsjCuw2mdqF9UWK+5L869IPxv
Hj2manAN9QX1Xom60Dvo7+e7+vP2bgP+GZ+bQ3VtGfjbZGXW7TZx4A8TqhmU
dZHovyirBZhY1mE/snxjL8dntY+E/Xgbid43uTcI/yRLHQl+YIX89vYGDllO
dSrCvsxqzKbxreAPMAm6z1zTxvvi9PbdCKkT+sbC0StNV4aRf2p9D1vdbQp+
0Q/z8auX4xDffIaZ6lbXzR+NsPO/XUxZ+/v/yz8jNjFW+SD+D1dIyjcvfyXs
n+tlvf4iFPyWWqENFkq2qI8oX1EOztcsEf5JUDdXfCQL/CTdwT3Afyv44aNy
VDOZ7oj/r4Y5lEf3of6irBZSkFkG/nws5m7FGU70d36H32g4v4j9bpPeyzom
4mXE+fsmAq1zldf4Q2Qkfxepwzuo1/LN/97fGzN3vHeCnzl2oyBWphX3k86V
q6nqFPLn3IYU8lr5NXtTyhQcMzu59qG+oNz2ozK5GvozdTJfr5kPYX+BaCCT
QfML8NvnRqspWkSAD8Q4xH0QGsZ8SqRZe5VdNubv2j9E3T13ZO33SUOKT9fq
4JvEfqURv/cXukzAzznCtlgStW7/mv/COfKN6/bLr1xbMdd5j/dLcqbibJTX
duL8hlT2Tc7c0Gdj6/uo23ML+h5bwztPqTUDX/0gFdQiFIb9v2dOSc6eOgr+
+Uu9nA26PugvsAy08I28Q/34UIGa3f8P8KvTG97aNz5F/va9+ejM3/uYX6ut
zwvkNFrX/71N9cJPDP1Ha//PyhQxwD/3SkxvlSHwBhZSXn3Vzxwu6McWMRos
2Ajh/DQsBqku7QvE+d/axbpy6GC+SSdXw03IB/y0cg4l1oyna/UNC0mbYZD3
1zXwZ7a1RF2UT8T+LyvjcdLLfpz/SMqsl80pvF89E29cPy5sJ+xLieyrpv+F
+c3IAbdNeYfBr+jx2tK1UeMl8X3n5W4fmNiN/pfvyqqR733gDx1FIXPW23D+
FEv5gYv3oG9s9PIT+Qk61F9VrLIJehSI/wzjq14n1+Wf/05f5Df8i/luk3am
h8WXUR+xnwwq8I5ei+cspBOXrlvRvUB/eUWjZOfANezPKuJ6pDthsUz4P/hk
yF7R65ifqj3q5uRoj/jMXKxRVmmJ+6NuEs5x8Tbmr22MT2qXhqM/++2I3cmD
fXi/PJfTqgZt0d/k/pFlGm+I8xdvGV/pGoc++ZztR4ngMuTP773bl6UmMb/z
IvKVLTsH9AHelklesP6G+x/7osBL7QLu/y/mGFv2x+A/S75pl80eBL9olY7C
emUP+kcmqVVMhwLBz0me6vl7MwL3P4TCLEB2J36/YzE8xoVMyD83K+rGWtCD
P1859eH+0mb0l6/p8+5p+Y344302h05sfG3+mIbU5tLCS34I+dXyl5zbB5hX
iPtja8x0+4AX8O2bQ33bJb6B3zWXp11DdwL8eTJ35wp33XnC/3ffcmTmyOP9
Sn88cNxx/wJhf5SW3H/s4A/CP8z6yaKRw/C/Wnr0sVRTvI9Lz8YqTPUxn3LO
1bjlcw/4J6czjL7vfo/70zK0qbFIGfGf/ea2jMp1+gDPUifOhHvB/ialKLP0
MPSnCnx1krelQ9+D7tiz5xTr+lM8n6NWBLnBH7ap91oht0B/k2P8JEM6ZRZx
/wWEnnzPkRYg7O82r5t5pY/+i+DTvzI5G8EfYz7DvMxND/72E89fZBqM6A9+
YaL35h7D/PjO8REGlhTgS9pZxkvbFtH/OhEu5vxBE/l/YsET65Jv0FeJm7rh
mGGA+dNnt1v92He2EecPGGHR+rMd/N77VK8uJzoi/qQ2vLd1d4Y+0lMlTWqm
C+AnUO8voGv/BXy+i+Vq6Hwv6iMdo1TFr4PIDy9RpttTdOP7mjFkjbRwfCTO
n3rHl7kpex2/d/BqT4wi6i+Jny4l8fyYD826WF58Va6I8M/q/sJddJHQB+uV
O7qpzRz426/iVQXKZczXv62UfDvZhPsp9qn5qvtn/H7f/tnfoH4a+gwba3tP
bngJ+3T26slH7aHPc4FG8wWpFPyK4b4O8uUpesL+c4PoWWoz4NtUGe84Kb2B
z5hsNGiP8ID+Ca1N5lbvN/i+vxP7MsfYUd+tCvy5mvoX/KvXH4d/1NW+Ivyz
Gn/9M7c+6qOmBzsfvisEfnU769/dkibMj3vnCdmzv8P955+tVB8bRf+089yx
uDAm8Es7P5zmqm8HflXBlfPOWRzxZ3WL1sW6bLyP1zlf27feQP5vYOx1jTUM
/d9dfy/UV7Ij/kcPC5I330R+W515ueM9Ezdh31RI35HqKfTh871aKskV0N93
SboYSb2C+GAqlPvFRhDxf8C4McueAf1H6va9M+zJmJ8yUHLc+OMk4k/E3piX
LHPYLxbMZFof+wbzuU1kVY4B3s+J7/td82PJrzLcf3qT4yb/zmJ+U98spqfl
DvZfry7yzJ/5C32JaucttuZvMd/qLRrBKjyA+YXzX61F3b4A337M/73sVRPm
HwszTsmGr0L/YWiwrOr0MuJnr960FOkb8qsXh+hLMtOR/z+tjJQwubX2PtCQ
jlLk/kt7jvxZMKTi9cN1+a3GpU2MXzhQP241iQ4Uacb9oVScY7sdDfyzd+r1
Tx6Cb0ZDuhLwOXLmNvTrDsvPdYcGIz98+vDFpJ475k8ZXE/wHuiHfWuOtjOX
RqkI+4+vXeKUnwD+TOv/28mDBfyculH6T9e0vhP+l3cbjpASx/ygjmvb3giu
UOL7buypZNV2Bn91wlpAeO437v/WQidriT74P3TY4sL0tyjCvglZTUwCBfDn
vQdtjK6oAD+/61o9w5kKfNW1NFeAZocEYX+MInE3b6Ikcf5x3mHXeU3MJ974
yWt5ZRj8mbyxE93byvB+tb27TPk7EPN3PtIveLym1/gcNCQF3aU44evo32Vc
DJHeLwh+rKhMWe99Yr8uO+myfaNhli/yT6MnZUrqe6uI+x/cLHZPvQz4gyb5
AdHpAuQ/u2z2j9epoH9dFLh3w/Qr1F9BzjU9FGHoL8ctZVm3bUX/KzRj8Bd1
CjnhH6dH3FTpVxHfAizMWL+TgJ/zpcimX7wOfTnph0UlERLgT/7Ur1MM9cX7
9Uw1sGzFGfyok1qCDdqCwG9XrmoZ8WlVEPZTlFXmm+mQH66UhmTZsX4izr9h
KVPC5SH240z1+2gYTCL/VxR9KhchDP7DPTaNn3Lp6P++TVjkYbnST9gfcUsJ
i1DE/ad7zFOysxz1hRmDkn5zG/rL2ykqnnmUAh9YCjJ0yPiM/Wty4WUlwtHA
x/YVD5RqaEJfK35ErCpUCfsvOBkHjX89BT4zspwzzPUevy/bocM6avnov1Ce
DR7c6QB9g3umvM+5J1B/pSeN+5XFAR8evM/8MNcF7xcjBUOrtjTwB6WG347K
/ojPdLFbu73JMf+ibHVv+t2/RuL8u+XV9gY5g//Qzakvdz4B+h79us+abmxE
/ZJ3ag/FT+VYwj9NWptMpcuA/zTvOMZrSzFH2Le9YGJUogj+WMLgua6tzLWE
/cH7gVkmPD3E/Vn0v1Anu7WDsN/T8caVQa+dsM94YrvF8DXM15zfI37tcf0T
wj7Dt3la+STof7IKX9LfPo/3JWPRutJnFPz5eZ7zg6cZ1/Ef6qyqfhmi/3t4
Ma5hf0gWYb/WnC6OZiPwDRPLr8Pi0mv3kZF0VjL09xQl6osDV2LnJbuhXzcX
Xlx1cjP61xPH9aKPOAUQ9h/takqcNloh7C/07kxxmVy3f5lG1UlNAvztHiuu
Kzzs0DewW0xsjukGv+LWuRddoRegr/XI0+m1MDf6d8Vu3T4naBEfjt93vRzS
An5Ce3nOgFAN9DnJ6etTah+1EvbHrgx+kufG/bxBuvVklKWK+L7NzrF35T2h
r1U20/G4Z0MV4R+7va86EvignxZ03EpC8BDyh464v7u/K6L+ctOezAz6gf2Y
efekA55UYr9GTqpMrmsi+DkBxdfOHN2L/M1E3nbhdCLyq6BC+pXg12v5BRlJ
rIJ3bnIdP9mWFLklMBX9R4/FwJqpBcSfu1u9uFrDfhL+d5SoMS/7gfkCIYZP
fOJ/8L70631W55rG/AUN31jMhljsf99Vwmob/BT1Y9Q+Gq0L9SWE/ZUXUys1
z6BPvpQSwHUnFfM7HrLGUZpjmP8yOqAlSjexvXTNftF1Pj7b7dhfY7jEmxrb
jfjDKXs/+Fs+8sODI5bbjrmAX8f35ZLVt71rfK7/3i8BalGGZehjK/vpDNFI
4f3S9tjf5hCB/te2c6TaeAvMD14/OOXEb4X7U1NTruOqA36apvS2P9a54Fcn
VdirVRjj/brWfoP/TyEnYd9uM2fRnTOoHwUv1zzmyER/ZFVV2e5oxCBhf+/r
n4M3M8GvLlCwZxK/A31yf7ufTi8PYD56070D84G54L9lp+bcEtLE97UoOVMh
+xj7y2xHWaQ5LfkI/7+Kfra4Txu/r3scG5dD9q31U9lJVRvynWzOY39cdHCg
329h5D/c6eImcrehL/GGmbHb17ua8L/ScGq+uibwsZ1JdN0FU2vfn530KKFw
644vyH92JyU0Dg1DP9maV7nguw3613Of3zXQGmI+3ZJtdVnAl5w4v1ZUT/5Q
AvCNKYNzAW+y8H6Rzfj66t/7Tdj3S0lsum2L/sKjsciPx5yx33NmU/xi/zP0
FxTEDWZ8TMuJ+//l1qfwXXLQV/wp+OnfUh74veejbzD02OH9DRt9FBxHB/uv
zDs4NhD/PwvJemiJb+UB8IHrM6/II+fAT6jjOXC7ax/mjz6drxaot1p7b2lI
7PRDk7NaC4T/922Z6yTtxP2nqJKW7voJfZW5mRTXCGfoSzzZM7gvb1sB8X1v
sBj21L7G+c1ZZyt6B+F/R/6u8rZf4M+zbeE2+/Wrh/D/rVxW7j3vMJ9i1fEg
b0Yd81mJN2eDdcew39O37NLCDgYqwr7K5ehbFmXQpyq1DqRd3Yz6+iyz478O
E+jzDE1tvEJXXELYbzMb0kzYz02cX6FmmqLoCPqPGnMp0cW04C81JMWfCt8B
fSov7tbI6GX0HxVeKuRPN6+dj4zke+kVyTAU+fMrr6e974fISWv2JzzNqjob
0R9pu8UTZyqN9/eab+VCQwXwDY6OB76twtBP+P2ahspXeM0eDYlslvd6/HHE
f/HUP9maRYOE/28HLjVH1uL+/6mqZmf1w/0p2uVsx6oI/Hzvv8LCbw/BX1I5
cyYvIwf5T06nVEp5H+q72bZgv5/Fa//+//IrmxPqzAdw/l1b9Lce5Aa+nfu8
2eWoySrxfSX+PWy/Fg9+FGvCwA3/C+B3ySpN3EiVgH7s8jsxLZsGfF+K/MDG
Ui3w305ef7ixeNOafjANqcqBb6bjM/Z3bPE9V+LUjPnuMDLfk7fakV9d6m++
1+G59u+ZUp5pY+2+1F9O2Jeb2ql2/jXwgRMdO14MegFfndBwar/0pZnwf6kF
A/neCPBzqPp/k8l8R37FfvDfu6gf0Pe7YOyrPBdDTlqzLxLGOhhRBXybxMG4
3/kp9DGu7n4ckcYP/KpirCo3cwr+GXAh/ze6Tp/T/pyhXXt6BXH+beFy0Tkp
+P2Gk33eO/YM+IBSAWN/9OqaP/6rL4qUuUZSwL/9xm24JVsP/YX4Apkmx2Ls
N1EOrE9MzAc+5nk4w6lUAfPXL9M8d8wo4/yRN/Nnb+kBn1xs2vhrphX1Ed1Q
U3ZpN/Alozur38gXgQ9zvt0YkxuP9+uQLdMB2oOo776Wb+rYcwP9rzq6CFrS
bcRn3QXX2c68fuJ+3tvn0T0ri/0jXjw8LXzh0Ae+VB8bTdGM36/H0YjynyvY
X5Y4uTFjmyr2Z/GmKxYu7gK+baOWuf37Zvjf4pVR9+0E8B+UZba/1XkM/u1y
nGXvzCr4q35LfPqXZcAfczX+/e7qeeT/MS8iT92YX8NLGEnzL3bljZzH/NGG
IwyFsxHov7BW0DZKd+P3mxbonSQqAv3wAvnXp65eQP/IxniM8sw53M9qh90H
vEWBH9Jd1i4Tj0J/X8Xg+KRlEvj/zw5IiW5ThD6S+CzXsFwG8hPjxsVlEVPk
J243LlCzvcH+jrIdvS6KruDXuW/38jqtTk5asx9k2KEyW4T+6ZO8Qk0pIeD/
Dtyv+PypoT//xiW+glUR82V0LTaOYSHw/1NF9zuXJH4S/n8+s2RuKdBJ2E9g
3kXGwQl8UuJv/34mZezXUNezyLpLDv4bXRrbgx2CLYT9no+MdmeIedop5RNm
js8Tc5E/Sz2k4j0dj/xnP73ACUtdzB8Vxu/e6eaA/a1LTvPu3nHQn9Q5QHsv
ywr8wxLhM1uzH6C+oD/jWNfgife3WjSx3y9yiLg/X50KPkV1In5yO+klD1/C
/kpFurN6mSrDhP3tMrFn3kmgf/GwyU/g7Qzmxz+0tn3TeAl9zqAjl+/kD2F/
h8OD+pftLYjPZ07FfK0PBr/CzeXrhsULbwj/qG8re3J2Gfkz4+0JT3cq8Ofr
faIoeHLdiPMH/Psb/MAd/ev2yu3cftWo38U2ZU3z2CO/ovDRpGue7iL8U3s9
4vDKHvRHfGQe1D+pxPvuWVqbYHAf+w27cwXE9MbB72IsKNjieQH6IeOUZprm
16EPJhmf6Z8/spZ/M5JsVWeGfHrAH941frOzdQr6hPejnsfc1cV+W+MrUn2k
k7WEf1wcWbJE48EfDv8y9JnbG/jP368pt9KeYn/lLRFZcZ2L0JcOCLdQrP86
Qpw/SI7Z2JXYP0RG+loQzaPIhvufbGRSr1WG/PYHNYP8JnPwf87ltxlk3kR/
x+yp1JmPj6B/LrPkKVy9Tn/yg0lo+rsHyD/LvPcMhQkA/ykJPEguZQR+S4Og
HplFTzVx/hc6DNIGLzEf975D949mKuKb6Q1WD3sH4G/HzxzMHRmH/aiG4xdE
eFoJ+yUUZXeqedGfXdJI0LQxAP4Qop1i6nV4kTg/T33xXoNj4CdskqzcVicP
fnuogmBOhRX4dVHBzl06ZtAnF5/9Ijy0Afujz1ilv94YifhwaFdzlQnLWn+A
hrSR7B91h/5a/GIkzVU+V7plDnxpb1GNHc/1esI/RmUfWBl0gE/qbt1bfGDb
2vckI7Ev1W4sbMb82uEZD99wT+B7vZsbk+zPrvEXWEgP3im+fbwX+Bstu8r3
qaQ1vt2UciO1zuiGXbWEfxKG9Xn9JdAf2Xyv1dPYFv3T66narlFW4J93liXo
yYhD30xanD3GVHma8I/m5kXrR7fxvjTOGbz6zov7qevGxUeKAr6qOMW8fIgZ
+kvNWzblVefhfdyS0/X4Lhvwq6mCCYMgibX7TUbqctJsM7EC/0G+YUKlbgTx
TbDVzF6KnYrwf/CAnKcOJ+LDb4Oo0rg48JMbWfZTZ6/rD25pPfnwizrmTxnE
xIJTGJD/5/75vGy7HfgPGe19sdl1+4/iRVxSf+uB/7DjEnue0l3UF1xZDFP5
GtB3sjhWE8cesXbe/96vkEhtpn78vgJ0DSsbfTH/2N2udYRetILw/6/NVyeZ
NiO//Rkx37ejrZHwj2r41le8YQ3E+ful2SeHYr8Q/u/91aMa+Rv7rdiUPIPn
VdEfb98ZrVAUkUrcn6Jsd0uft/h9bVzJC9e0BH5oJK/PrJUMfuxGwd0eYdKI
n3IH4oOFuTF/VDNWxBmxrYE4vzSvWGjAON7fGGeqs7eUwJ9v/fZy64cw3J9D
y2ZTQl5fiPPvbnCwyXMAfmjZ3iFdIwn/5Noft9MsKSTuf5Kwkp0MI+LP90sl
mo43od+7jSrRM74U9Xsq+7ykUyr8c/WhsfHTUvCTrwZIHuA4AXz1Rk2M9DUD
xGcrx0crRsbwj9Chh89jDqL+nVs4lnKJA+/L0bd2BXEX8PsKHowfkHgK++px
45F3msH/F7msyvzrNvKfsk6N1fuC6N/JbuF2mryB+aDHqspMLrzgD3xfdBcV
tvlN+Ieuw1DcUAv4GwUt56lmoWTCP2913FMmTD8S56e1NogbFAT+L+ZguJs7
GP7/OFpc7EkN/tXIESF1CW/Ml7XtE72ay4b+e21MoLiPGvA99jdqAeqazcT5
ybNstKY/4f1NzCbJH+ZC/hmfQEkRHgH+CbtXbGN/JvTZLHUSY/py0b/76N5u
wLGwlp/+974wvKjn1v5IfN8rjELFXeG4/+8jX6tV7QC+cbA6cOViJuqjhHOH
J7t2TxL++Vd7ZusFXtRHB5j2RztnIb5VuWU8cNuxQPx+m8YNZyTW5Q/XXtHp
ywSA39Xc9+zjviX0l3dENrjUlYJfkUObVM++DfsZxQM/8EgYQh+48fLc40d3
fhLf9/D1XUWPZXMJ/x8yOHgvUx/8q1COO5coh5B/cm5QKI/bDn5R98b3T+oK
dxD+WeExPD75CvlzIO1Kb0sd9n8VveRxojBf49ewk2hCdiV+MkF8aGn8wmiu
g/6RPleQ3rgh+rONxm/u2dMVEe/vmcHrspPc0I+SUKJQv9bwljg/oxFThOhj
5LeHyp8c3ksBfqnG3tmpLnv0X4TuX73XIt1G2D+k2yTrI4D+jmCynVXLytr9
Yif5i99zjWAHPnCVY0js1zT808uX8+mQwbr9AqfPyzdXIv48f3p6QGWoi/D/
k7nehp+m0B9+FOVwLPAf3pei4qsxCrbQN55cKrW6aIj9m0ejosTHjgFfii/Q
9W6gwHyKWOiYxTdT7EewoVJdPLAd9aljroGn9fRHwj6F0/vuI0/QX3vqn3Kw
/XMP4Z/3DD+ftS6Df8tkPLwS8gnvo48L462/Cuhf67w5p3dEGfgwb3BNgde6
/TVN/BF+rgrIHzYlPSl2Ckd8+3qw4YU7DfgbQexPXM5qIn+jl/x0/DfBzyAj
nZCUO+TEhPriGMWB0KAQ1BfORzjdLjqvxXsW0mBI+VUvI8xvjh1pnrQ4DXy1
koPOW7UZ/Bz6Up+s0n70x5n9GXRu0mN/el5qtpDiKvTn+2ev3RyWB/+8jNUu
bMcR4FfObJKOzPPgz9ygdJbjE8T89b5Bjo8evN8J+0ZUsaPfgpCf9A7OvCP5
5RP3x0r/kfjmGfRH6m/VHGwNw3xHyPeHQYI7sf9R/4Tt17/a4Ld4lO04NDqM
+ugW9+1/jFz/CP8Y89l5sZDQn3ow3xgbcQj4dsyTJzVU3tiPtminRnOgH/Vj
6jztIOU05puOhTJy8U0Cv+rd+yHaUxD6PF+45TwzPqD/0mBXy/KG6E/QkJz5
D4UbJqzTvx3+LbuPdZSwf0nicolUAfANwb3LDNvf1RP+WahzeG98GfwNXQGf
uTNi6H9tdvG2N5WZIvzzgJtXbcs46utLK62xRkbr6mtdgbwgO/BDuCVdhZRi
wR/bzU7R5skI/GeFV7nXixL8ky0HjO3jVcC/1RETEuAwxv1Ja/jC3mEIfZ7v
z3r+GHxrIuzHRy9odc3sIuwPvGHLVL2L/YxCnArHc9zAbwynYKaxKIA+reo3
76eSzAuEfVW5LAWX08CHX+8sjufoQn5CbS6zx0Ac/I39TrQTGn/wPoZf7Qug
Jwf//JmbdePKZ+gfxq4eVIh+hf2hu6UDX/e4gb+0P+mSB0Ue8LHG3XfFDtQA
n9/IJUdB0wV8bIzeJPGCahJxfu0CS3Hfukbi/FT82nGDB8QI+7ebrt02TwF+
FfmzK4VLAvOP6VwK6lrr9jf9JDE9z9Vcy2+mlI+rFAtE0mA+ZXPXxOvkCXLC
/jjdjchlY/ADvTp+unHUpBHnJzHunbt2vog4/62T5+rSWvC+lHf8meQmQ3+W
3vTL98+WncTvi1v1DuPTEPhnmXof9Vc22A9lrBzvcEL91XLsqjNtIur3nzOR
l4OOPSPOf6jIKqvkAfQr3p9flNtkjfnov6PFUmP3MF9QY0hz2K0b9anp1aj+
mkM/CPvzP0S10gXAH0t6aijL1viMOD+THCnx7TTwf+oN5vE14eCvNj9MKMrW
QvyP20Pl9lgN9Z3Dt0W/WwfQP33mcdZyJwv455XJ8VY5qtjPFXufOyPXEfrh
YovG1fsZsonztybp5mgR+oxTym5+LYrModC3iXkUISAthvpFQ253oMq6/WXx
mkulMpqYL8iqYQmKcoI+W0hEwk3Xz5ifar353nJ6D/rjeYXHC5TdkD87ij2K
a3sN/RbFpKLyfRfAL0rxa+hOfQj9PSr9E7szPuF9+X/zByY/q0ru2QL/LwfK
jN90+Up837HA5ftUdfi+SwIrTVKiqO8CxN3I9bb9JOxP6b5Lea4M/X/18xPF
JxWxv2yYk2+67Sv2Rz8W+mE78AjvC6d+4O/YwhDCvsdQuPq1Nsz/mv/TSL36
epnwvyB/VaYqPfrjzb7yKVeZoM+/sXCps2EzFeEfrWs76Wt7sB/NiTvTIFET
++n+anwr0NmG/EdKT5Tfchzfd0DuF/l0EPaPnFe6rxsWBn28upPlrenPgA9f
EuDyLF+1JewvMOlNDtOB30KrtEtgsw7w1ZuNXpv8SoC/GXRvjckh4f6HjZCt
7t0IfVotsxRmm3LMNz04IpXJyIX8ga5V03V7Pt6v6g6zepUs1EcM5Cd/sHxG
/kYj8cpI6ybq34geph/nbTsI+1ZeB+0NjgL/vGbW1L+n5gphv2dCM7GVHvlD
aHb28Wui4JcKte0Q7OaJIM5f8PzlZqds6IMNMOftt9iO+z+UafEhbP9av4iM
5NBXSNP0GPjV0mR3Fb856julU5YUHR/Rf3eeWz5XQ4v851WEiOPf5rX+yZSy
pgrtbhcdzN9N5GX51YjC/unrNMkmPxD/tQYkP9XJgJ+Q1vco448h+F3pN+uU
NpZ+Ivx/x9r/mnAc9vNaKztHe1Mgf5ZSsp7JOYT4wx3P/kW9G/lzS9LU5DYT
zO8vl+deXc1Af3Bbb4H5DxPwZzaemxmlyxkn/B988nRudDDmj/q7wgK+fYV+
1MglJhX3iGeE/SYtY7PvJ8DPr17wY5qKQP52od284HE58KvHtg6B1hXob1pe
vCe8YIb4H3DXqmJHPH6/jqw+UkGlmI9wOKYjp/JgjDj/14UtL8u3AN8YfHCq
gO8o7k/s97tGEj/AT/v37e7BN7XNxPmnZ3U0zpVh/tGTxTRPXxb87cmiS5r/
WNfpJ6zuWa7mgv7V5zRFyRiLtfvGQgoUZbk04rz2vf7z/71BjQ8fwB9g89XT
4HkK/U+OCEcNVQHg89UH721qFcP9Edp/Xb1iH+4Ps598xv4YfN9pyhLfWH/k
zyepGTOkLpKT1uxfjIp1mWnA+QNid+TTnwV+EvTvRg9nNua7bYLpeQ7eBP+E
sfb2stQS4qf/lLKVKQP4vTpZSpZ7+aAf7hDnUPX3F/CHXiNZOeNO8Fd7n9uP
Le4G/00khnFUNw71nWBp6HYKDvArLB+7nihsRP86RZAtdsAW+P+OHoldYf6Y
/5UWvuJiI4b97OP89Jayn9E/yhNgjrt2D/P7+606d2q/QP/3ef+LB1k/1vqB
jKQOpndMHJKYT7/TpEpO+wrxYUlxJfyCH/jtOcP3wv904n00HZDizasdIO5n
S6w1zT4n9K9nRrcNzPWiv/x5/snGmS70x5m51C7seIL7r3r0TbyqGvJDUpBr
808x8Ht35t8XnLoC/N9Zli7zsCT8nxRPf27fNOpfS4Fjyc+oMR8xqqY3aKcL
/vCd9OCK/P3Qn1FZ+LPFfj/w4QfdocXPmcoJ+8pKxSVpRlTE+YWtNovV30X9
qGce/83WGPhhFiVvu2Qt8H8WS9G/E1LgJ/h+Dk4tNIU+7fL2vHR6g2Ti/OJn
TghS+gHf4CYdLYhzAP5jcK9xeQsP+CdtKr+Fo3WoCPtSPBebx4h9TCykkOzt
nV626C9MNA5+OyUGfmBR4SrH3q/Ar/hqWgImqpEfClXZuqYKAh9W/TgXoNOP
+q7HM/PSiC/wMfp28/u9D4D/01n0s+0WBP98KlBJLSpjB2FfOIGLVu8D8Lep
8djumO+Yj9CPuusvN4n9Yq55dyvu6q4Q9ovmPsbeeI7+tVYX3wPd3Zgfd2d8
RF5gCP2QrbfTeC1OIX+2WNrA1b8L+hWJyX/4adQxn274qUKQs2CY8M/FpcLj
1BXIr6IP8uRJratfTKs2dFc8R3zzedDS9PEL9Knmb108e8wW/eVkhodvFV+g
f8HwLE9h/0Xczw1VCcUHqYGvagUxMDDm4X1M/0AlyEkGfP4iPU21VADmc0M4
LeZN1vGv/M+0MkW/ICfsz53IsAn8hvfl5LxAjYvgEHF+gZV9KiLuqF/C2SwH
94sif1OX9KdalcB8VgTTreqZ7cC3PzwuY8qRw/f95ypbc5ob3/eW38x3nWjw
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
P+b/HSa+72n9Z9np3MCHKRMYqWv41n9/c/JqNgVjcjeyie9bZffGmJcX/Hau
y3Wv2U51Eeev+9LOuGKF+S9X7qkbfgbgL+29UpizRa+LOL9GiMfSsRv4/cYe
3EOlpIX8uWa+71niE/TXjvaahA+4Iz80sTz7IGMZ87PnsmtKub+gv8Z2JKve
+DP6m/6Z8a0toahPryxLDL5Wxv6OU+2VTEnHsH/n6A9De156+Mfxt0nPSzPk
J6xa1xnO1eD7NrHZzMbUgf887ithmZUHfG+bxrLk4w7wZ+J3cM3FH4H+g4m8
eFRtB+Knt8dXA4HQcsL+NPnfKqpI+Cfzq87tzD34vvekpt0f7h8m/NM3tmRS
UlxC+Ef1oKeF9ZY+4vxyMt47do/WE99X3nX6Besk5oubtUPO0Uj2Ef45XVxL
VaeG+Yje07zCtz+i/3v1qrHkvjnwE54zmRz42g/9kFDaVbvtB4DPaDbXLgkd
R/2o/VmhfZKnk7Bvu7wn41U45n+vq1Zs3/wD9bXhn5qZp5bY/5Jpv8ft8C70
NxUiefZtjsf7NbXdT+6VIvqbvTEqgbO66/OG/+WfKQ1+vgbr+N2c/OGx4HcC
VOmEfde4SPYDNovE+bf+YJl/afRPf4rt9++UqELi/BJcPeqyzMPE+Y9YVZ1/
VNJDnP/gkx2M3//hVzy6PR62egT1UZkXk8kM8/q8BxMpQYlGSvcx8jfq4lS7
17TYL9y7EFDmUhMN/z+KZHDyriDuj+DjNb3vAqvE+U8plrZ8D0X/a1VaaFf6
G8zvP2msveF6B/gYWQCD+hM78PeOV7o1G3RhPvF2hBG7mDbyE2eF5ZWW3cBv
s/Y/r86RBD5cm8518MUa+Jl/2m0l6Glxf3gqmJxfiYF/G+kar1x2GPjh78L0
N4710Ocp+nZBkyUN+sC39lZNfYxF/Sv/WGVHcjDmX/ZVe4Xz78J81vOcHX7T
RtDP/Ev7bJM6Bfa/JDhXt/duW6/PWEkLjh/aD+xH/j9fNLWYWYf5rDlela4z
mdBn2MP7Q/EoFX6/ulM7+ucaMD8iQqF5Yu4Z6pd7omXHxIl9Tf/dn7+q72tf
Ql99m+qGcYU86BOeVN16bvU++EWX33dtNvQC/nAwkdyrnxX8tPrfR21+pIL/
M81A5yxN9FP/y5/vB5BqPN8R/o9yPvrxwE7095lKHiQ9NcX3zR0ot3+VjPmj
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
n5/7LwYfhf8jeVJsX62iv6lpUTbpKgP8XD/7jvDuAPy+/eYuNU6M2H9xK//m
bloa8LfL+vi+v1PA95V9KGmHXBv4zws39c2Pu/UR5x8eMu2Ld0f84Stnq9+a
Af4e47pt15atoU8u9+xMJsNaM+H/a9HNyz7p2A97ILR31u0p4g9llueocTb4
7cEV7hIqWtDn1+WbNNudhfl0Cp+b9XYlWwn/CIi/+5ksB/zKYy1gnIoX9vdH
5CvXLs8Q/jf/Hqz8Tg/5IVNM1qWXbKKE/eAa+px7mgKE/XfvuSPDWzgI+8JF
P9/NTJD/fk7S1rHlJz1tZHxqWvGB8gGpSzuR/5+hOhrgPoX8+e2I2IalRNQX
YrQfvu3Px/zU9dIGjQW1T8T5v2kfeKB0GfNr6+aOUXQaTRH2b1L3BgedAH4S
IeSreigA/KIXUSnxBb3Ab+l+s9bl8HYT978l59jCJRXoJwhRuQgFH4A+jNiN
5UE+Juirc+bTexe4URP224u23ZkWAT9BJf8Uh3kQ5qeMMnWzXRlQH22lSXgg
WgJ+y9LZm1N9e6HPpjgsk5Xy8QNxf9TnNpbEhP+zn0t163XlYfTfm2cnpe/L
kr/HaUXvm4HG8obAhy8V0L28H4j3/XMF9euNV+H/X+4mN4etML8g7mG+9c4k
9OHbZjQK7O5AH+/E5BiFOBv6pz8/KGw1U0Z+klLx1f1QOPjJT9f2eVy7gP5X
r6YXu8CJX8TvOx9Y6t6oi/6azRUNNdrz9YR//j4LWTsnDH2VKn7Wcd5/4sMD
vs1Vv4OBT4oIlNa+0gN/JnivzNvrJdCf35G8nfF5OOKzA0Xp8bZ94B/eNRDw
N2JG/nD9Ro+G/wLmK0OCGM49nkP+T7NKkzQeDf5MnGR9xMVB5FeVuaL1Bo5U
hP1qsQUap1/gtwTpu+6XfwT8NjTTLyAoBvNNu45VqdKo3CLsW/m+n/cyB74t
1tt+ROyf/UfPz6vyNGlWEPYPWx+d551EfR3+fp+AvCXm4+b5LWdPtmK/AL3p
huGsMuQPsdWcbGlPyPGLljTnOqHOz9tN3M+td0p4Sz8Bn1lJkDSyzAD+mU7/
XL8yH/jnI5UNBw51of7ynn4f0OUJfdHfPo/NAlaQ354tnGFUHsX+GsHMQL/s
G5gvyIi4aOfODn7ysu7Aplw+vO+2anQ3b+97R/iHOoX7R5Y/8Ks9TUKXRtUw
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
yXgzLcl6PHqM9w65H8BCklqL2ld5Gfpp+XWJ0fyD0P/klDt81DkQ9bV1mtUu
8QHw6yKufjIKiy0j/D/46/fraWXkn1f5f9kGXAQ+vEGaVjAyHvz5kHkmnYpW
4NvSTaN7lJ0R3y4oS7hnz+L+aAuLjyoIfSV+398O+wMGLTEfV6urnr62Bvzz
/WK/1vWN4LevL6aslilA/sCy6dkBH0P0N9eFsv5IGQI+05AbcWqrB/Rn6Fmt
GvnsgT8YnpNx4nPGfMepxKUMiWJqwj/b3HLTRb3h/9gJUs2uCvLvx0KyKDz+
5NhD4DMBbE9k7O3J8ZaTdC5dtejQAeDnuT5isxEG4C+JFdSFlw+C/+885N05
b7KVOP+Pngpuk6B84vzs6pS+l08jfxDlWW2YcMP73nAwbGKTTgPh/0rZYoWC
rt+E/x9ZJO++QoJ+/ufduX2XlKoJ+/kW+a/6GjF/FOo11nJMDv2dsMJa35fp
4JdGvXhQH38I84PyJ7ZpdGth/quVazag5zPmXxI3Jf4p2YH3UezLV51AYfBj
O9aR+BzOor+5zUBnXxYL8Ifje4bPuLaif+c/9+5w/Wb0Zy9lm+4U2QH8rcP1
3EaZ+5+J89+QyhTfXwR+73fBw5Z7ngH/pHj0OkM9DPyNk18uyxW4ov9y91x6
9u3KcsL/MuYf46U2oz97QOEULT0F8oeRS7Je+zevEf5n8Ng3tvMT+ndPRXU+
BpwpJOzfMOXVKTmL/pfPu8M5cTOYr/Hi0TOSYwD/ufFSSL/JwxHCvnrPk7rI
EMzvBMU9uc00Av2o9ytL+16chr6usOjSTp4LwOdPTpHqzrIWEPfnZ7xmzKIi
7r9Sup80Zzj5/WMhtWd0HmFlB/9z8LMktdXqP/tbtySXxQzh/pOSDRM8ytGf
EpLOPjXPA322z8K0boKFeN8L7q/eNXJrJM4/lyXdpzgO/zQOivndSEX/ZYX5
RSLj2HPCPx8bBdmSTqD/zhlvbLxj4x/i/MPVyU8PeSG+zXyaEp94Cv5MiD1z
79AB8KMSTf0oi89gv56uHq+vfQLZ37Sk5wku11c5iwj7Ds/dywvOYX/rHenQ
TmtCf52TxL03e+pV8D/6/xWDOQKrwLdXvqrmb9qP/Yw/J4MGzq+HPuR1vvti
GQPAzxuOPsvw+ae/WT1403HVC/G5ko+dxlUG8Xndhx2h/LvRv94ZORDJeQD5
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
p56w72Ue+rouHf5PpU5w5B5brPh/4VIJbg==
                 "]]}, {{}, {}}},
              AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
              Axes->{True, True},
              AxesLabel->{None, None},
              AxesOrigin->{0, 0},
              DisplayFunction->Identity,
              Frame->{{False, False}, {False, False}},
              FrameLabel->{{None, None}, {None, None}},
              FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
              GridLines->{None, None},
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              
              Method->{
               "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}},
              PlotRange->{{0, 6.}, {-9.109370749225423, 8.265045750976554}},
              PlotRangeClipping->True,
              PlotRangePadding->{{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.05], 
                 Scaled[0.05]}},
              Ticks->{Automatic, Automatic}]}], "}"}]}], "}"}],
         Short[#, 10]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{49.2099609375, {2., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39.884765625, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 55, 25412187815192612877, 10/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{46.73583984375, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 55, 25412187815192612877, 10 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{34.4970703125, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 55, 25412187815192612877, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{59.73046875, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[25412187815192612877 === $SessionID, 
   Out[55], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.906218056050362*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"4f4cfeb3-d08d-44ec-8781-02de19d94367"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{949., 407.5},
WindowMargins->{{12, Automatic}, {Automatic, 23.5}},
DockedCells->{},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"89f89306-2a43-497c-8afa-23cc57c25492"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1108, 20, 267, "Section",ExpressionUUID->"a07aa20e-9937-4186-bc43-89ffc8a76382"],
Cell[CellGroupData[{
Cell[1713, 46, 1227, 23, 67, "Input",ExpressionUUID->"42a4d363-9498-4b0b-bf7c-5f123f12c347"],
Cell[CellGroupData[{
Cell[2965, 73, 152, 3, 24, "Echo",ExpressionUUID->"849958ba-693e-4286-afae-b18f8df09c2b"],
Cell[3120, 78, 152, 3, 24, "Echo",ExpressionUUID->"1d8fb79b-2a2e-471a-b6c3-70736efd11b9"],
Cell[3275, 83, 154, 3, 24, "Echo",ExpressionUUID->"8d56b988-4cc2-4bd6-af76-9676e86634b2"],
Cell[3432, 88, 156, 3, 24, "Echo",ExpressionUUID->"aa02fe32-66fd-4c58-a8b2-f61b65121d3b"],
Cell[3591, 93, 155, 3, 24, "Echo",ExpressionUUID->"2d9bf9a9-e5a0-4f1c-9a2c-3a9a7d388c86"],
Cell[3749, 98, 155, 3, 24, "Echo",ExpressionUUID->"8630d723-03aa-4896-a842-8647a62663de"],
Cell[3907, 103, 152, 3, 24, "Echo",ExpressionUUID->"9ec388cf-e8fe-4bba-9b86-52dc58ece3a9"],
Cell[4062, 108, 156, 3, 24, "Echo",ExpressionUUID->"7f507fec-3d4e-40b4-a8f8-4bd69534df6c"],
Cell[4221, 113, 156, 3, 24, "Echo",ExpressionUUID->"5d1b544d-0094-4133-8a04-18a308828e25"]
}, Open  ]],
Cell[4392, 119, 246, 4, 32, "Output",ExpressionUUID->"b3ab5ce1-729a-4738-9078-c6e376f0d77f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4687, 129, 262, 4, 67, "Section",ExpressionUUID->"416c3353-f5b9-4d09-be4d-6ea5d195adb0"],
Cell[4952, 135, 232, 4, 35, "Text",ExpressionUUID->"cf1aea60-faba-4443-8417-502a3ce75e62"],
Cell[5187, 141, 498, 9, 44, "Input",ExpressionUUID->"959f3ecc-5958-4830-87a9-802b23509b58"],
Cell[CellGroupData[{
Cell[5710, 154, 505, 11, 48, "Input",ExpressionUUID->"534c9725-9fc5-4ddc-a626-008f72861c46"],
Cell[6218, 167, 11827, 297, 180, "Output",ExpressionUUID->"a3b70e7b-efa7-4c2a-9e92-cdc348b0010a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18094, 470, 271, 6, 67, "Section",ExpressionUUID->"ced5500b-4566-48ac-8cde-a8906449ff29"],
Cell[18368, 478, 431, 8, 28, "Input",ExpressionUUID->"f9f339ed-6e9d-4219-9f14-ec4fd6ee0620"],
Cell[18802, 488, 308, 6, 28, "Input",ExpressionUUID->"f0620080-0323-4a60-85b2-985dcc798459"],
Cell[19113, 496, 499, 10, 28, "Input",ExpressionUUID->"162d8ea8-a453-4914-9a88-892e1f6d36ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19649, 511, 208, 4, 67, "Section",ExpressionUUID->"71386755-6d8d-46c0-87b9-c454c7a907e6"],
Cell[CellGroupData[{
Cell[19882, 519, 176, 3, 54, "Subsection",ExpressionUUID->"fca830df-8a71-4e7e-be61-98fc484b7b07"],
Cell[20061, 524, 244, 4, 35, "Text",ExpressionUUID->"c90d05f2-32d6-4dd4-93a2-55c5e0799e87"],
Cell[20308, 530, 2463, 52, 202, "DefinitionBox3Col",ExpressionUUID->"325b5874-97af-491c-8ad3-6a4532534bc2",
 CellID->18427541],
Cell[CellGroupData[{
Cell[22796, 586, 196, 3, 28, "Input",ExpressionUUID->"2c8a2a07-5435-40dc-ba26-872f39c8d32c"],
Cell[22995, 591, 20946, 473, 143, "Output",ExpressionUUID->"ed3ab1e2-131a-4ebe-ab56-99537765e7f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43978, 1069, 5657, 83, 86, "Input",ExpressionUUID->"6c4ca98c-0ad3-47b8-ac3d-462340d8b54b"],
Cell[CellGroupData[{
Cell[49660, 1156, 566, 13, 22, "Print",ExpressionUUID->"674bd8fa-e6b5-494b-8d4b-776e7c9c1ce2"],
Cell[50229, 1171, 434, 7, 40, "Print",ExpressionUUID->"6cf0284e-d4e1-4511-a9cb-c0414f3d6c60"],
Cell[50666, 1180, 3602, 68, 612, "Print",ExpressionUUID->"ea6b520b-357f-49aa-9c53-b583a1753ccc"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[54341, 1256, 218, 4, 67, "Section",ExpressionUUID->"95c09f6d-9646-4129-9b50-7d1c427084f3"],
Cell[CellGroupData[{
Cell[54584, 1264, 211, 4, 54, "Subsection",ExpressionUUID->"f0dde87b-1842-47c0-8251-87267e62fdd7"],
Cell[54798, 1270, 3342, 48, 28, "Input",ExpressionUUID->"8153c58f-56c4-494d-b2a3-491cfd546369"],
Cell[58143, 1320, 3896, 82, 295, "Input",ExpressionUUID->"058a9a13-9dae-4800-892b-318cbb05cce5"],
Cell[62042, 1404, 1656, 31, 178, "Input",ExpressionUUID->"4a0315c1-852a-4cb2-a867-db7e9d4bd545"],
Cell[CellGroupData[{
Cell[63723, 1439, 697, 13, 149, "Subsubsection",ExpressionUUID->"7aa69475-664e-4202-9223-82711749cbfa"],
Cell[CellGroupData[{
Cell[64445, 1456, 1339, 22, 64, "Input",ExpressionUUID->"73344bb0-0037-4945-acfe-2ea9b7dbcd06"],
Cell[65787, 1480, 178, 2, 32, "Output",ExpressionUUID->"c544a9d4-3aa3-4197-9434-e971ebc3d816"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66002, 1487, 3667, 81, 257, "Input",ExpressionUUID->"1e72ac41-1763-4f4e-8c85-5e200208df11"],
Cell[CellGroupData[{
Cell[69694, 1572, 410, 9, 22, "Print",ExpressionUUID->"fb5ddf44-9b66-476e-a0e9-77220dad5aed"],
Cell[70107, 1583, 6837, 505, 8507, "Print",ExpressionUUID->"7ae36c34-4f16-4ede-96a8-5e85954686b1"]
}, Open  ]],
Cell[76959, 2091, 190544, 3232, 342, "Output",ExpressionUUID->"4f4cfeb3-d08d-44ec-8781-02de19d94367"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

