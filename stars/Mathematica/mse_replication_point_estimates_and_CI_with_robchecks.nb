(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    277160,       5523]
NotebookOptionsPosition[    272040,       5429]
NotebookOutlinePosition[    272503,       5447]
CellTagsIndexPosition[    272460,       5444]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Companion code for the paper \[OpenCurlyDoubleQuote]Stars In Their \
Constellations: Great person or great team?\[CloseCurlyDoubleQuote] by \
Mindruta, Bercovitz, Mares, and Feldman.\n\nThis notebook calculates the \
point estimates and 95% confidence intervals. Results are reported in Table \
2a of the paper.\nThe notebook was created in Mathematica 12.3.\n",
  FontFamily->"Consolas",
  FontSize->20,
  FontWeight->"Normal",
  FontColor->RGBColor[0.5019607843137255, 0., 0.]],
 "\ninit"
}], "Section",
 CellChangeTimes->{{3.6303386092666483`*^9, 3.6303386103447733`*^9}, {
  3.90386212363258*^9, 3.903862127357546*^9}, {3.9038621901567793`*^9, 
  3.903862190328501*^9}, {3.9038624961390305`*^9, 3.9038625614540076`*^9}, {
  3.9038627457796288`*^9, 3.9038627551745615`*^9}, {3.9038635529409328`*^9, 
  3.90386355843464*^9}, {3.904294376532873*^9, 3.9042944061086674`*^9}, {
  3.904294889444491*^9, 3.9042949374697094`*^9}, {3.904295062179494*^9, 
  3.904295062354679*^9}, {3.904296910292379*^9, 3.904296917999166*^9}, {
  3.9045541948752804`*^9, 
  3.9045542385540657`*^9}},ExpressionUUID->"a07aa20e-9937-4186-bc43-\
89ffc8a76382"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "directory", "=", 
   "\"\<https://raw.githubusercontent.com/MaximumScoreEstimator/MSE-\
Mathematica/stars/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", 
  RowBox[{"directory", "<>", "\"\<mse.m\>\""}], "]"}]}], "Input",
 CellChangeTimes->{
  3.897711241844165*^9, {3.897714258687591*^9, 3.8977142721957703`*^9}, {
   3.8977150755664873`*^9, 3.897715076611128*^9}, {3.897715994187922*^9, 
   3.8977159960705757`*^9}, {3.9019298908696747`*^9, 
   3.9019298944156847`*^9}, {3.902285652992422*^9, 3.9022856980258913`*^9}, {
   3.9028985929897213`*^9, 3.902898595999941*^9}, {3.9029950914231157`*^9, 
   3.9029951162009478`*^9}, {3.903057206152025*^9, 3.9030572079193687`*^9}, {
   3.903057926471017*^9, 3.903057930289658*^9}, {3.903866367643085*^9, 
   3.90386637095503*^9}, {3.903866469031447*^9, 3.9038664745599117`*^9}, {
   3.903867616837978*^9, 3.903867660032977*^9}, {3.9038677199206057`*^9, 
   3.90386772035787*^9}, {3.903924201570176*^9, 3.9039242029542847`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"42a4d363-9498-4b0b-bf7c-5f123f12c347"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Loaded import.m\"\>"], "Echo",
 CellChangeTimes->{
  3.9043232878534374`*^9},ExpressionUUID->"409443c7-71d6-47d0-bf13-\
e7e366b11f13"],

Cell[BoxData["\<\"Loaded payoff.m\"\>"], "Echo",
 CellChangeTimes->{
  3.9043232885615396`*^9},ExpressionUUID->"0d7cac89-b054-438f-94f5-\
b22f08180a66"],

Cell[BoxData["\<\"Loaded matching.m\"\>"], "Echo",
 CellChangeTimes->{
  3.904323289061429*^9},ExpressionUUID->"2b37b184-1524-44b1-ad21-\
1c54bfc14493"],

Cell[BoxData["\<\"Loaded inequalities.m\"\>"], "Echo",
 CellChangeTimes->{
  3.904323289520909*^9},ExpressionUUID->"11cf8866-4f94-49f7-bf06-\
d95ef048542f"],

Cell[BoxData["\<\"Loaded dataArray.m\"\>"], "Echo",
 CellChangeTimes->{
  3.9043232898646107`*^9},ExpressionUUID->"e4e55bb8-5147-4309-b32c-\
984ad2fbc68f"],

Cell[BoxData["\<\"Loaded objective.m\"\>"], "Echo",
 CellChangeTimes->{
  3.904323290208277*^9},ExpressionUUID->"540e58cf-ed1f-4d18-8ac5-\
510aa3fc6f22"],

Cell[BoxData["\<\"Loaded maximize.m\"\>"], "Echo",
 CellChangeTimes->{
  3.9043232908245163`*^9},ExpressionUUID->"cb516442-15d8-409d-b3cd-\
07c920dc302e"],

Cell[BoxData["\<\"Loaded confidence.m\"\>"], "Echo",
 CellChangeTimes->{
  3.904323291183902*^9},ExpressionUUID->"b379183a-20f7-466a-8da0-\
c063224534fa"],

Cell[BoxData["\<\"Loaded modifydata.m\"\>"], "Echo",
 CellChangeTimes->{
  3.9043232917883935`*^9},ExpressionUUID->"6b7af2b8-46b0-48bc-a09a-\
08071f71be86"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"170433944", ",", "143096600", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.9043232923147326`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"cfbd93dd-1f4f-4aff-bf7c-515c5913c8c3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import precomputed data", "Section",
 CellChangeTimes->{{3.630312113309617*^9, 3.630312115762742*^9}, {
  3.684103937250903*^9, 3.684103945195757*^9}, {3.684106438963768*^9, 
  3.68410644892039*^9}},ExpressionUUID->"416c3353-f5b9-4d09-be4d-\
6ea5d195adb0"],

Cell["Load the data", "Text",
 CellChangeTimes->{{3.6841042607207613`*^9, 3.684104266945219*^9}, {
   3.684104320856389*^9, 3.684104345457032*^9}, 
   3.9038664614324827`*^9},ExpressionUUID->"cf1aea60-faba-4443-8417-\
502a3ce75e62"],

Cell[BoxData[
 RowBox[{
  RowBox[{"filename", "=", "\"\<../data/stars_replication_step1.dat\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.897715115730977*^9, 3.897715133079192*^9}, 
   3.899948322289242*^9, 3.9028103492595177`*^9, {3.9038637934022784`*^9, 
   3.903863796419042*^9}, {3.9038664334423637`*^9, 3.903866436815172*^9}, {
   3.904216397710374*^9, 3.9042164009819736`*^9}},
 Background->RGBColor[1, 1, 0],
 CellLabel->"In[4]:=",ExpressionUUID->"959f3ecc-5958-4830-87a9-802b23509b58"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"import", "[", 
   RowBox[{"filename", ",", "\"\<precomp\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
  "header", ",", "noM", ",", "noU", ",", "noD", ",", "noAttr", ",", 
   "distanceMatrices", ",", "matchMatrix", ",", "mate"}], "}"}]}], "Input",
 CellChangeTimes->{{3.717728962088194*^9, 3.717728967908416*^9}, {
  3.717729012277205*^9, 3.717729012553649*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"534c9725-9fc5-4ddc-a626-008f72861c46"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"market\"\>", ",", "\<\"upstreamid\"\>", 
             ",", "\<\"downstreamid\"\>", ",", "\<\"cites_cites\"\>", 
             ",", "\<\"cites_size\"\>", ",", "\<\"kn_similarity\"\>", 
             ",", "\<\"_sq (kn_similarity)\"\>", 
             ",", "\<\"domain_similarity\"\>", ",", "\<\"cites_rankcmd\"\>", 
             ",", "\<\"cites_experience\"\>", ",", "\<\"match\"\>"}], "}"}], 
           ",", "33", ",", 
           TemplateBox[{"4"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
                 "0", ",", "0", ",", "0"}], "}"}], ",", 
               TemplateBox[{"8"},
                "OutputSizeLimit`Skeleton"]}], "}"}], ",", 
             TemplateBox[{"31"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"{", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1", "}"}], ",", 
                 RowBox[{"{", "2", "}"}], ",", 
                 RowBox[{"{", "3", "}"}], ",", 
                 RowBox[{"{", "4", "}"}], ",", 
                 RowBox[{"{", "5", "}"}], ",", 
                 RowBox[{"{", "6", "}"}], ",", 
                 RowBox[{"{", "7", "}"}], ",", 
                 RowBox[{"{", "8", "}"}], ",", 
                 RowBox[{"{", "9", "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3", "}"}], ",", 
                 RowBox[{"{", "4", "}"}], ",", 
                 RowBox[{"{", "2", "}"}], ",", 
                 RowBox[{"{", "9", "}"}], ",", 
                 RowBox[{"{", "7", "}"}], ",", 
                 RowBox[{"{", "8", "}"}], ",", 
                 RowBox[{"{", "6", "}"}], ",", 
                 RowBox[{"{", "1", "}"}], ",", 
                 RowBox[{"{", "5", "}"}]}], "}"}]}], "}"}], ",", 
             TemplateBox[{"31"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1", "}"}], ",", 
                 RowBox[{"{", "2", "}"}], ",", 
                 RowBox[{"{", "3", "}"}], ",", 
                 RowBox[{"{", "4", "}"}], ",", 
                 RowBox[{"{", "5", "}"}], ",", 
                 RowBox[{"{", "6", "}"}], ",", 
                 RowBox[{"{", "7", "}"}], ",", 
                 RowBox[{"{", "8", "}"}], ",", 
                 RowBox[{"{", "9", "}"}], ",", 
                 RowBox[{"{", "10", "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "10", "}"}], ",", 
                 RowBox[{"{", "1", "}"}], ",", 
                 RowBox[{"{", "3", "}"}], ",", 
                 RowBox[{"{", "8", "}"}], ",", 
                 RowBox[{"{", "6", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "12"}], "}"}], ",", 
                 RowBox[{"{", "7", "}"}], ",", 
                 RowBox[{"{", "11", "}"}], ",", 
                 RowBox[{"{", "5", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"4", ",", "9"}], "}"}]}], "}"}]}], "}"}]}], "}"}]}],
           "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{49.2099609375, {2., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39.884765625, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 6, 17288157330047267039, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{46.73583984375, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 6, 17288157330047267039, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{34.4970703125, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 6, 17288157330047267039, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{59.73046875, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[17288157330047267039 === $SessionID, 
   Out[6], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.904323292922059*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"a9de42c4-ef52-41d6-beb2-dac00d39f3c6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Routines (calculate payoff matrix, inequalities members, dataArray)\
\>", "Section",
 CellChangeTimes->{{3.6841044513858833`*^9, 3.684104453137322*^9}, {
  3.684106468489313*^9, 
  3.684106506813888*^9}},ExpressionUUID->"ced5500b-4566-48ac-8cde-\
a8906449ff29"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CpayoffMatrix", "[", 
   RowBox[{"payoffDM", ",", "noM", ",", "noU", ",", "noD"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.684105012296954*^9, 3.68410501978755*^9}, {
   3.684106015679117*^9, 3.684106032757155*^9}, 3.684107226749753*^9, 
   3.68410777616145*^9, {3.718005723465626*^9, 3.718005724957798*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"f9f339ed-6e9d-4219-9f14-ec4fd6ee0620"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cineqmembers", "[", "mate", "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.6841071955756617`*^9, {3.684107242456472*^9, 3.684107248610227*^9}, {
   3.718005726414258*^9, 3.718005727950242*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"f0620080-0323-4a60-85b2-985dcc798459"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CdataArray", "[", 
   RowBox[{"payoffMatrix", ",", 
    RowBox[{"Cx", "[", 
     RowBox[{"noAttr", "-", "1"}], "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.684105202625043*^9, 3.6841052093160973`*^9}, {
   3.684105642018467*^9, 3.684105669830946*^9}, {3.6841063953107767`*^9, 
   3.684106404380844*^9}, 3.684107251197228*^9, {3.718005729180099*^9, 
   3.718005730395912*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"162d8ea8-a453-4914-9a88-892e1f6d36ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Maximization", "Section",
 CellChangeTimes->{{3.684107328012385*^9, 3.684107334518333*^9}, {
  3.6970297677393293`*^9, 
  3.697029776828178*^9}},ExpressionUUID->"71386755-6d8d-46c0-87b9-\
c454c7a907e6"],

Cell[CellGroupData[{

Cell["Differential Evolution Method", "Subsection",
 CellChangeTimes->{{3.69702978534949*^9, 
  3.697029795194523*^9}},ExpressionUUID->"fca830df-8a71-4e7e-be61-\
98fc484b7b07"],

Cell["The default DifferentialEvolution parameters:", "Text",
 CellChangeTimes->{{3.6304811339951696`*^9, 3.6304811513701696`*^9}, {
  3.6304855977012243`*^9, 
  3.6304856109512243`*^9}},ExpressionUUID->"c90d05f2-32d6-4dd4-93a2-\
55c5e0799e87"],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader",ExpressionUUID->
     "8d4f6802-26e9-4882-b529-464160c96067"], Cell[
    "default value", "TableHeader",ExpressionUUID->
     "52999ce8-802b-44e2-99e8-464cec048de1"], " "},
   {"\"\<CrossProbability\>\"", "0.5", Cell[TextData[{
     "probability that a gene is taken from ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["x", "TI"], 
       StyleBox["i", "TI"]]], "InlineFormula",ExpressionUUID->
      "da0c26c6-a1f5-4ebc-80bf-b4e91eb23d22"]
    }], "TableText",ExpressionUUID->"36fa5179-cf03-4963-be18-85949f9a31f4"]},
   {"\"\<InitialPoints\>\"", 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell[
    "set of initial points ", "TableText",ExpressionUUID->
     "66c968e7-dea6-4653-8d18-7b00b4c3b47a"]},
   {"\"\<PenaltyFunction\>\"", 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell[
    "function applied to constraints to penalize invalid points", "TableText",
     ExpressionUUID->"1f182333-609a-445c-a8eb-ad7bc940874c"]},
   {"\"\<PostProcess\>\"", 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell[
    "whether to post-process using local search methods ", "TableText",
     ExpressionUUID->"7f475f3f-1a41-4dd8-b7de-b2b72cada390"]},
   {"\"\<RandomSeed\>\"", "0", Cell[
    "starting value for the random number generator", "TableText",
     ExpressionUUID->"df305937-ebef-4f7c-a061-d71fcda2e742"]},
   {"\"\<ScalingFactor\>\"", "0.6", Cell[
    "scale applied to the difference vector in creating a mate ", "TableText",
     ExpressionUUID->"037d7ff4-549d-4c20-a1dc-0988d1dd1aa6"]},
   {"\"\<SearchPoints\>\"", 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell[
    "size of the population used for evolution ", "TableText",ExpressionUUID->
     "ca2c5711-eb9c-4b60-ba30-f3d8191433f8"]},
   {"\"\<Tolerance\>\"", "0.001", Cell[
    "tolerance for accepting constraint violations ", "TableText",
     ExpressionUUID->"f6467c12-463d-451b-b9a0-5a67584b877f"]}
  }]], "DefinitionBox3Col",
 CellChangeTimes->{{3.6304856989824743`*^9, 3.6304856998105993`*^9}},
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->18427541,ExpressionUUID->"325b5874-97af-491c-8ad3-6a4532534bc2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "maximize"}]], "Input",
 CellChangeTimes->{{3.684107546117594*^9, 3.684107548082258*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"2c8a2a07-5435-40dc-ba26-872f39c8d32c"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"maximize[dataArray_,noAttr_,method_:\\\"\
DifferentialEvolution\\\", permuteinvariant_:True, printflag_:True] is MSE \
specific and uses the optimize function. It uses the objective function (that \
counts the number of satisfied inequalities). It returns a list \
{max,{x1->value1, x2->value2, ...}, number of inequalities} where max is the \
maximum number of satisfied inequalities found and the solution of the \
maximization method {value1,value2,...}\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"maximize", "[", 
                    RowBox[{"dataArray_", ",", "noAttr_", ",", 
                    RowBox[{"method_", ":", "\"DifferentialEvolution\""}], 
                    ",", 
                    RowBox[{"permuteinvariant_", ":", "True"}], ",", 
                    RowBox[{"printflag_", ":", "True"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"sol", ",", "x", ",", "order", ",", 
                    "invariantdataArray", ",", "reverseorder"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    
                    RowBox[{"Developer`PackedArrayQ", "[", "dataArray", 
                    "]"}]}], ",", 
                    
                    RowBox[{"Print", "[", 
                    "\"WARNING - The dataArray IS NOT a packed array. \
Calculations will be severely slowed down.\"", "]"}]}], "]"}], ";", 
                    RowBox[{"x", "=", 
                    RowBox[{"Cx", "[", 
                    RowBox[{"noAttr", "-", "1"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"permuteinvariant", ",", 
                    RowBox[{
                    RowBox[{"order", "=", 
                    RowBox[{"Ordering", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"StandardDeviation", "/@", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"dataArray", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"2", ";;", 
                    RowBox[{"-", "1"}]}]}], "\[RightDoubleBracket]"}], 
                    "]"}]}], "]"}], "]"}]}], ";", 
                    RowBox[{"invariantdataArray", "=", 
                    RowBox[{"dataArray", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"order", "+", "1"}], ",", "1"}], "]"}]}], 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"sol", "=", 
                    RowBox[{"optimize", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"objective", "[", 
                    RowBox[{"invariantdataArray", ",", 
                    RowBox[{"Sequence", "@@", "#1"}]}], "]"}], "&"}], ",", 
                    "x", ",", "method"}], "]"}]}], ";", 
                    RowBox[{"sol", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"x", "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", 
                    RowBox[{"reverseorder", "=", 
                    RowBox[{
                    RowBox[{"SortBy", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", "order"}], "}"}], "]"}], 
                    ",", "Last"}], "]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"sol", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "reverseorder", ",", 
                    RowBox[{"Length", "[", "dataArray", "]"}]}], "}"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"printflag", ",", 
                    RowBox[{"Print", "[", 
                    
                    RowBox[{
                    "\" The new ordering of attributes used for calculating \
the solutio order=\"", ",", "order"}], "]"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"sol", "=", 
                    RowBox[{"optimize", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"objective", "[", 
                    RowBox[{"dataArray", ",", 
                    RowBox[{"Sequence", "@@", "#1"}]}], "]"}], "&"}], ",", 
                    "x", ",", "method"}], "]"}]}], ";", 
                    RowBox[{"sol", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"x", "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"Length", "[", "dataArray", "]"}]}], "}"}]}]}]}], 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"printflag", ",", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"\"Method \"", "<>", 
                    RowBox[{"ToString", "[", "method", "]"}]}], "]"}], ";", 
                    RowBox[{"Print", "[", 
                    RowBox[{"\"Completed : \"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"Number of satisfied inequalities\"", "\[Rule]", 
                    RowBox[{"sol", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    RowBox[{"header", "\[LeftDoubleBracket]", 
                    RowBox[{"5", ";;", 
                    RowBox[{"5", "+", "noAttr", "-", "2"}]}], 
                    "\[RightDoubleBracket]"}], "\[Rule]", 
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"\"Number of inequalities\"", "\[Rule]", 
                    RowBox[{"Length", "[", "dataArray", "]"}]}]}], "}"}], ",",
                     "\"\\nSatisfied Ineqs Analysis:\\n \"", ",", 
                    RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"objectiveV", "[", 
                    RowBox[{"dataArray", ",", 
                    RowBox[{"Sequence", "@@", 
                    
                    RowBox[{"sol", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
                    RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "]"}]}]}],
                     "]"}], ";", "sol"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`maximize\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"maximize[dataArray_,noAttr_,method_:\\\"\
DifferentialEvolution\\\", permuteinvariant_:True, printflag_:True] is MSE \
specific and uses the optimize function. It uses the objective function (that \
counts the number of satisfied inequalities). It returns a list \
{max,{x1->value1, x2->value2, ...}, number of inequalities} where max is the \
maximum number of satisfied inequalities found and the solution of the \
maximization method {value1,value2,...}\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "maximize[dataArray_,noAttr_,method_:\"DifferentialEvolution\", \
permuteinvariant_:True, printflag_:True] is MSE specific and uses the \
optimize function. It uses the objective function (that counts the number of \
satisfied inequalities). It returns a list {max,{x1->value1, x2->value2, \
...}, number of inequalities} where max is the maximum number of satisfied \
inequalities found and the solution of the maximization method \
{value1,value2,...}", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`maximize, {$CellContext`maximize[
         Pattern[$CellContext`dataArray, 
          Blank[]], 
         Pattern[$CellContext`noAttr, 
          Blank[]], 
         Optional[
          Pattern[$CellContext`method, 
           Blank[]], "DifferentialEvolution"], 
         Optional[
          Pattern[$CellContext`permuteinvariant, 
           Blank[]], True], 
         Optional[
          Pattern[$CellContext`printflag, 
           Blank[]], True]] :> 
       Module[{$CellContext`sol, $CellContext`x, $CellContext`order, \
$CellContext`invariantdataArray, $CellContext`reverseorder}, If[
           Not[
            Developer`PackedArrayQ[$CellContext`dataArray]], 
           Print[
           "WARNING - The dataArray IS NOT a packed array. Calculations will \
be severely slowed down."]]; $CellContext`x = \
$CellContext`Cx[$CellContext`noAttr - 1]; 
         If[$CellContext`permuteinvariant, $CellContext`order = Ordering[
              N[
               Map[StandardDeviation, 
                Transpose[
                 Part[$CellContext`dataArray, All, 
                  Span[2, -1]]]]]]; $CellContext`invariantdataArray = 
            Part[$CellContext`dataArray, All, 
              
              Prepend[$CellContext`order + 1, 
               1]]; $CellContext`sol = \
$CellContext`optimize[$CellContext`objective[$CellContext`invariantdataArray, 
               Apply[
               Sequence, #]]& , $CellContext`x, $CellContext`method]; \
$CellContext`sol = {
              Part[$CellContext`sol, 1], 
              ReplaceAll[$CellContext`x, 
               Part[$CellContext`sol, 2]]}; $CellContext`reverseorder = Part[
              SortBy[
               Transpose[{
                 Part[$CellContext`sol, 2], $CellContext`order}], Last], All, 
              1]; $CellContext`sol = {
              Part[$CellContext`sol, 1], $CellContext`reverseorder, 
              Length[$CellContext`dataArray]}; If[$CellContext`printflag, 
             Print[
             " The new ordering of attributes used for calculating the \
solutio order=", $CellContext`order]], $CellContext`sol = \
$CellContext`optimize[$CellContext`objective[$CellContext`dataArray, 
               Apply[
               Sequence, #]]& , $CellContext`x, $CellContext`method]; \
$CellContext`sol = {
              Part[$CellContext`sol, 1], 
              ReplaceAll[$CellContext`x, 
               Part[$CellContext`sol, 2]], 
              Length[$CellContext`dataArray]}]; 
         If[$CellContext`printflag, Print[
             StringJoin["Method ", 
              ToString[$CellContext`method]]]; 
           Print[
            "Completed : ", {
             "Number of satisfied inequalities" -> Part[$CellContext`sol, 1], 
              Thread[Part[$CellContext`header, 
                 Span[5, 5 + $CellContext`noAttr - 2]] -> 
               Part[$CellContext`sol, 2]], "Number of inequalities" -> 
              Length[$CellContext`dataArray]}, 
             "\nSatisfied Ineqs Analysis:\n ", 
             Grid[
              $CellContext`objectiveV[$CellContext`dataArray, 
               Apply[Sequence, 
                Part[$CellContext`sol, 2]]], Frame -> 
              All]]]; $CellContext`sol]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Global`maximize"], 
   False]]], "Output",
 CellChangeTimes->{3.904323293544367*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"dd08dc77-e9de-4417-b221-002e8c498f48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"method", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<DifferentialEvolution\>\"", ",", 
     RowBox[{"\"\<CrossProbability\>\"", "\[Rule]", "0.5"}], ",", 
     RowBox[{"\"\<InitialPoints\>\"", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"\"\<PenaltyFunction\>\"", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"\"\<PostProcess\>\"", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"\"\<RandomSeed\>\"", "\[Rule]", "12"}], ",", 
     RowBox[{"\"\<ScalingFactor\>\"", "\[Rule]", "0.6"}], ",", 
     RowBox[{"\"\<SearchPoints\>\"", "\[Rule]", "300"}], ",", 
     RowBox[{"\"\<Tolerance\>\"", "\[Rule]", "0.001"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"maximize", "[", 
    RowBox[{"dataArray", ",", "noAttr", ",", "method"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6304822228477087`*^9, 3.6304823703789587`*^9}, {
   3.6304824780195837`*^9, 3.6304824869883337`*^9}, {3.6304825679258337`*^9, 
   3.6304825738008337`*^9}, {3.6304855466699743`*^9, 3.6304855623418493`*^9}, 
   3.6304857214199743`*^9, 3.6304858862480993`*^9, {3.630488085369193*^9, 
   3.630488085775443*^9}, {3.6305596885382614`*^9, 3.6305597002970505`*^9}, {
   3.6305597806851206`*^9, 3.6305598314048877`*^9}, {3.630587798517194*^9, 
   3.630587829517194*^9}, 3.684107472522455*^9, 3.684107610829526*^9, {
   3.684107690541943*^9, 3.684107693032625*^9}, {3.6841079213122168`*^9, 
   3.684107930131075*^9}, {3.7177297091693068`*^9, 3.717729711996545*^9}, {
   3.724868597819215*^9, 3.724868598249215*^9}, {3.7248686544490075`*^9, 
   3.7248686565705276`*^9}, {3.7248687103007975`*^9, 3.724868710510798*^9}, {
   3.7248774510672636`*^9, 3.7248774590293083`*^9}, 3.7516415965428495`*^9, 
   3.751641658617448*^9, {3.751647045250207*^9, 3.7516470484107704`*^9}, {
   3.75164708378633*^9, 3.7516470843541193`*^9}, {3.7516475149182653`*^9, 
   3.7516475169412184`*^9}, {3.7516480255365105`*^9, 3.751648027369003*^9}, {
   3.7516480761648912`*^9, 3.75164807831883*^9}, {3.751648120530672*^9, 
   3.751648121114725*^9}, {3.7516481824856157`*^9, 3.7516481856906524`*^9}, {
   3.7516482326901965`*^9, 3.7516482336707516`*^9}, {3.751648347412221*^9, 
   3.751648348285627*^9}, {3.7516484147359934`*^9, 3.751648416517783*^9}, {
   3.7516486028458767`*^9, 3.751648604021776*^9}, {3.7516487373079443`*^9, 
   3.7516487398893824`*^9}, {3.751648902558056*^9, 3.751648908567179*^9}, {
   3.7516489620177593`*^9, 3.7516489628587303`*^9}, {3.7516490220502386`*^9, 
   3.751649022487234*^9}, {3.7516495184281235`*^9, 3.7516495189351125`*^9}, {
   3.751649575161005*^9, 3.751649575453924*^9}, {3.751649617497419*^9, 
   3.7516496189174323`*^9}, 3.7516497089715567`*^9, {3.75165580686434*^9, 
   3.751655807372949*^9}, {3.7516559568995624`*^9, 3.751655959601763*^9}, {
   3.7517393876180973`*^9, 3.75173939049594*^9}, {3.7517394346569033`*^9, 
   3.751739436859147*^9}, {3.751739481552821*^9, 3.751739482099723*^9}, {
   3.7517396360990305`*^9, 3.7517396376428185`*^9}, {3.751739707744193*^9, 
   3.751739709754423*^9}, {3.7517397594672966`*^9, 3.751739764678769*^9}, {
   3.7517398141128025`*^9, 3.7517398439213953`*^9}, {3.7517398946867113`*^9, 
   3.751739906610604*^9}, {3.751777318100591*^9, 3.7517773186176395`*^9}, {
   3.751825367809388*^9, 3.751825373827042*^9}, {3.751825474965791*^9, 
   3.751825478539391*^9}, {3.751825624973032*^9, 3.751825628640165*^9}, {
   3.7518261149734726`*^9, 3.751826118642008*^9}, {3.751827283346988*^9, 
   3.7518272846786757`*^9}, {3.751828701008978*^9, 3.751828702830877*^9}, {
   3.7526032617471714`*^9, 3.752603262307495*^9}, {3.7526040126838017`*^9, 
   3.7526040128339586`*^9}, {3.7526055501957226`*^9, 
   3.7526055559472523`*^9}, {3.7528387661596394`*^9, 3.752838767052846*^9}, {
   3.752838857217001*^9, 3.7528388578953648`*^9}, {3.753019178139283*^9, 
   3.753019180826672*^9}, {3.7752181687838116`*^9, 3.7752181786457663`*^9}, {
   3.7752496747887273`*^9, 3.775249691810316*^9}, {3.850745347464692*^9, 
   3.8507453480635204`*^9}, {3.85074575835836*^9, 3.850745758952396*^9}, {
   3.850789454211578*^9, 3.8507894553993645`*^9}, {3.85780607694471*^9, 
   3.8578060831430407`*^9}, {3.8578786170114713`*^9, 3.857878631289914*^9}, {
   3.8579131611269474`*^9, 3.857913164522959*^9}, {3.857913203631836*^9, 
   3.8579132235939474`*^9}, {3.857913792376492*^9, 3.8579137968535423`*^9}, {
   3.857925333420268*^9, 3.8579253344305506`*^9}, {3.857925394734469*^9, 
   3.8579253971045094`*^9}, {3.8628428255157876`*^9, 
   3.8628428302592297`*^9}, {3.8628447105042686`*^9, 3.862844711927375*^9}, {
   3.8628455627396283`*^9, 3.8628455653331985`*^9}, {3.86284818046189*^9, 
   3.862848183287689*^9}, {3.862849621830513*^9, 3.8628496245250998`*^9}, {
   3.8628833996597953`*^9, 3.8628834017315784`*^9}, {3.8628843058150887`*^9, 
   3.8628843094611044`*^9}, {3.862886093681155*^9, 3.8628860976220264`*^9}, 
   3.865498252544183*^9, {3.8655820649194355`*^9, 3.8655821004631696`*^9}, 
   3.865582162624036*^9, 3.8655821967758293`*^9, 3.8655858398409653`*^9, {
   3.865585907522145*^9, 3.865585934636943*^9}, {3.865585999201132*^9, 
   3.8655860017480927`*^9}, 3.8655934705105853`*^9, {3.8766454004576874`*^9, 
   3.87664540414887*^9}, 3.87664555477232*^9, {3.876645667364785*^9, 
   3.8766456685541506`*^9}, {3.876645785189412*^9, 3.8766457906753597`*^9}, {
   3.877667904958999*^9, 3.8776679075373583`*^9}, {3.902999855641488*^9, 
   3.9029998869395638`*^9}, {3.902999964934442*^9, 3.902999983445662*^9}, {
   3.903867944431066*^9, 3.903867957949087*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"6c4ca98c-0ad3-47b8-ac3d-462340d8b54b"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" The new ordering of attributes used for calculating the \
solutio order=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "1", ",", "3", ",", "2", ",", "4"}], "}"}]}],
  SequenceForm[
  " The new ordering of attributes used for calculating the solutio order=", {
   5, 6, 1, 3, 2, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.904323307447586*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"2db5b1ce-3b80-4244-91ac-31b57ba6c91e"],

Cell[BoxData["\<\"Method {DifferentialEvolution, CrossProbability -> 0.5, \
InitialPoints -> Automatic, PenaltyFunction -> Automatic, PostProcess -> \
Automatic, RandomSeed -> 12, ScalingFactor -> 0.6, SearchPoints -> 300, \
Tolerance -> 0.001}\"\>"], "Print",
 CellChangeTimes->{3.904323307447586*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"84bac795-553b-417f-9e9a-f524d8aadefb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Completed : \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Number of satisfied inequalities\"\>", "\[Rule]", 
      "3731.`"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"cites_size\"\>", "\[Rule]", "0.06642024971697014`"}], ",", 
       RowBox[{"\<\"kn_similarity\"\>", "\[Rule]", "4.981905468469215`"}], 
       ",", 
       RowBox[{"\<\"_sq (kn_similarity)\"\>", "\[Rule]", 
        RowBox[{"-", "2.4016513033944378`"}]}], ",", 
       RowBox[{"\<\"domain_similarity\"\>", "\[Rule]", "2.76088191399337`"}], 
       ",", 
       RowBox[{"\<\"cites_rankcmd\"\>", "\[Rule]", "1.3983116175519597`"}], 
       ",", 
       RowBox[{"\<\"cites_experience\"\>", "\[Rule]", 
        "1.2889501155821126`"}]}], "}"}], ",", 
     RowBox[{"\<\"Number of inequalities\"\>", "\[Rule]", "3745"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\"\\nSatisfied Ineqs Analysis:\\n \"\>", 
   "\[InvisibleSpace]", 
   TagBox[GridBox[{
      {"\<\"Market no\"\>", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10",
        "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", 
       "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33"},
      {"\<\"Satisfied\"\>", "36", "66", "20", "36", "28", "21", "21", "55", 
       "15", "66", "208", "28", "90", "209", "21", "55", "209", "104", "91", 
       "276", "44", "149", "170", "66", "153", "435", "28", "153", "231", 
       "105", "120", "377", "45"},
      {"\<\"Total\"\>", "36", "66", "21", "36", "28", "21", "21", "55", "15", 
       "66", "210", "28", "91", "210", "21", "55", "210", "105", "91", "276", 
       "45", "153", "171", "66", "153", "435", "28", "153", "231", "105", 
       "120", "378", "45"},
      {"\<\"Percentage %\"\>", "100", "100", "95", "100", "100", "100", "100",
        "100", "100", "100", "99", "100", "99", "100", "100", "100", "100", 
       "99", "100", "100", "98", "97", "99", "100", "100", "100", "100", 
       "100", "100", "100", "100", "100", "100"}
     },
     AutoDelete->False,
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]}],
  SequenceForm[
  "Completed : ", {
   "Number of satisfied inequalities" -> 3731., {
    "cites_size" -> 0.06642024971697014, "kn_similarity" -> 4.981905468469215,
      "_sq (kn_similarity)" -> -2.4016513033944378`, "domain_similarity" -> 
     2.76088191399337, "cites_rankcmd" -> 1.3983116175519597`, 
     "cites_experience" -> 1.2889501155821126`}, "Number of inequalities" -> 
    3745}, "\nSatisfied Ineqs Analysis:\n ", 
   Grid[{{
     "Market no", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
      18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}, {
     "Satisfied", 36, 66, 20, 36, 28, 21, 21, 55, 15, 66, 208, 28, 90, 209, 
      21, 55, 209, 104, 91, 276, 44, 149, 170, 66, 153, 435, 28, 153, 231, 
      105, 120, 377, 45}, {
     "Total", 36, 66, 21, 36, 28, 21, 21, 55, 15, 66, 210, 28, 91, 210, 21, 
      55, 210, 105, 91, 276, 45, 153, 171, 66, 153, 435, 28, 153, 231, 105, 
      120, 378, 45}, {
     "Percentage %", 100, 100, 95, 100, 100, 100, 100, 100, 100, 100, 99, 100,
       99, 100, 100, 100, 100, 99, 100, 100, 98, 97, 99, 100, 100, 100, 100, 
      100, 100, 100, 100, 100, 100}}, Frame -> All]],
  Editable->False]], "Print",
 CellChangeTimes->{3.9043233074632387`*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"c2d7d721-6d9c-4167-aaa2-1ac3560bd53b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Confidence Intervals", "Section",
 CellChangeTimes->{{3.6304822013320837`*^9, 3.6304822015664587`*^9}, {
  3.684107642567583*^9, 
  3.684107657451939*^9}},ExpressionUUID->"95c09f6d-9646-4129-9b50-\
7d1c427084f3"],

Cell[CellGroupData[{

Cell["execution", "Subsection",
 CellChangeTimes->{{3.902898545286371*^9, 
  3.902898547013657*^9}},ExpressionUUID->"f0dde87b-1842-47c0-8251-\
87267e62fdd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ssSize", "=", "28"}], ";", 
  RowBox[{"numSubsamples", "=", "2500"}], ";", 
  RowBox[{"alpha", "=", "0.05"}], ";"}]], "Input",
 CellChangeTimes->{{3.630310397247117*^9, 3.630310402465867*^9}, 
   3.630310937637742*^9, 3.6305594046037283`*^9, {3.6305728467632647`*^9, 
   3.6305728468413897`*^9}, 3.6305736592388506`*^9, {3.671170646515985*^9, 
   3.671170649539482*^9}, 3.671171562366686*^9, 3.671171630504067*^9, 
   3.671172133070477*^9, {3.671172621267507*^9, 3.671172623146764*^9}, {
   3.71843801786828*^9, 3.7184380229677043`*^9}, {3.7188243637410774`*^9, 
   3.718824364402115*^9}, {3.7188257767346506`*^9, 3.7188257811396737`*^9}, {
   3.7189131997942867`*^9, 3.718913200236312*^9}, {3.741631622456807*^9, 
   3.7416316319839354`*^9}, 3.7504441048374376`*^9, 3.7516317353686614`*^9, 
   3.751647088775778*^9, {3.751655354778119*^9, 3.751655355127874*^9}, {
   3.7526045538867445`*^9, 3.7526045677943745`*^9}, {3.757067916732103*^9, 
   3.7570679169149556`*^9}, {3.774934813909644*^9, 3.774934815423119*^9}, {
   3.775215230698141*^9, 3.775215232189506*^9}, {3.7752181833646107`*^9, 
   3.7752181838635564`*^9}, {3.775249658186366*^9, 3.775249668364419*^9}, 
   3.775367986632574*^9, {3.7753718321118584`*^9, 3.7753718329430957`*^9}, {
   3.775398860532031*^9, 3.775398861203822*^9}, 3.7797782923047695`*^9, {
   3.7802006193051033`*^9, 3.780200619873547*^9}, {3.78020352117225*^9, 
   3.7802035219528413`*^9}, 3.7805960624221954`*^9, {3.780599886973386*^9, 
   3.7805998870968304`*^9}, {3.850735876075034*^9, 3.8507358785644894`*^9}, 
   3.8507429367435045`*^9, 3.850754348909645*^9, {3.8507894605441127`*^9, 
   3.850789461601899*^9}, {3.850790290417602*^9, 3.850790291503863*^9}, 
   3.857803612552045*^9, {3.865575188629183*^9, 3.86557518979929*^9}, 
   3.86558196687096*^9, 3.8679441380236006`*^9, 3.868032956196849*^9, 
   3.8682436507678537`*^9, 3.8776678873997154`*^9, {3.8789691804921722`*^9, 
   3.878969181411969*^9}, {3.8795318153698215`*^9, 3.8795318173445454`*^9}, 
   3.879589339701396*^9, {3.879594449094036*^9, 3.879594450856142*^9}, {
   3.8795957645330653`*^9, 3.8795957660639195`*^9}, 3.8796245263338423`*^9, {
   3.8796245838460083`*^9, 3.8796245853606586`*^9}, {3.879878633677662*^9, 
   3.879878635603636*^9}, {3.8799072977399673`*^9, 3.8799073020621767`*^9}, {
   3.879961593460987*^9, 3.879961603321316*^9}, {3.8815831007193136`*^9, 
   3.8815831010847325`*^9}, {3.881643195494691*^9, 3.881643205386758*^9}, {
   3.901929914318879*^9, 3.901929917204464*^9}, {3.901930357798924*^9, 
   3.90193037727621*^9}, {3.9019419764141893`*^9, 3.901941978398734*^9}, {
   3.9022737632725677`*^9, 3.902273764859241*^9}, {3.902908052921977*^9, 
   3.902908054143011*^9}, {3.9029937321745853`*^9, 3.902993734790411*^9}, {
   3.902995564770545*^9, 3.902995567388145*^9}, {3.902999120343672*^9, 
   3.902999121488326*^9}, {3.903057221473806*^9, 3.903057221801098*^9}, {
   3.903058513202173*^9, 3.903058513338109*^9}, {3.903744673228565*^9, 
   3.903744673405995*^9}, {3.903745249051074*^9, 3.903745249349374*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"8153c58f-56c4-494d-b2a3-491cfd546369"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
    "If", " ", "you", " ", "want", " ", "to", " ", "calculate", " ", 
     "confidence", " ", "intervals", " ", "with", " ", "other", " ", 
     "subSamples", " ", "please", " ", "uncomment", " ", "the", " ", "code", 
     " ", "below"}], "*)"}],
   FontSize->14,
   FontWeight->"Bold",
   FontColor->RGBColor[0.5019607843137255, 0., 0.]], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Starting pointIdentified process where alpha = \>\"", ",", 
        "alpha"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"pointIdentified", "=", 
       RowBox[{"pointIdentifiedCR", "[", 
        RowBox[{"ssSize", ",", "numSubsamples", ",", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{"Cx", "[", 
          RowBox[{"noAttr", "-", "1"}], "]"}], ",", " ", "groupIDs", ",", " ",
          "dataArray", ",", "method", ",", "True", ",", 
         RowBox[{"confidenceLevel", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"1", "-", "alpha"}], ")"}]}], ",", 
         RowBox[{"asymptotics", "\[Rule]", "nests"}], ",", " ", 
         RowBox[{"progressUpdate", "\[Rule]", "10"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"pointIdentified", ",", "\[IndentingNewLine]", 
        RowBox[{"ListPlot", "@", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Map", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"MapIndexed", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Flatten", "@", 
                  RowBox[{"{", 
                   RowBox[{"#2", ",", "#1"}], "}"}]}], "&"}], ",", "#"}], 
               "]"}], "&"}], ",", "\[IndentingNewLine]", 
             RowBox[{"pointIdentified", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
            "]"}], ",", "1"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
     ")"}], "//", "AbsoluteTiming"}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.630310275200242*^9, {3.630310329918992*^9, 3.630310357309617*^9}, {
   3.630310589606492*^9, 3.630310614840867*^9}, {3.630310768262742*^9, 
   3.630310769262742*^9}, {3.630311286325242*^9, 3.630311287637742*^9}, {
   3.6303355083603983`*^9, 3.6303355101728983`*^9}, {3.6303358144541483`*^9, 
   3.6303358164853983`*^9}, {3.6303359362353983`*^9, 
   3.6303359372822733`*^9}, {3.6304824158477087`*^9, 
   3.6304824168008337`*^9}, {3.6305725670601397`*^9, 
   3.6305725904507647`*^9}, {3.6305729219195147`*^9, 
   3.6305729247632647`*^9}, {3.6305733948794756`*^9, 
   3.6305734127544756`*^9}, {3.6305734630669756`*^9, 
   3.6305734834263506`*^9}, {3.9019303608972*^9, 3.901930381574362*^9}, {
   3.90193174345966*^9, 3.901931747603012*^9}, {3.9029935511034718`*^9, 
   3.902993556942482*^9}, {3.902993724423065*^9, 3.90299372783045*^9}, {
   3.903057262945971*^9, 3.903057263617872*^9}, {3.903226447729773*^9, 
   3.903226452942013*^9}, {3.903228937319675*^9, 3.903228973697847*^9}, {
   3.903229012235186*^9, 3.903229012346157*^9}, {3.9038626372369957`*^9, 
   3.903862676350317*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"058a9a13-9dae-4800-892b-318cbb05cce5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "If", " ", "you", " ", "need", " ", "to", " ", "save", " ", "the", " ", 
    "calculated", " ", "list", " ", "of", " ", "subSamples", " ", "please", 
    " ", "uncomment", " ", "the", " ", "code", " ", 
    RowBox[{"below", ".", " ", "This"}], " ", "is", " ", "rarely", " ", 
    "necessary", " ", "in", " ", "practice", " ", "and", " ", "we", " ", 
    "included", " ", "here", " ", "for", " ", "reproducibility", " ", 
    "reasons"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"savedGroups", "=", "randomGroups"}], ";", "\[IndentingNewLine]", 
    RowBox[{"savedGroups", ">>", "\"\<savedGroups.m\>\""}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"savedGroups", "\[IndentingNewLine]", "savedGroups"}], "=."}], 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"clears", " ", "the", " ", "variable"}], "*)"}], 
   "\[IndentingNewLine]", "*)"}]}]], "Input",
 CellChangeTimes->{{3.901942509585409*^9, 3.901942520934511*^9}, {
  3.902285468457823*^9, 3.9022854734303617`*^9}, {3.902285514906727*^9, 
  3.90228551745146*^9}, {3.902285588550123*^9, 3.9022855888590612`*^9}, {
  3.90299361750697*^9, 3.902993620223475*^9}, {3.902994574163557*^9, 
  3.902994576195326*^9}, {3.9032264731443157`*^9, 3.9032264764855623`*^9}, {
  3.903228896995109*^9, 3.90322890721941*^9}, {3.903228982052988*^9, 
  3.903229038324854*^9}, {3.904296947500442*^9, 3.9042969729479585`*^9}},
 Background->RGBColor[1, 1, 0],
 CellLabel->"In[15]:=",ExpressionUUID->"4a0315c1-852a-4cb2-a867-db7e9d4bd545"],

Cell[CellGroupData[{

Cell["\<\
Run with saved subSamples (Random Groups)

(*This step is provided in the code for reproducibility reasons. Running the \
confidence intervals using the saved random groups allows users to obtain the \
same results as in Table 2a of the paper. Skip this step if you want to \
generate the confidence intervals with own set of subsamples *)\
\>", "Subsubsection",
 CellChangeTimes->{{3.903229048912941*^9, 3.903229066604827*^9}, {
  3.903229104518812*^9, 3.903229120347959*^9}, {3.90429423616606*^9, 
  3.904294351143983*^9}, {3.9042969834947624`*^9, 
  3.904297050950268*^9}},ExpressionUUID->"7aa69475-664e-4202-9223-\
82711749cbfa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"savedGroups", "=", 
   RowBox[{"<<", "\"\<../data/savedGroupsReplication.m\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"numSubsamples", "=", 
  RowBox[{"Length", "[", "savedGroups", "]"}]}]}], "Input",
 CellChangeTimes->{{3.902272788560197*^9, 3.90227284311373*^9}, {
   3.902272927239952*^9, 3.902272971076291*^9}, {3.902273498057432*^9, 
   3.90227349855459*^9}, {3.902273799563682*^9, 3.90227380846456*^9}, {
   3.902274196645982*^9, 3.902274247667609*^9}, {3.902274417532733*^9, 
   3.9022744354206448`*^9}, {3.9022837346457987`*^9, 
   3.9022837956321363`*^9}, {3.902285528417015*^9, 3.9022855822366533`*^9}, {
   3.902993623137549*^9, 3.902993628132927*^9}, {3.90299457925368*^9, 
   3.90299458271485*^9}, {3.9032264804326963`*^9, 3.903226501411935*^9}, {
   3.903228912144611*^9, 3.903228912899105*^9}, {3.90339938022556*^9, 
   3.903399398679229*^9}, {3.9037442779774113`*^9, 3.903744279561153*^9}, 
   3.903744383980123*^9, {3.9037446905593567`*^9, 3.903744708805357*^9}, {
   3.9038432358713007`*^9, 3.903843238115677*^9}, {3.9038648543216276`*^9, 
   3.9038648560607395`*^9}, {3.903866570112615*^9, 3.903866625723048*^9}, {
   3.903867568828137*^9, 3.903867569812767*^9}},
 Background->RGBColor[1, 1, 0],
 CellLabel->"In[16]:=",ExpressionUUID->"73344bb0-0037-4945-acfe-2ea9b7dbcd06"],

Cell[BoxData["2500"], "Output",
 CellChangeTimes->{3.904323307572557*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"158b1b0f-54a3-4636-be3b-a757dac2c568"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<Starting pointIdentified process where alpha = \>\"", ",", 
       "alpha"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"pointIdentified", "=", 
      RowBox[{"pointIdentifiedCR", "[", 
       RowBox[{"ssSize", ",", "numSubsamples", ",", 
        RowBox[{"sol", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
        RowBox[{"Cx", "[", 
         RowBox[{"noAttr", "-", "1"}], "]"}], ",", " ", "groupIDs", ",", " ", 
        "dataArray", ",", "method", ",", "True", ",", 
        RowBox[{"confidenceLevel", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"1", "-", "alpha"}], ")"}]}], ",", 
        RowBox[{"asymptotics", "\[Rule]", "nests"}], ",", " ", 
        RowBox[{"progressUpdate", "\[Rule]", "10"}], ",", 
        RowBox[{"useSavedGroups", "\[Rule]", "True"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointIdentified", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"pointIdentified", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"MapIndexed", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Flatten", "@", 
                 RowBox[{"{", 
                  RowBox[{"#2", ",", "#1"}], "}"}]}], "&"}], ",", "#"}], 
              "]"}], "&"}], ",", "\[IndentingNewLine]", 
            RowBox[{"pointIdentified", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
           "]"}], ",", "1"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
    ")"}], "//", "AbsoluteTiming"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Attention", ":", " ", 
     RowBox[{
     "the", " ", "graph", " ", "plots", " ", "all", " ", "point", " ", 
      "estimates"}]}], ",", " ", 
    RowBox[{
    "regardless", " ", "of", " ", "whether", " ", "they", " ", "fall", " ", 
     "or", " ", "not", " ", "in", " ", "the", " ", "confidence", " ", 
     "intervals"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.630310275200242*^9, {3.630310329918992*^9, 3.630310357309617*^9}, {
   3.630310589606492*^9, 3.630310614840867*^9}, {3.630310768262742*^9, 
   3.630310769262742*^9}, {3.630311286325242*^9, 3.630311287637742*^9}, {
   3.6303355083603983`*^9, 3.6303355101728983`*^9}, {3.6303358144541483`*^9, 
   3.6303358164853983`*^9}, {3.6303359362353983`*^9, 
   3.6303359372822733`*^9}, {3.6304824158477087`*^9, 
   3.6304824168008337`*^9}, {3.6305725670601397`*^9, 
   3.6305725904507647`*^9}, {3.6305729219195147`*^9, 
   3.6305729247632647`*^9}, {3.6305733948794756`*^9, 
   3.6305734127544756`*^9}, {3.6305734630669756`*^9, 
   3.6305734834263506`*^9}, {3.9019303608972*^9, 3.901930381574362*^9}, {
   3.90193174345966*^9, 3.901931747603012*^9}, {3.9019420126839457`*^9, 
   3.9019420224949703`*^9}, {3.901942065601927*^9, 3.901942067655796*^9}, 
   3.9022730419267*^9, {3.902287817024399*^9, 3.9022878231221657`*^9}, {
   3.9030575205002193`*^9, 3.903057521191359*^9}, {3.903745134413439*^9, 
   3.903745161126507*^9}, {3.9042311530890865`*^9, 3.9042312432030044`*^9}, {
   3.904297070596005*^9, 3.9042970714791217`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"1e72ac41-1763-4f4e-8c85-5e200208df11"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Starting pointIdentified process where alpha = \"\>", 
   "\[InvisibleSpace]", "0.05`"}],
  SequenceForm["Starting pointIdentified process where alpha = ", 0.05],
  Editable->False]], "Print",
 CellChangeTimes->{3.9043233075881786`*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"047eeeb4-4c1e-4555-b97e-b356e2082b3e"],

Cell["\<\

Iterations completed:10

Iterations completed:20

Iterations completed:30

Iterations completed:40

Iterations completed:50

Iterations completed:60

Iterations completed:70

Iterations completed:80

Iterations completed:90

Iterations completed:100

Iterations completed:110

Iterations completed:120

Iterations completed:130

Iterations completed:140

Iterations completed:150

Iterations completed:160

Iterations completed:170

Iterations completed:180

Iterations completed:190

Iterations completed:200

Iterations completed:210

Iterations completed:220

Iterations completed:230

Iterations completed:240

Iterations completed:250

Iterations completed:260

Iterations completed:270

Iterations completed:280

Iterations completed:290

Iterations completed:300

Iterations completed:310

Iterations completed:320

Iterations completed:330

Iterations completed:340

Iterations completed:350

Iterations completed:360

Iterations completed:370

Iterations completed:380

Iterations completed:390

Iterations completed:400

Iterations completed:410

Iterations completed:420

Iterations completed:430

Iterations completed:440

Iterations completed:450

Iterations completed:460

Iterations completed:470

Iterations completed:480

Iterations completed:490

Iterations completed:500

Iterations completed:510

Iterations completed:520

Iterations completed:530

Iterations completed:540

Iterations completed:550

Iterations completed:560

Iterations completed:570

Iterations completed:580

Iterations completed:590

Iterations completed:600

Iterations completed:610

Iterations completed:620

Iterations completed:630

Iterations completed:640

Iterations completed:650

Iterations completed:660

Iterations completed:670

Iterations completed:680

Iterations completed:690

Iterations completed:700

Iterations completed:710

Iterations completed:720

Iterations completed:730

Iterations completed:740

Iterations completed:750

Iterations completed:760

Iterations completed:770

Iterations completed:780

Iterations completed:790

Iterations completed:800

Iterations completed:810

Iterations completed:820

Iterations completed:830

Iterations completed:840

Iterations completed:850

Iterations completed:860

Iterations completed:870

Iterations completed:880

Iterations completed:890

Iterations completed:900

Iterations completed:910

Iterations completed:920

Iterations completed:930

Iterations completed:940

Iterations completed:950

Iterations completed:960

Iterations completed:970

Iterations completed:980

Iterations completed:990

Iterations completed:1000

Iterations completed:1010

Iterations completed:1020

Iterations completed:1030

Iterations completed:1040

Iterations completed:1050

Iterations completed:1060

Iterations completed:1070

Iterations completed:1080

Iterations completed:1090

Iterations completed:1100

Iterations completed:1110

Iterations completed:1120

Iterations completed:1130

Iterations completed:1140

Iterations completed:1150

Iterations completed:1160

Iterations completed:1170

Iterations completed:1180

Iterations completed:1190

Iterations completed:1200

Iterations completed:1210

Iterations completed:1220

Iterations completed:1230

Iterations completed:1240

Iterations completed:1250

Iterations completed:1260

Iterations completed:1270

Iterations completed:1280

Iterations completed:1290

Iterations completed:1300

Iterations completed:1310

Iterations completed:1320

Iterations completed:1330

Iterations completed:1340

Iterations completed:1350

Iterations completed:1360

Iterations completed:1370

Iterations completed:1380

Iterations completed:1390

Iterations completed:1400

Iterations completed:1410

Iterations completed:1420

Iterations completed:1430

Iterations completed:1440

Iterations completed:1450

Iterations completed:1460

Iterations completed:1470

Iterations completed:1480

Iterations completed:1490

Iterations completed:1500

Iterations completed:1510

Iterations completed:1520

Iterations completed:1530

Iterations completed:1540

Iterations completed:1550

Iterations completed:1560

Iterations completed:1570

Iterations completed:1580

Iterations completed:1590

Iterations completed:1600

Iterations completed:1610

Iterations completed:1620

Iterations completed:1630

Iterations completed:1640

Iterations completed:1650

Iterations completed:1660

Iterations completed:1670

Iterations completed:1680

Iterations completed:1690

Iterations completed:1700

Iterations completed:1710

Iterations completed:1720

Iterations completed:1730

Iterations completed:1740

Iterations completed:1750

Iterations completed:1760

Iterations completed:1770

Iterations completed:1780

Iterations completed:1790

Iterations completed:1800

Iterations completed:1810

Iterations completed:1820

Iterations completed:1830

Iterations completed:1840

Iterations completed:1850

Iterations completed:1860

Iterations completed:1870

Iterations completed:1880

Iterations completed:1890

Iterations completed:1900

Iterations completed:1910

Iterations completed:1920

Iterations completed:1930

Iterations completed:1940

Iterations completed:1950

Iterations completed:1960

Iterations completed:1970

Iterations completed:1980

Iterations completed:1990

Iterations completed:2000

Iterations completed:2010

Iterations completed:2020

Iterations completed:2030

Iterations completed:2040

Iterations completed:2050

Iterations completed:2060

Iterations completed:2070

Iterations completed:2080

Iterations completed:2090

Iterations completed:2100

Iterations completed:2110

Iterations completed:2120

Iterations completed:2130

Iterations completed:2140

Iterations completed:2150

Iterations completed:2160

Iterations completed:2170

Iterations completed:2180

Iterations completed:2190

Iterations completed:2200

Iterations completed:2210

Iterations completed:2220

Iterations completed:2230

Iterations completed:2240

Iterations completed:2250

Iterations completed:2260

Iterations completed:2270

Iterations completed:2280

Iterations completed:2290

Iterations completed:2300

Iterations completed:2310

Iterations completed:2320

Iterations completed:2330

Iterations completed:2340

Iterations completed:2350

Iterations completed:2360

Iterations completed:2370

Iterations completed:2380

Iterations completed:2390

Iterations completed:2400

Iterations completed:2410

Iterations completed:2420

Iterations completed:2430

Iterations completed:2440

Iterations completed:2450

Iterations completed:2460

Iterations completed:2470

Iterations completed:2480

Iterations completed:2490

Iterations completed:2500\
\>", "Print",
 CellChangeTimes->{3.9043234592641115`*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"1137028d-7169-48cf-bb83-b7c92ae7c119"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"39047.7133102`", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Symmetric case\"\>", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\<\"cites_size\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.1125299989059743`"}], ",", 
                    "1.2453704983399145`"}], "}"}]}], ",", 
                   RowBox[{"\<\"kn_similarity\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "1.1750399809833745`", ",", "8.788770955955055`"}], 
                    "}"}]}], ",", 
                   RowBox[{"\<\"_sq (kn_similarity)\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.155014767836711`"}], ",", 
                    "0.3517121610478351`"}], "}"}]}], ",", 
                   RowBox[{"\<\"domain_similarity\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "1.2952121080032537`", ",", "4.226551719983486`"}], 
                    "}"}]}], ",", 
                   RowBox[{"\<\"cites_rankcmd\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.15878153405696627`", ",", "2.637841701046953`"}], 
                    "}"}]}], ",", 
                   RowBox[{"\<\"cites_experience\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.034527328740034946`", ",", "2.5433729024241902`"}], 
                    "}"}]}]}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "0.5581967566471115`", ",", "5.284370444852607`", ",", 
                   RowBox[{"-", "2.9762134564606293`"}], ",", 
                   "2.426805200091372`", ",", "2.8972047755267436`", ",", 
                   "0.6064188441057926`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "0.18840911020135695`", ",", "10.979499713052853`", ",", 
                   RowBox[{"-", "7.846259978716581`"}], ",", 
                   "2.9632127441851557`", ",", "3.8199865126774335`", ",", 
                   RowBox[{"-", "4.346842253447792`"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "2.412736972143482`"}], ",", 
                   RowBox[{"-", "1.4161473700396103`"}], ",", 
                   "1.2747278652504246`", ",", 
                   RowBox[{"-", "1.290111135767308`"}], ",", 
                   RowBox[{"-", "0.21249092588850357`"}], ",", 
                   RowBox[{"-", "3.706265435846824`"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "6.826264252277683`", ",", "16.67885320464047`", ",", 
                   RowBox[{"-", "7.973822792852101`"}], ",", 
                   "9.00454451354048`", ",", 
                   RowBox[{"-", "0.4518951089641479`"}], ",", 
                   RowBox[{"-", "1.2868274105341826`"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "4.907315033489239`", ",", "19.300366609973423`", ",", 
                   RowBox[{"-", "13.383209176119852`"}], ",", 
                   "7.813024395719705`", ",", "3.362639335396875`", ",", 
                   "3.1753252284168076`"}], "}"}], ",", 
                 TemplateBox[{"2490"},
                  "OutputSizeLimit`Skeleton"], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "3.6995577383053337`"}], ",", 
                   RowBox[{"-", "1.340854603788067`"}], ",", 
                   "0.5175736559415683`", ",", 
                   RowBox[{"-", "1.0583964777906498`"}], ",", 
                   "1.2586565179705478`", ",", 
                   RowBox[{"-", "1.9448427958189767`"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"3.472711215911034`", ",", 
                   RowBox[{"-", "0.7091877573246693`"}], ",", 
                   "0.671018717224378`", ",", 
                   RowBox[{"-", "0.08611281382357111`"}], ",", 
                   RowBox[{"-", "2.750860373367387`"}], ",", 
                   RowBox[{"-", "1.748674357668011`"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "1.2971894126156795`", ",", "9.184862503357461`", ",", 
                   RowBox[{"-", "5.896046488891263`"}], ",", 
                   "3.724316726314499`", ",", "3.6485558269763367`", ",", 
                   "0.7948340246760537`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1.6422174758153607`", ",", 
                   RowBox[{"-", "0.21277817518199874`"}], ",", 
                   RowBox[{"-", "0.6238312097946079`"}], ",", 
                   RowBox[{"-", "0.4240744775647825`"}], ",", 
                   RowBox[{"-", "1.205974370887035`"}], ",", 
                   RowBox[{"-", "2.407930778626028`"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "2.2572115130936843`", ",", "0.2223333328600877`", ",", 
                   RowBox[{"-", "0.5922071441885896`"}], ",", 
                   RowBox[{"-", "2.1752415022016334`"}], ",", 
                   "0.4801204457284583`", ",", 
                   RowBox[{"-", "0.3015689051605104`"}]}], "}"}]}], "}"}]}], 
              "}"}], ",", 
             GraphicsBox[{{}, 
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                 NCache[
                  Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[
                1.6], PointBox[CompressedData["
1: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
ML9/ZVvMKu3pEJJf0SIsyYsDvu/zKP4ob3gW9Je2kxUkiQ+4IH4YtTClkB/Q
H1Jccvn2iCTUZ7dSBd44b0L91/XJ4fiXctAfwqDv1/FCIgHJL/BOy7ZombQU
x/fnrSO+VAP4N2M6aWe/biD8KwItnbNKkP+n+9QtePIEvO/7NJ4u876B70N9
4xGSqfOD/F6coCuNrQTsnylYzy6yeAP3K+89oXbzB7APDcqSbpp6sD+TZrPn
XrPbMJK/pJ6Q30cS5k95UiofUiZCf6yI1/uiiNvw/WUHkdfi1tYwP0tRvByT
wQr9b+EPt48+W4T5puzhOP6E482I/87ObKMK83Z0voLHu47pN0N/rJ/3ytwo
NfSP8VlQhm7LwfygUkIJpV0xxHc5fC5+K0qw/4qF6GDEp3SY73tSavLR9Sfs
jyXpb3xUUI5/P4QGs3KRHubtgf0qh161JxcfBftzipRY8YkKzMcFG3DfbVqG
/cbp0mdCpkeOI/y8vmSFlALorzCOl3BjPwL2wTdbVlrGFPorOnWmX92vakD8
q3rb/Eqdg/xhq8Zj8w9fYf6lnrfSlNYM4guuK8qbY/Lgv+11hLCmeePvCQPG
kLiV0Xcf+lcJjzkN3WCD/U6eia3yc+z4e0r+P7Rd+SOWbdO2h5Ile4mUkCzJ
VsItRChkCyl7pSSKkiJZspSlsiZZQygSiUKyq0j2NSFLSNkVvuf94b6O/oHv
5+dt3jHXeZ/nzDHHHENy9217J3sT+vO5nSdDel+Dv1R1PFFapwHxuZ70Jj+3
F/yKw6NXsk/tQn3N83Tz5TT6vUR8mK7QlAk7Yf+mi+2Tffy54J8ESF3XqPoC
/FDlntuRZj0+wv7GWXPjm1Tgz8gPlUyf/oD7R233y9yG7dhPl7P8fZt4POr3
qj1fDsZuwvl/MG3otf088Dele/a9D/7g/draHuLG7Q98vuHVIXGx88B/nidZ
D4XuIs9T/nf//HIalFdCfhI6Q0nvegH4QMXAvKOPAuZzRdTUxVauzhP+u+6c
dDrLX0LYr37dyLP2Bu/j6PfY56X24J8f46W9e4oK+rrU5/6s9l0DPu/dQlFD
xY/9Ec7qN7oXbVAfxf7eN9s1Af0Qjt82o10h2P/7Tcs4nVkV+vPHAxqf9H34
Tpx/pV+lpxjSMf8lMd/fLfxTtJxsf6/Jp9AfaQuEfddm4Zq+EszXLDCclDvs
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
+W1H/GfUX0anXCfvA/6vfj902O7gqa9E/DXmi8aTD2C+Q8FzcSunti8RnyiV
tzHf1mH+nc+Hn9foZCNhf9/1JYmaDvQH3y6c3uDri/crqe78yQlfzGcxqYSs
l1xGfkX1ez83aQH8Z5nn79LYlJFfSbOIry+nh/3bJVPjZV0viPivaElo7WiF
/kl17i/BAA3w66KFf0jdPL1G+F9v2HeM+x98w+zYFbVeD/CvEnhHjYPpMV8j
VidSZqKF+7NPOizJqw3z76tDXibtXOhfZ2RIRx87jfl0XSPzSrYa8POVJH8a
K9yH/sA+W+tLs/24/8t4jgm2u2G/8PI9c+29j0aJ+Dw4uo9/rLSYiP82UZZl
mj/Y7yDqHX3K7Q35vqAnSZ57rGduh/l0hgRGiVB1zC/zsf6NfDtDV062b5e8
7bz9AXK+NK1CfePqlQl67I8rYPNsvjYGfCm5L1XfQQ76nOVzeSmcx//hP9PO
p5sSesHcpA1PfhXrNmN+vMex3oW0m/z/T0FSjmRwc7wA/hJnPtMuR0Pktxv7
hS/z5qC+1ho2o6om9JW4ST3e9yiNq3C/PZZeXN9Vhv7vL2/DWOZz+H09VtEK
vSALfPXuwNB+tR70x4dkn/+moSfXO9yknabhmtzUwAc09MUar5+DvofaSTMt
zXByPU5Pujmw7HeLEfqKb/dc/CBti/gIOR33TrDDfOVE+ZPDbzKHifg8lQlX
CWmEfkLg7KCynjnms8y/3TyVpwB9vHJ+diFZerwvoj0/RPXOgD925Yvl2shG
zI/QRKwf8PkNfG9O0i2x7ij6m9afnow+2SZDxIeb4dffiQQyf/C//OF82lDU
jfeE/eu3zgkrfdxKxJ80dbZ9/QI5n6QgudYOhHM+nSbO/zBnnu5yN/IHjaK6
0g4txH8bza/CkRr4X9rrepo9GvpLp4VFSVm84N+GcVwv+7qM/bbRWm3j9uPY
H+S1vmDLPinw/08nM3w1jsf+Sge5AfE4GuADLO7zFXo00P9vHsxjmvLE/EWp
dOphL6tRIv7+o97WTauY77MPK6G6ywJ9jA81ToHpO4EP6JQnDb15WEzYPymV
rFFE6MXRk7hIZ3Mvl7wi7OdYMd7+UdNDfF/Z5NrZJHHcP+udnE7Ubv1K2J9b
oF/5bfmOiE/x6T3GdzQVSGT7o38LxoLsxYn4m4WPcV5QEiSR7e8YVbtoXMZA
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
/nDmoMv0h6fg1+WeqaiyTsN+vfXONIYFy9gPmyKs8NWOu56wH8a0a8ljEvob
Ms4PC+Sf4/eVuhJhG+MD/DAn0vxGxwHo7/W4B1purcV8imi9kCmHSDFh/06p
8ybaUugPnNWgp2Qi9jVMq8ydeuM/oYvfV/8q9ae2OOgbJ478MS2lRv+L51mK
XYEO+Dl0ju2hDyzQv6BzZVAOj4b/jtPCCZk/oT//db73lGUf7O+/9liZexb1
bxKHetNkI/hj3hYlX5rCgS99fHaZjk+EjrD/ZvJG4T1b8FcNLJcy30rifI67
rWTRGKP/RfPmsjsNPfixgSv3w1RmMB8UYJVzZkM+/LfZmRyisBn6Fa9zoqup
tKHvtMomO9M7207Ev4/psnfdOswnKvzmUQrwwX7JuyJUF5WjMP9iXKO6TaS0
nIjPcODdmxSseN+1JVcPBFGhvg67K6q7eAX43tcfRbTUITifYx6JLr7C4A+8
mw1r9xgFfyyTzyNxmwf42zOJ3g+CVhII/8dnNMuGksCvluqcrNtAT8bXuUkN
n103yxRA33jaQFk8XhL4QNwRNavAD/j9xkhz+LBIxhL27cV46qvs0L8wXVC3
tQ6HfpFa3dDEnZE6wn/qRaU+P5Epwv6L36SFZjXo0248oXfvUQ/2C4iXLG/y
F8f5URWvr7s9hPjUfP/YHxEH/dKDD3suHVIA/vlKoy3yzS/Mnz7Ym9Zwdx/0
vT8XC2yh0IA+/9siZ8EMMdz/3jdijnX9xv7ZLZY3tn6VQP7AlXtkB1815n9/
17Uz0h1sI+xvPHpsalcN+FFu8fmPSiLAz9kUfVzovA/ex+LyoLbIePA/pczZ
9flS3xPfd6VCo7BSFvp7Fd1tdTqd4P9sioyNGryD/oLT6uv1i4eBD9fncstK
uaI/crf/IX+uEvjnlzaXaTcVgX9L0dAZQDUKfTytL/uv/zkGfFJ+8hHdp7Bx
4vu+36W7VPAV+I/4WsJtNlfcb4svTO2+r+B+a7Rp9Y/6A37vU/6oF++uoj8l
1HWBNcJ5lLB/orXnF48D+EXBZ19uOKMH/VjjT7zZF5pQXzh8bOAQdsD7K/B2
xSeMH/1TD/EL7mNO2G8imzwrdefuEGHf/HG8z3F15LdJVz+/tGGqJfy/ftZN
O/PUa8K+Gk+sQXov6sdHN9ba7kQD35bkkUmLqUV+aDRN+bGxBftlnMSNnn7/
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
TRX1XcHOb2yK4WR8hYNEqv9CG38c+wXs2cLVH3xHf3YgYTjrRjDuj2jgqa1M
kti/mbL+2uDFs9AvcrDOLW7xRv0Vlb76ykML/aOVP0vUO0Y+EudfFft4uV8A
+OSNkaHdD/TRf7x/ta77qSfwK49ndLr3+DC/cHnVZez3lhrC/7LfUwI0HdD/
FVWuv7Em9J24P48vNurY0IL/aR4T9lo5B/oVVylOvxTc1E3YFzUu9tQ+D36I
Zdi1fNUS7C9z6JjiWy1Bf/zTXhPb2wegn+mo48ohVIP+eL5SmoGiAfTzZ1Tv
njuXgf2nfr3VMnXZqH9f+jG3xkUi/xSnupn3zQfx36/iztGyKPy+gc27PA7t
BL4hyVOp3q0LfT9lfW0NJnfgn4+7jYdrGTHfF/NVIrBGE/rzJwSaGdekMb+j
9vWcZ9UM9PNLj5TOay6Av1Tk+Cj6lyct4f/q5F7eilTMv1OoXbVcNwH9Pf2X
Hu7OMdCvu2F803rBHPv7UhcvPm04hvzQO/wHf+wpzGfRb/ULjm0APhmS0DER
Vw7/z2aPp4TKZxH2vWVnku1Xwf8n6dIOTvmDn6Mh/Val9A/4+YNdPQFrJeT/
h4J0wO1jhj3LHcL+e4GQ4LbdmF/+1i+7YipdSdi/5LXgxXu1l7A/5T/kyT+E
9zd+3YF9QmafCP879IlkCedB/81nTjOOohr5YQ0fjfbPB9jf9FX7BpMgNfiT
tcoRkeN7oL9RRJurLiwLfYxLL+enpVww/0vbdpJbgBnzv3d36Jznvoj+PkVn
9a7ACegLDVE3Zsq8+Ge/W/m+i+cn0B+UvZE2enUd9Jm7Jjlj+Q4uEvbP2xUW
Br4HPn/NzZHNnxb5g5zS66kHLuAP6+ZuDVrOxPwvZd2v8M9LuJ88KbSMD29A
35tm+qfTuwzMx23q4mljK0b+H3BznGeHEOoXc4uhuvkMzKfwGzh1cA8gvtEG
n//YNZlD+F8s46/e/Dbcz4zqOHfKDuxnzD6/u9ZIBfjDm7ienvDHyP9DhN13
iGQh//SPtLovdA755/J085VzJ7C/fine/7CtLfCxG2k72rpNsL+pYWRkwlCI
ijh/W2R7Rr6TNIlsv8Bn865JSVHCP2nnpThH+dBfznx6pGt51z/885fjLbqs
yE8a7f/+ufYa9Vfm2IjL7ha8X8rVq92JDpjPei53QvjCdvCv7hbuNtjIhfmU
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
7Kftj60wpQE+UIe9MlB6Cvo/phdSCiLX5FcGPtlRrDW4/xfqizwEJcn9OBpS
I8Oe0M0r5PkoA8nRe2Akuxr5f3txtKuyM/BLip2PhD+q4n10kp0400mD+WPx
OvWhUCfcPwEufOlfG8HPlW4eHFOnJ/vDRHqXcfD0tyb0J6v6Jx7yjk0T8Sld
/tumXIL7IcD52uaWLPS3ZY67ba6Z/0HEZ2MtP2XOIeSfbG5LwWd1WIvJ9i/I
brl9Whbz3x9xtf1G55G/UdUZ99ziJ/tDQxJ4OnrH/ybyt3AfRrGRNfvpnhWz
mipaAZ9v84xDjrIR+bNA6vRMqh/wCb1tNOs0T5H76f+97yOa/8pLgH9w8ch/
cIUe+EyNnymbWJSoCf+7e56/+ScA/p3gqYfCmxkxP1WuLbcrs8bva/jTuGPA
CPezTXBeWM0p1L9+3lGsqsvAj9WXcoR8qvhA+B+S83MkWQX6ik3pot6svaiP
orw2+cu9RX1U8GhSqOUw6iPN2F621jb0r6xsdNTF9cnvw3/3Z0ZN9uEB6Bv3
784I+JxIrg9pSBEXRUTLAvqJ8/PwgrxdVA/wMwqtgWJF7ugPNHBZ6TWxAP8v
2Dv9/SQN9O3vS9/5vE0L+GHmuqyZiBXot1uryLjJimE+e3mRyuyweTth/4Xm
hg01Wrg/e9ik3COS0N8ONTY1npODvorBgmEN5W7MT1+vvLHcW4r5o4v6Vc5Z
A8ynZh0zJdkezRP+D70fpdKTAb6L2bU+TWsL9JOXHMW6TjcDP+/f+m17z1/o
50hzu553t4P+norw9pnqcnxfoq5O9ne2YL52mbI9VUx4D+G/9TgN800Lsl4u
AymQ8UgI/R3g50+9UEzdbwz8g1bGkuJZXugDvxRKL+20hj6Pz0xdhOIk9FsO
vBVi/pyC+MTTXD1ZHYb3fbdMVmxpCvjRdkY76E5K4P4Z3iCvUbEO/DiG02nb
Gk3J/QwaEndbiJM4HfTNTnIo+E63Yn+Q3tWAF6aZ1UR8lv4sf+2+B/0EHos5
Z3X1LMJ//sA99Dl84N/VNhkzC7rB/7YT54/GJGM+yJA1sYf1L/gvQpX2vbLn
0b+SSG3Ip1Z5R/i//jC9RfORNfgNXlqhlZvI/+Uq39ZpZ2G+f56S+5ioOX5f
ZY1Dp39boj8zOHQkdigB7/vEya4UemIfIw1phIOC59JW7NdQDqZ0HFLD/ZnQ
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
/YT6yIVCu6FKe/RH0J6akb8rgfiESsru98cF1N87XyYkK1HhfCpZ2gy5bAf+
U8qzdNzaAPoJLGnsPzkFEP9H9db+/c2E+F/5Z02xhB/qR0kFFnOFOYg/SS9Y
bH1e9hL2xS2qVDyFlwn/lGrKxRiYIT8V32bT8pMa9fE3CZcKw2SRn67u3uz9
xbOc8M/jl83rfo1Bv46jKzR2oxrq46SNxlvspjAfgS9ArO21J/qPlh5FH1un
Cf0ERa73FicbUT9Vt7bliL1Erj9RkPL6qt7onJchke171Yk5zQejfvf3o5NU
00ZhEtn+YqzXCT0ecr2YmzT8wkV7iAf6dSbf+DnLGRG/FfKda344DP0Wfn2b
k4f40D914JSz3YFgnB/DBH7NjEr4/+2Ooaz1deA/6wgp+1qpoX/fym75MmsA
+XumJyluEr975DXmJzI2yb0LPoH68tHis+4htYhvWbuin1+cwPu4eE03NXgF
628Z6oiTsyoi1q8bpKoUMYT+90Kl1p3x2chf9ujPi3jwQh8pNI3je9H1WWJ/
szzmV6yJfJKCFH7XyKmAmG9GTzodyfFI5C7ms386Ppez4ctXYv2ZO4sXzkVh
f9UPeAtkViP+PHa86bl0Kr6v2thLgpmXEB+OeAqdEdyP/oKwH7ceCrWB/3B9
6+AvZTX09/15ER1nzIb+cY29p9+zuALfDpxtkqL7p34qThd0Wr0I+MlHJgeG
p+JtxP5673Po/6OB/CtY+ULSgWryeZpWu6a0jm/qMvL3oBLDywabMZ8xwXsl
e0kW/e9PLrsXiDcuEvbvTaUupkVDX71jMkYzNxz6D2cvWi84zqD/dyOn7ot+
GcS3Wyx+ypV8Rv2U+kXBlVuH5gj7XueKVq6ZgT98aEL9GcOGFWJ/o2uDVDe5
Qf9q3c+5oPN7cD97mGsFVjOj/mJiqvthZzLw5+LuL5XNh3D+NTj8Iu8UQz/q
ocKtMKXb6C8WLWdZV8QHfrXBMVebKIIvzkq6k/BB6m4A8M8z2lN6hT5/iPUb
RlzvEuDD+bQSiPOLtQT+/Cz/wYbOv3h/NVN9wl9uwXzM3c0tV/+oY/6Flppg
NiML9vdsP3/9962UJLJ9M+oDJ/eHIn/XPHPMc5we+ElbY5/2pZvkv89KOis1
8+ymHPRhUheeG3FuR3z+oFnwwbFazGf/kRjjcOUc6qd3dxvabIyHfsXreinq
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
                 "]]}, {{}, {}}},
              AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
              Axes->{True, True},
              AxesLabel->{None, None},
              AxesOrigin->{0, 0},
              DisplayFunction->Identity,
              Frame->{{False, False}, {False, False}},
              FrameLabel->{{None, None}, {None, None}},
              FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
              GridLines->{None, None},
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              
              Method->{
               "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}},
              PlotRange->{{0, 6.}, {-7.971609648713748, 7.056501314195079}},
              PlotRangeClipping->True,
              PlotRangePadding->{{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.05], 
                 Scaled[0.05]}},
              Ticks->{Automatic, Automatic}]}], "}"}]}], "}"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{49.2099609375, {2., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39.884765625, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 18, 17288157330047267039, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{46.73583984375, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 18, 17288157330047267039, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{34.4970703125, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{34.4970703125, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 18, 17288157330047267039, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{59.73046875, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[17288157330047267039 === $SessionID, 
   Out[18], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.904362355355189*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"8f95dfe7-972d-4f27-b3d7-689843071ef5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\mindruta\\\\Documents\\\\RESEARCH\\\\msework\\\\\
Remove\\\\RemoveMultipleRun\\\\starsreplicationCIsolutions.dat\>\"", ",", 
     RowBox[{"pointIdentified", "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}],
   Background->RGBColor[1, 1, 0]], ";", " ", 
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<../data/\!\(\*StyleBox[\"starsreplicationCIsolutions\",Background->\
RGBColor[1, 1, 0]]\)\!\(\*StyleBox[\".\",Background->RGBColor[1, 1, 0]]\)\!\(\
\*StyleBox[\"dat\",Background->RGBColor[1, 1, \
0]]\)\!\(\*StyleBox[\"\\\"\",Background->RGBColor[1, 1, 0]]\)", 
      StyleBox[",",
       Background->RGBColor[1, 1, 0]], 
      StyleBox[
       RowBox[{"pointIdentified", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}],
       Background->RGBColor[1, 1, 0]]}], 
     StyleBox["]",
      Background->RGBColor[1, 1, 0]]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Saves", " ", "all", " ", "solutions", " ", 
     RowBox[{"(", 
      RowBox[{"point", "-", 
       RowBox[{"identified", " ", "estimates"}]}], ")"}], " ", "in", " ", 
     "the", " ", "confidence", " ", "intervals"}], ";", " ", 
    RowBox[{
     RowBox[{
     "the", " ", "file", " ", "serves", " ", "as", " ", "input", " ", "in", 
      " ", "the", " ", "robustness", " ", "checks", " ", "analysis"}], "-", 
     " ", 
     RowBox[{
     "see", " ", "Appendix", " ", "2", " ", "of", " ", "the", " ", 
      "paper"}]}]}], "  ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.904362441526848*^9, 3.9043624430355554`*^9}, {
   3.9045542494085703`*^9, 3.904554376594015*^9}, {3.904554727673568*^9, 
   3.9045547574311123`*^9}, {3.9045547998298054`*^9, 3.90455484404445*^9}, 
   3.9045548786801853`*^9},ExpressionUUID->"d41c7bc5-8b44-451b-a9be-\
fbab4e41230b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{949, 467},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DockedCells->{},
TaggingRules->Association["TryRealOnly" -> False],
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (May 11, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c18b495c-cb2d-4033-981a-2760df724465"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1161, 21, 267, "Section",ExpressionUUID->"a07aa20e-9937-4186-bc43-89ffc8a76382"],
Cell[CellGroupData[{
Cell[1766, 47, 1226, 23, 67, "Input",ExpressionUUID->"42a4d363-9498-4b0b-bf7c-5f123f12c347"],
Cell[CellGroupData[{
Cell[3017, 74, 152, 3, 24, "Echo",ExpressionUUID->"409443c7-71d6-47d0-bf13-e7e366b11f13"],
Cell[3172, 79, 152, 3, 24, "Echo",ExpressionUUID->"0d7cac89-b054-438f-94f5-b22f08180a66"],
Cell[3327, 84, 152, 3, 24, "Echo",ExpressionUUID->"2b37b184-1524-44b1-ad21-1c54bfc14493"],
Cell[3482, 89, 156, 3, 24, "Echo",ExpressionUUID->"11cf8866-4f94-49f7-bf06-d95ef048542f"],
Cell[3641, 94, 155, 3, 24, "Echo",ExpressionUUID->"e4e55bb8-5147-4309-b32c-984ad2fbc68f"],
Cell[3799, 99, 153, 3, 24, "Echo",ExpressionUUID->"540e58cf-ed1f-4d18-8ac5-510aa3fc6f22"],
Cell[3955, 104, 154, 3, 24, "Echo",ExpressionUUID->"cb516442-15d8-409d-b3cd-07c920dc302e"],
Cell[4112, 109, 154, 3, 24, "Echo",ExpressionUUID->"b379183a-20f7-466a-8da0-c063224534fa"],
Cell[4269, 114, 156, 3, 24, "Echo",ExpressionUUID->"6b7af2b8-46b0-48bc-a09a-08071f71be86"]
}, Open  ]],
Cell[4440, 120, 221, 4, 32, "Output",ExpressionUUID->"cfbd93dd-1f4f-4aff-bf7c-515c5913c8c3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4710, 130, 262, 4, 67, "Section",ExpressionUUID->"416c3353-f5b9-4d09-be4d-6ea5d195adb0"],
Cell[4975, 136, 232, 4, 35, "Text",ExpressionUUID->"cf1aea60-faba-4443-8417-502a3ce75e62"],
Cell[5210, 142, 497, 9, 44, "Input",ExpressionUUID->"959f3ecc-5958-4830-87a9-802b23509b58"],
Cell[CellGroupData[{
Cell[5732, 155, 504, 11, 48, "Input",ExpressionUUID->"534c9725-9fc5-4ddc-a626-008f72861c46"],
Cell[6239, 168, 12273, 309, 198, "Output",ExpressionUUID->"a9de42c4-ef52-41d6-beb2-dac00d39f3c6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18561, 483, 271, 6, 67, "Section",ExpressionUUID->"ced5500b-4566-48ac-8cde-a8906449ff29"],
Cell[18835, 491, 430, 8, 28, "Input",ExpressionUUID->"f9f339ed-6e9d-4219-9f14-ec4fd6ee0620"],
Cell[19268, 501, 307, 6, 28, "Input",ExpressionUUID->"f0620080-0323-4a60-85b2-985dcc798459"],
Cell[19578, 509, 498, 10, 28, "Input",ExpressionUUID->"162d8ea8-a453-4914-9a88-892e1f6d36ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20113, 524, 208, 4, 67, "Section",ExpressionUUID->"71386755-6d8d-46c0-87b9-c454c7a907e6"],
Cell[CellGroupData[{
Cell[20346, 532, 176, 3, 54, "Subsection",ExpressionUUID->"fca830df-8a71-4e7e-be61-98fc484b7b07"],
Cell[20525, 537, 244, 4, 35, "Text",ExpressionUUID->"c90d05f2-32d6-4dd4-93a2-55c5e0799e87"],
Cell[20772, 543, 2463, 52, 202, "DefinitionBox3Col",ExpressionUUID->"325b5874-97af-491c-8ad3-6a4532534bc2",
 CellID->18427541],
Cell[CellGroupData[{
Cell[23260, 599, 196, 3, 28, "Input",ExpressionUUID->"2c8a2a07-5435-40dc-ba26-872f39c8d32c"],
Cell[23459, 604, 20973, 476, 143, "Output",ExpressionUUID->"dd08dc77-e9de-4417-b221-002e8c498f48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44469, 1085, 5604, 82, 86, "Input",ExpressionUUID->"6c4ca98c-0ad3-47b8-ac3d-462340d8b54b"],
Cell[CellGroupData[{
Cell[50098, 1171, 540, 13, 22, "Print",ExpressionUUID->"2db5b1ce-3b80-4244-91ac-31b57ba6c91e"],
Cell[50641, 1186, 407, 7, 40, "Print",ExpressionUUID->"84bac795-553b-417f-9e9a-f524d8aadefb"],
Cell[51051, 1195, 3572, 68, 613, "Print",ExpressionUUID->"c2d7d721-6d9c-4167-aaa2-1ac3560bd53b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[54696, 1271, 218, 4, 67, "Section",ExpressionUUID->"95c09f6d-9646-4129-9b50-7d1c427084f3"],
Cell[CellGroupData[{
Cell[54939, 1279, 157, 3, 54, "Subsection",ExpressionUUID->"f0dde87b-1842-47c0-8251-87267e62fdd7"],
Cell[55099, 1284, 3143, 44, 28, "Input",ExpressionUUID->"8153c58f-56c4-494d-b2a3-491cfd546369"],
Cell[58245, 1330, 3468, 73, 276, "Input",ExpressionUUID->"058a9a13-9dae-4800-892b-318cbb05cce5"],
Cell[61716, 1405, 1604, 30, 178, "Input",ExpressionUUID->"4a0315c1-852a-4cb2-a867-db7e9d4bd545"],
Cell[CellGroupData[{
Cell[63345, 1439, 643, 12, 149, "Subsubsection",ExpressionUUID->"7aa69475-664e-4202-9223-82711749cbfa"],
Cell[CellGroupData[{
Cell[64013, 1455, 1339, 22, 64, "Input",ExpressionUUID->"73344bb0-0037-4945-acfe-2ea9b7dbcd06"],
Cell[65355, 1479, 152, 2, 32, "Output",ExpressionUUID->"158b1b0f-54a3-4636-be3b-a757dac2c568"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65544, 1486, 3667, 81, 257, "Input",ExpressionUUID->"1e72ac41-1763-4f4e-8c85-5e200208df11"],
Cell[CellGroupData[{
Cell[69236, 1571, 390, 9, 22, "Print",ExpressionUUID->"047eeeb4-4c1e-4555-b97e-b356e2082b3e"],
Cell[69629, 1582, 6815, 505, 8507, "Print",ExpressionUUID->"1137028d-7169-48cf-bb83-b7c92ae7c119"]
}, Open  ]],
Cell[76459, 2090, 193600, 3286, 418, "Output",ExpressionUUID->"8f95dfe7-972d-4f27-b3d7-689843071ef5"]
}, Open  ]],
Cell[270074, 5379, 1926, 45, 124, "Input",ExpressionUUID->"d41c7bc5-8b44-451b-a9be-fbab4e41230b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

