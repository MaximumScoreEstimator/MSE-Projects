(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    270652,       5252]
NotebookOptionsPosition[    258986,       5052]
NotebookOutlinePosition[    263098,       5132]
CellTagsIndexPosition[    262745,       5121]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Companion code for the paper \[OpenCurlyDoubleQuote]Stars In Their \
Constellations: Great person or great team?\[CloseCurlyDoubleQuote] by \
Mindruta, Bercovitz, Mares, and Feldman.\n\nThis notebook calculates the \
point estimates and 95% confidence intervals. Results are reported in Table \
2a of the paper.",
  FontFamily->"Consolas",
  FontSize->20,
  FontWeight->"Normal",
  FontColor->RGBColor[0.5019607843137255, 0., 0.]],
 "\n\ninit"
}], "Section",
 CellChangeTimes->{{3.6303386092666483`*^9, 3.6303386103447733`*^9}, {
  3.90386212363258*^9, 3.903862127357546*^9}, {3.9038621901567793`*^9, 
  3.903862190328501*^9}, {3.9038624961390305`*^9, 3.9038625614540076`*^9}, {
  3.9038627457796288`*^9, 3.9038627551745615`*^9}, {3.9038635529409328`*^9, 
  3.90386355843464*^9}},ExpressionUUID->"a07aa20e-9937-4186-bc43-\
89ffc8a76382"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "directory", "=", 
   "\"\<https://raw.githubusercontent.com/MaximumScoreEstimator/MSE-\
Mathematica/master/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", 
  RowBox[{"directory", "<>", "\"\<mse.m\>\""}], "]"}]}], "Input",
 CellChangeTimes->{
  3.897711241844165*^9, {3.897714258687591*^9, 3.8977142721957703`*^9}, {
   3.8977150755664873`*^9, 3.897715076611128*^9}, {3.897715994187922*^9, 
   3.8977159960705757`*^9}, {3.9019298908696747`*^9, 
   3.9019298944156847`*^9}, {3.902285652992422*^9, 3.9022856980258913`*^9}, {
   3.9028985929897213`*^9, 3.902898595999941*^9}, {3.9029950914231157`*^9, 
   3.9029951162009478`*^9}, {3.903057206152025*^9, 3.9030572079193687`*^9}, {
   3.903057926471017*^9, 3.903057930289658*^9}, {3.903866367643085*^9, 
   3.90386637095503*^9}, {3.903866469031447*^9, 3.9038664745599117`*^9}, {
   3.903867616837978*^9, 3.903867660032977*^9}, {3.9038677199206057`*^9, 
   3.90386772035787*^9}},ExpressionUUID->"42a4d363-9498-4b0b-bf7c-\
5f123f12c347"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Loaded import.m\"\>"], "Echo",
 CellChangeTimes->{
  3.903867581859915*^9},ExpressionUUID->"04eddbb7-6f6d-47ce-b7b5-\
e7215cabd748"],

Cell[BoxData["\<\"{noM,no,u,noAttr}=import[filename,\\\"stream\\\"] to load \
an upstream.\\n\\n{noM,no,d,noAttr}=import[filename,\\\"stream\\\"] to load a \
downstream.\\n\\nimports a file .xls or .xlsx or a tab delimited file .dat \
that includes data corresponding to an upstream (u) or downstream \
(d).\\n\\nDatafiles consist of rows in the form \
{noM,no,attr1,attr2,...,attrn,noAttr}.\\n\\nIn the case of .xls or .xlsx \
files multiple sheets are joined - for example if each market resides in its \
own excel \
sheet.\\n\\n__________________________________________________________________\
________________________________\\n\\n{header,noM,noU,noD,noAttr,\
distanceMatrices,matchMatrix,mate}=import[filename_,\\\"precomp\\\",printflag_\
:False]\\n\\nimports a file .xls or .xlsx or a tab delimited file .dat that \
includes precomputed matched data (distances between same attributes are \
already computed).\\n\\nDatafiles consists of rows in the form \
{m,u,d,u1,d1,u2,d2,...,un,dn,matched (0 or 1)}.\\n\\nIn the case of .xls or \
.xlsx files multiple sheets are joined - for example if each market resides \
in its own excel sheet.\\n\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.903867582112369*^9},
 CellTags->
  "Info33903878382-9537494",ExpressionUUID->"2b6a3bab-f2bb-4f2e-b6ab-\
59039d1f8597"],

Cell[BoxData["\<\"Loaded payoff.m\"\>"], "Echo",
 CellChangeTimes->{
  3.903867582601369*^9},ExpressionUUID->"6a6067d7-b0f4-4057-b50b-\
20e7cf8cb941"],

Cell[BoxData["\<\"Cx[n] creates a list of n variables named \
x1,x2,...,xn.\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.9038675827298737`*^9},
 CellTags->
  "Info33903878382-9537494",ExpressionUUID->"51e30f0d-ddd0-4b5a-925e-\
df4e2a8fa726"],

Cell[BoxData["\<\"payoff[m,i,j] returns the payoff of i-upstream and \
j-upstream in the m-market. \\nIt is used when the streams of u and d agents \
are imported separately (i.e. not in the precomputed format). It is assumed \
that u , d , and noAttr have been already assigned.\"\>"], "Print", \
"PrintUsage",
 CellChangeTimes->{3.90386758286901*^9},
 CellTags->
  "Info33903878382-9537494",ExpressionUUID->"f1a20b00-998b-4cda-ac10-\
c81b40a6d196"],

Cell[BoxData["\<\"payoffDM[m,i,j] returns the payoff of i-upstream and \
j-upstream in the m-market.\\n\\nIt is used in the case of precomputed data. \
It is assumed that noAttr and distanceMatrices have been already \
assigned.\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.9038675829937353`*^9},
 CellTags->
  "Info33903878382-9537494",ExpressionUUID->"20f3143a-021a-4424-a0f0-\
3b6034e41f69"],

Cell[BoxData["\<\"CpayoffMatrix[payoff(or \
payoffDM),noM_:noM,noU_:noU,noD_:noD,parallel_:False] calculates and assigns \
the payoffMatrix.\\n \\npayoff is used when input data consist of separate u \
and d streams.\\n\\npayoffDM is used for precomputed \
data.\\n\\nCpayoffMatrix[solution_?VectorQ] substitutes the solution to all \
payoffMatrix's entries.\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.903867583155961*^9},
 CellTags->
  "Info33903878383-9537494",ExpressionUUID->"fba0b234-5920-4152-aca5-\
ef30c43df5b1"],

Cell[BoxData["\<\"payoffMatrix2Positive[offset,payoffMatrix,epsilon_:0,\
sameoffset_:False] translates the payoffMatrix subtracting an offset and \
adding an epsilon. This function's main purpose is to make all elements \
positive.\\nepsilon is the minimum element per market. It's default value is \
0.\\nIf the sameoffset flag is set to False (which is the default value) then \
each market will be handled separately related to its minimum.\\nIf the \
sameoffset flag is set to True then the offset equals the minimum element in \
the entire payoffMatrix.\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.903867583301856*^9},
 CellTags->
  "Info33903878383-9537494",ExpressionUUID->"9a8f339d-36cb-4d57-b8fc-\
7ff00cdad692"],

Cell[BoxData["\<\"Ctotalpayoff[payoffobject,mates] calculates the total \
payoff (i.e. the sum of payoffs) across all markets for the specific mates \
arrangement. This function accepts as a first argument the \
\[OpenCurlyDoubleQuote]payffobject\[CloseCurlyDoubleQuote], which can either \
be the name of the payoff function or the payoffMatrix (in case we have \
already calculated all pair payoffs).\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.903867583444086*^9},
 CellTags->
  "Info33903878383-9537494",ExpressionUUID->"1a01e7cb-0bfc-4a59-b5a2-\
65da1ae8a380"],

Cell[BoxData["\<\"Loaded matching.m\"\>"], "Echo",
 CellChangeTimes->{
  3.903867583684947*^9},ExpressionUUID->"70aa1270-8a10-4c77-836e-\
42595e65571d"],

Cell[BoxData["\<\"generateAssignmentMatrix[payoffs,quotaU,quotaD], generates \
the optimal assignment of matches from the given matrix of payoffs for each \
match. The optimal assignment is the one that maximizes the total payoff \
(i.e. the sum of all payoffs) in a market. In an assignment matrix, each \
entry (i,j) is 1 if i and j are matched and 0 otherwise. The quota can be a \
number (the same for all streams) or a list that sets a specific quota per \
agent.\\nNotice that the quota is max number of matches per agent ( so in the \
data the real number of matches could be lower than the max).\"\>"], "Print", \
"PrintUsage",
 CellChangeTimes->{3.903867583825037*^9},
 CellTags->
  "Info33903878383-9537494",ExpressionUUID->"b50c0216-f87e-4f46-8ffe-\
dd7d1ae42e45"],

Cell[BoxData["\<\"CmatchMatrix[payoffMatrix_,quotaU_:1,quotaD_:1,p_:0]  \
\\nCalculates and creates/updates the global variable 'matchMatrix'.\\nIf p \
is set to 0, it creates the matchMatrix by running the \
generateAssignmentMatrix routine for all markets.\\nIf p is set to an integer \
from 1 to the 'number of Markets' then the p'th element of the matchMatrix is \
calculated.\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.903867583966461*^9},
 CellTags->
  "Info33903878383-9537494",ExpressionUUID->"02c82268-cc9a-4792-a68a-\
6548fc903048"],

Cell[BoxData["\<\"Cquota[matchMatrix,function_:<|\\\"upstream\\\"\[Rule]True,\
\\\"downstream\\\"\[Rule]True|>] Calculates and creates/updates the global \
variable 'quota'.By default it calculates both streams quotas. It returns the \
association list quota = \
<|\\\"upstream\\\"->quotaU,\\\"downstream\\\"->quotaD|>. Quota is defined for \
each stream u and d.\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.9038675840987997`*^9},
 CellTags->
  "Info33903878384-9537494",ExpressionUUID->"fe41242d-9cc3-450a-b651-\
527bd4812830"],

Cell[BoxData["\<\"Cmates[matchMatrix] simplifies the matchMatrix to a list of \
triples that define matches across all markets. It provides another way to \
express all the matching information that is, which upstream is matched with \
which downstream and in which market. The output consists of a list of lists \
of triples each of which has the following structure: \
{market_index,upstream_index,downstream_index}.\\nOutput \
example:{{{1,1,3},{1,3,1},{1,3,2}},{{2,1,1},{2,2,1},{2,2,3},{2,3,2}}}. In \
this example we have 2 lists, one per market and each inner list contains the \
triples. Note that in market 1, upstream agent 2 is not contributing which is \
fine. \\nThis function is mainly used for the calculation of the total payoff \
- see Ctotalpayoff routine.\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.903867584235414*^9},
 CellTags->
  "Info33903878384-9537494",ExpressionUUID->"ac1417ba-1f33-4f13-9482-\
53443b28dfe9"],

Cell[BoxData["\<\"Cmate[matchMatrix] simplifies the matchMatrix from the \
original code by Santiago & Fox, to a matrix format which consists of lists \
of pairs, one pair per market. Here, each pair has the following structure: \
{{{1},{2},...,{noU within this market}},{{downstreams that are matched with \
upstream1},{downstreams that are matched with upstream2},...,{downstreams \
that are matched with upstream noU}}.\\nExample : \
{{{{1},{2},{3}},{{3},{},{1,2}}},{{{1},{2},{3}},{{1},{1,3},{2}}}}.  In this \
example, there are three upstream and three downstream agents in each market, \
indexed 1, 2, 3. In the first market, upstream 1 is matched with downstream \
3, upstream 2 is not matched, and upstream 3 is matched with downstream 1 and \
 2. In the second market, upstream 1 is matched with downstream 1, upstream 2 \
with downstream 1 and 3, and upstream 3 with downstream 2.  \\nThe \
mate=Cmate[matchMatrix] is later fed into the Cineqmembers routine.\"\>"], \
"Print", "PrintUsage",
 CellChangeTimes->{3.903867584364002*^9},
 CellTags->
  "Info33903878384-9537494",ExpressionUUID->"f87ebccd-79c3-4adf-96ae-\
f0a4169f6d51"],

Cell[BoxData["\<\"Loaded inequalities.m\"\>"], "Echo",
 CellChangeTimes->{
  3.903867584644681*^9},ExpressionUUID->"d7d210bd-f0e5-4e1a-9d9f-\
3f37c619bd97"],

Cell[BoxData["\<\"Cineqmembers[mate] generates all the members required to \
form the inequalities for many to many relationships defined by the mate. The \
produced list of lists of triples defines also the way inequalities are \
formed. At this time, inequalities are created to follow the theoretical \
proofs done by J Fox. CAUTION: ineqmembers is the largest object so it \
consumes a lot of memory. This is why we use MSEresources=\\\"Memory\\\" when \
it is needed. Be careful because in the \[OpenCurlyDoubleQuote]Memory model\
\[CloseCurlyDoubleQuote], ineqmembers are erased after being used for the \
dataArray calculation, in order to speed up the calculations. \"\>"], "Print",\
 "PrintUsage",
 CellChangeTimes->{3.903867584778714*^9},
 CellTags->
  "Info33903878384-9537494",ExpressionUUID->"825dd051-3537-4e5e-b6b8-\
f64a13e179a2"],

Cell[BoxData["\<\"Cinequalities[f,ineqmembers] apply properly the f function \
to ineqmembers to create inequalities. This routine is called by CdataArray \
internally where as a function it uses payoffMatrix[[##]]&.\"\>"], "Print", \
"PrintUsage",
 CellChangeTimes->{3.9038675848870296`*^9},
 CellTags->
  "Info33903878384-9537494",ExpressionUUID->"db99923c-fb3c-4b67-be9d-\
b48a3f8e0a18"],

Cell[BoxData["\<\"Loaded dataArray.m\"\>"], "Echo",
 CellChangeTimes->{
  3.903867585127219*^9},ExpressionUUID->"157e7790-471e-4459-81e9-\
a1c612bc4551"],

Cell[BoxData["\<\"CdataArray[payoffMatrix,xlist,printflag] creates the \
dataArray. It works either using the \\\"Speed\\\" model or the \
\\\"Memory\\\" model. It uses ineqmembers and Cinequalities internally and \
for the memory model it erases ineqmembers after use.\"\>"], "Print", \
"PrintUsage",
 CellChangeTimes->{3.903867585267537*^9},
 CellTags->
  "Info33903878385-9537494",ExpressionUUID->"e75d297a-154e-4f11-9f1b-\
5713835d28ca"],

Cell[BoxData["\<\"Loaded objective.m\"\>"], "Echo",
 CellChangeTimes->{
  3.903867585525071*^9},ExpressionUUID->"40f915ea-1350-49e0-9da5-\
2395524646f6"],

Cell[BoxData["\<\"objective[dataArray,x1,x2,...,xn] defines the objective \
function to maximize the number of satisfied inequalities. An inequality is \
satisfied when the left side is weakly greater than the right side \
(>=).\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.903867585641409*^9},
 CellTags->
  "Info33903878385-9537494",ExpressionUUID->"25202384-e1d7-438d-b84f-\
a835a3825305"],

Cell[BoxData["\<\"objectiveV[dataArray,x1,x2,...,xn] is the verbose version \
of objective routine. It also uses groupIDs produced by CdataArray routine. \
It returns more information about how many inequalities are satisfied for \
each market. It is obviously slower than the plain objective and it is used \
as the final step after the maximization process.\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.903867585765648*^9},
 CellTags->
  "Info33903878385-9537494",ExpressionUUID->"f01f7129-d098-4bef-931d-\
ccebc7c1dbd2"],

Cell[BoxData["\<\"Loaded maximize.m\"\>"], "Echo",
 CellChangeTimes->{
  3.903867586237464*^9},ExpressionUUID->"fb05b48f-8e8a-4066-8918-\
66cfe435dbbc"],

Cell[BoxData["\<\"maximize[dataArray_,noAttr_,method_:\\\"\
DifferentialEvolution\\\", permuteinvariant_:True, printflag_:True] is MSE \
specific and uses the optimize function. It uses the objective function (that \
counts the number of satisfied inequalities). It returns a list \
{max,{x1->value1, x2->value2, ...}, number of inequalities} where max is the \
maximum number of satisfied inequalities found and the solution of the \
maximization method {value1,value2,...}\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.903867586344862*^9},
 CellTags->
  "Info33903878386-9537494",ExpressionUUID->"a71af2c1-0461-4749-8ebe-\
9aec7e6c90a1"],

Cell[BoxData["\<\"Loaded confidence.m\"\>"], "Echo",
 CellChangeTimes->{
  3.903867586575265*^9},ExpressionUUID->"9cec490e-31cb-4418-a3b1-\
874ef8e723f4"],

Cell[BoxData["\<\"pointIdentifiedCR[ssSize,numSubsamples,pointEstimate,args,\
groupIDs,dataArray,method,permuteinvariant,options] generates a confidence \
region estimate using subsampling.\\r\\nParameters:\\nssSize - The size of \
each subsample to be estimated.\\nnumSubsamples -The number of subsamples to \
use in estimating the confidence region.\\npointEstimate - The point estimate \
to build the confidence region around (typically the output of \
pairwiseMSE).\\nobjFunc - The objective function used in pairwiseMSE.\\nargs \
- A list of unique symbols used in pairwiseMSE.\\ngroupIDs - A data map used \
to generate the subsamples.\\ndataArray - The dataArray parameter used in \
pairwiseMSE.\\noptions - An optional parameter specifying options. Available \
options are:\\n\\tprogressUpdate - How often to print progress (0 to \
disable).Default=0. \\n\\tconfidenceLevel - The confidence level of the \
region.Default=.95.\\n\\tasymptotics - Type of asymptotics to use (nests or \
coalitions).Default=nests.\\n\\tsubsampleMonitor - An expression to evaluate \
for each subsample.Default=Null.\\n\\tsymmetric - True or False.If True,the \
confidence region will be symmetric.Default=False.\"\>"], "Print", \
"PrintUsage",
 CellChangeTimes->{3.903867586749299*^9},
 CellTags->
  "Info33903878386-9537494",ExpressionUUID->"3fe3d56b-f338-4f82-bfdb-\
1eb5c687b491"],

Cell[BoxData["\<\"Loaded modifydata.m\"\>"], "Echo",
 CellChangeTimes->{
  3.903867586979244*^9},ExpressionUUID->"15017f78-fbf3-4f08-a671-\
daa0989b4932"],

Cell[BoxData["\<\"store[var,printflag] is used for storing all global \
variables to \\\"var\\\" global variable before they are modified.  In that \
case they can restored later (with the restore[var] command).\\nVariables: \
{\\\"header\\\",\\\"noM\\\",\\\"noU\\\",\\\"noD\\\",\\\"noAttr\\\",\\\"\
distanceMatrices\\\",\\\"matchMatrix\\\",\\\"mate\\\",\\\"quota\\\",\\\"\
payoffMatrix\\\",\\\"totalpayoff\\\",\\\"dataArray\\\"}}\"\>"], "Print", \
"PrintUsage",
 CellChangeTimes->{3.903867587091731*^9},
 CellTags->
  "Info33903878387-9537494",ExpressionUUID->"073d28b7-52ff-4087-9ba7-\
d68a2d0b83f4"],

Cell[BoxData["\<\"restore[var,printflag] is used to restore all global \
variables from \\\"var\\\" global variable (when the last store[] command was \
used).\\nVariables: \
{\\\"header\\\",\\\"noM\\\",\\\"noU\\\",\\\"noD\\\",\\\"noAttr\\\",\\\"\
distanceMatrices\\\",\\\"matchMatrix\\\",\\\"mate\\\",\\\"quota\\\",\\\"\
payoffMatrix\\\",\\\"totalpayoff\\\",\\\"dataArray\\\"}}\"\>"], "Print", \
"PrintUsage",
 CellChangeTimes->{3.903867587212119*^9},
 CellTags->
  "Info33903878387-9537494",ExpressionUUID->"7275c5a2-dbbf-4469-b13a-\
c61a6a8cc66b"],

Cell[BoxData["\<\"modify[m_,u_List,d_List,function_?AssociationQ:<|\\\"\
unmatch\\\"\[Rule]False,\\\"remove\\\"\[Rule]True,\\\"quota_reset\\\"\[Rule]\
False,\\\"quota_update\\\"\[Rule]False,\\\"quota_update_upstream\\\"->False,\\\
\"quota_downstream_upstream\\\"->False,\\\"rematch\\\"\[Rule]False|>] \
\\nmodifies m's market upstream and/or downstream members. As a consequence \
payoffMatrix, matchMatrix, quota are modified.\\nIf \
\\\"unmatch\\\"\[Rule]True then it is supposed that the Transpose[u,d] are \
the matches we need to unmatch.\\nIf \\\"unmatch\\\"\[Rule]True and \
\\\"quota_update_upstream\\\"\[Rule]True then the quota of the unmatched \
upstreams are reduced by one.\\nIf \\\"unmatch\\\"\[Rule]True and \
\\\"quota_update_download\\\"\[Rule]True then the quota of the unmatched \
downstreams are reduced by one.\\nIf \\\"remove\\\"\[Rule]True and \
\\\"quota_reset\\\"\[Rule]True then the quota of the selected for remove \
streams becomes equal to 0.\\nIf \\\"remove\\\"\[Rule]True and \
\\\"quota_update\\\"\[Rule]True then the quota of the matched opposite stream \
are reduced because of the stream removal.\\nIf \\\"rematch\\\"\[Rule]True \
then the matchMatrix of the m'th market is re-calculated using the set quota.\
\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.903867587340773*^9},
 CellTags->
  "Info33903878387-9537494",ExpressionUUID->"b0055cfa-6710-45f3-8760-\
8026dbb622ae"]
}, Closed]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"74266280", ",", "58993160", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.903866516580048*^9, 3.903867587620523*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"4e602fb2-17dd-4713-8e27-3a760de1dbae"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import precomputed data", "Section",
 CellChangeTimes->{{3.630312113309617*^9, 3.630312115762742*^9}, {
  3.684103937250903*^9, 3.684103945195757*^9}, {3.684106438963768*^9, 
  3.68410644892039*^9}},ExpressionUUID->"416c3353-f5b9-4d09-be4d-\
6ea5d195adb0"],

Cell["Load the data", "Text",
 CellChangeTimes->{{3.6841042607207613`*^9, 3.684104266945219*^9}, {
   3.684104320856389*^9, 3.684104345457032*^9}, 
   3.9038664614324827`*^9},ExpressionUUID->"cf1aea60-faba-4443-8417-\
502a3ce75e62"],

Cell[BoxData[
 RowBox[{
  RowBox[{"filename", "=", "\"\<../data/stars_replication_input.dat\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.897715115730977*^9, 3.897715133079192*^9}, 
   3.899948322289242*^9, 3.9028103492595177`*^9, {3.9038637934022784`*^9, 
   3.903863796419042*^9}, {3.9038664334423637`*^9, 3.903866436815172*^9}},
 Background->RGBColor[1, 1, 0],
 CellLabel->"In[4]:=",ExpressionUUID->"959f3ecc-5958-4830-87a9-802b23509b58"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"import", "[", 
   RowBox[{"filename", ",", "\"\<precomp\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
  "header", ",", "noM", ",", "noU", ",", "noD", ",", "noAttr", ",", 
   "distanceMatrices", ",", "matchMatrix", ",", "mate"}], "}"}]}], "Input",
 CellChangeTimes->{{3.717728962088194*^9, 3.717728967908416*^9}, {
  3.717729012277205*^9, 3.717729012553649*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"534c9725-9fc5-4ddc-a626-008f72861c46"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"market\"\>", ",", "\<\"upstreamid\"\>", 
             ",", "\<\"downstreamid\"\>", ",", "\<\"cites_cites\"\>", 
             ",", "\<\"kn_similarity\"\>", ",", "\<\"_sq (kn_similarity)\"\>",
              ",", "\<\"cites_size\"\>", ",", "\<\"cites_experience\"\>", 
             ",", "\<\"cites_rankcmd\"\>", ",", "\<\"domain_similarity\"\>", 
             ",", "\<\"match\"\>"}], "}"}], ",", 
           TemplateBox[{"6"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{186., {6., 23.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{164., {0., 23.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 6, 27100744344693812515, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{185., {0., 23.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 6, 27100744344693812515, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{139., {0., 23.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 6, 27100744344693812515, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{249., {0., 23.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[27100744344693812515 === $SessionID, 
   Out[6], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.903866527130698*^9, 3.903867588475246*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"efb0c267-cdbd-43e5-91c8-cd4c9d587d12"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Routines (calculate payoff matrix, inequalities members, dataArray)\
\>", "Section",
 CellChangeTimes->{{3.6841044513858833`*^9, 3.684104453137322*^9}, {
  3.684106468489313*^9, 
  3.684106506813888*^9}},ExpressionUUID->"ced5500b-4566-48ac-8cde-\
a8906449ff29"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CpayoffMatrix", "[", 
   RowBox[{"payoffDM", ",", "noM", ",", "noU", ",", "noD"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.684105012296954*^9, 3.68410501978755*^9}, {
   3.684106015679117*^9, 3.684106032757155*^9}, 3.684107226749753*^9, 
   3.68410777616145*^9, {3.718005723465626*^9, 3.718005724957798*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"f9f339ed-6e9d-4219-9f14-ec4fd6ee0620"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cineqmembers", "[", "mate", "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.6841071955756617`*^9, {3.684107242456472*^9, 3.684107248610227*^9}, {
   3.718005726414258*^9, 3.718005727950242*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"f0620080-0323-4a60-85b2-985dcc798459"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CdataArray", "[", 
   RowBox[{"payoffMatrix", ",", 
    RowBox[{"Cx", "[", 
     RowBox[{"noAttr", "-", "1"}], "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.684105202625043*^9, 3.6841052093160973`*^9}, {
   3.684105642018467*^9, 3.684105669830946*^9}, {3.6841063953107767`*^9, 
   3.684106404380844*^9}, 3.684107251197228*^9, {3.718005729180099*^9, 
   3.718005730395912*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"162d8ea8-a453-4914-9a88-892e1f6d36ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Maximization", "Section",
 CellChangeTimes->{{3.684107328012385*^9, 3.684107334518333*^9}, {
  3.6970297677393293`*^9, 
  3.697029776828178*^9}},ExpressionUUID->"71386755-6d8d-46c0-87b9-\
c454c7a907e6"],

Cell[CellGroupData[{

Cell["Differential Evolution Method", "Subsection",
 CellChangeTimes->{{3.69702978534949*^9, 
  3.697029795194523*^9}},ExpressionUUID->"fca830df-8a71-4e7e-be61-\
98fc484b7b07"],

Cell["The default DifferentialEvolution parameters:", "Text",
 CellChangeTimes->{{3.6304811339951696`*^9, 3.6304811513701696`*^9}, {
  3.6304855977012243`*^9, 
  3.6304856109512243`*^9}},ExpressionUUID->"c90d05f2-32d6-4dd4-93a2-\
55c5e0799e87"],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader",ExpressionUUID->
     "8d4f6802-26e9-4882-b529-464160c96067"], Cell[
    "default value", "TableHeader",ExpressionUUID->
     "52999ce8-802b-44e2-99e8-464cec048de1"], " "},
   {"\"\<CrossProbability\>\"", "0.5", Cell[TextData[{
     "probability that a gene is taken from ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["x", "TI"], 
       StyleBox["i", "TI"]]], "InlineFormula",ExpressionUUID->
      "da0c26c6-a1f5-4ebc-80bf-b4e91eb23d22"]
    }], "TableText",ExpressionUUID->"36fa5179-cf03-4963-be18-85949f9a31f4"]},
   {"\"\<InitialPoints\>\"", 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell[
    "set of initial points ", "TableText",ExpressionUUID->
     "66c968e7-dea6-4653-8d18-7b00b4c3b47a"]},
   {"\"\<PenaltyFunction\>\"", 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell[
    "function applied to constraints to penalize invalid points", "TableText",
     ExpressionUUID->"1f182333-609a-445c-a8eb-ad7bc940874c"]},
   {"\"\<PostProcess\>\"", 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell[
    "whether to post-process using local search methods ", "TableText",
     ExpressionUUID->"7f475f3f-1a41-4dd8-b7de-b2b72cada390"]},
   {"\"\<RandomSeed\>\"", "0", Cell[
    "starting value for the random number generator", "TableText",
     ExpressionUUID->"df305937-ebef-4f7c-a061-d71fcda2e742"]},
   {"\"\<ScalingFactor\>\"", "0.6", Cell[
    "scale applied to the difference vector in creating a mate ", "TableText",
     ExpressionUUID->"037d7ff4-549d-4c20-a1dc-0988d1dd1aa6"]},
   {"\"\<SearchPoints\>\"", 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell[
    "size of the population used for evolution ", "TableText",ExpressionUUID->
     "ca2c5711-eb9c-4b60-ba30-f3d8191433f8"]},
   {"\"\<Tolerance\>\"", "0.001", Cell[
    "tolerance for accepting constraint violations ", "TableText",
     ExpressionUUID->"f6467c12-463d-451b-b9a0-5a67584b877f"]}
  }]], "DefinitionBox3Col",
 CellChangeTimes->{{3.6304856989824743`*^9, 3.6304856998105993`*^9}},
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->18427541,ExpressionUUID->"325b5874-97af-491c-8ad3-6a4532534bc2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "maximize"}]], "Input",
 CellChangeTimes->{{3.684107546117594*^9, 3.684107548082258*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"2c8a2a07-5435-40dc-ba26-872f39c8d32c"],

Cell[BoxData["\<\"maximize[dataArray_,noAttr_,method_:\\\"\
DifferentialEvolution\\\", permuteinvariant_:True, printflag_:True] is MSE \
specific and uses the optimize function. It uses the objective function (that \
counts the number of satisfied inequalities). It returns a list \
{max,{x1->value1, x2->value2, ...}, number of inequalities} where max is the \
maximum number of satisfied inequalities found and the solution of the \
maximization method {value1,value2,...}\"\>"], "Print", "PrintUsage",
 CellChangeTimes->{3.903867589188922*^9},
 CellTags->
  "Info103903878389-9537494",ExpressionUUID->"9af89f60-78c4-420c-ba1a-\
9a96eb3f415e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"method", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<DifferentialEvolution\>\"", ",", 
     RowBox[{"\"\<CrossProbability\>\"", "\[Rule]", "0.5"}], ",", 
     RowBox[{"\"\<InitialPoints\>\"", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"\"\<PenaltyFunction\>\"", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"\"\<PostProcess\>\"", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"\"\<RandomSeed\>\"", "\[Rule]", "12"}], ",", 
     RowBox[{"\"\<ScalingFactor\>\"", "\[Rule]", "0.6"}], ",", 
     RowBox[{"\"\<SearchPoints\>\"", "\[Rule]", "300"}], ",", 
     RowBox[{"\"\<Tolerance\>\"", "\[Rule]", "0.001"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"maximize", "[", 
    RowBox[{"dataArray", ",", "noAttr", ",", "method"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6304822228477087`*^9, 3.6304823703789587`*^9}, {
   3.6304824780195837`*^9, 3.6304824869883337`*^9}, {3.6304825679258337`*^9, 
   3.6304825738008337`*^9}, {3.6304855466699743`*^9, 3.6304855623418493`*^9}, 
   3.6304857214199743`*^9, 3.6304858862480993`*^9, {3.630488085369193*^9, 
   3.630488085775443*^9}, {3.6305596885382614`*^9, 3.6305597002970505`*^9}, {
   3.6305597806851206`*^9, 3.6305598314048877`*^9}, {3.630587798517194*^9, 
   3.630587829517194*^9}, 3.684107472522455*^9, 3.684107610829526*^9, {
   3.684107690541943*^9, 3.684107693032625*^9}, {3.6841079213122168`*^9, 
   3.684107930131075*^9}, {3.7177297091693068`*^9, 3.717729711996545*^9}, {
   3.724868597819215*^9, 3.724868598249215*^9}, {3.7248686544490075`*^9, 
   3.7248686565705276`*^9}, {3.7248687103007975`*^9, 3.724868710510798*^9}, {
   3.7248774510672636`*^9, 3.7248774590293083`*^9}, 3.7516415965428495`*^9, 
   3.751641658617448*^9, {3.751647045250207*^9, 3.7516470484107704`*^9}, {
   3.75164708378633*^9, 3.7516470843541193`*^9}, {3.7516475149182653`*^9, 
   3.7516475169412184`*^9}, {3.7516480255365105`*^9, 3.751648027369003*^9}, {
   3.7516480761648912`*^9, 3.75164807831883*^9}, {3.751648120530672*^9, 
   3.751648121114725*^9}, {3.7516481824856157`*^9, 3.7516481856906524`*^9}, {
   3.7516482326901965`*^9, 3.7516482336707516`*^9}, {3.751648347412221*^9, 
   3.751648348285627*^9}, {3.7516484147359934`*^9, 3.751648416517783*^9}, {
   3.7516486028458767`*^9, 3.751648604021776*^9}, {3.7516487373079443`*^9, 
   3.7516487398893824`*^9}, {3.751648902558056*^9, 3.751648908567179*^9}, {
   3.7516489620177593`*^9, 3.7516489628587303`*^9}, {3.7516490220502386`*^9, 
   3.751649022487234*^9}, {3.7516495184281235`*^9, 3.7516495189351125`*^9}, {
   3.751649575161005*^9, 3.751649575453924*^9}, {3.751649617497419*^9, 
   3.7516496189174323`*^9}, 3.7516497089715567`*^9, {3.75165580686434*^9, 
   3.751655807372949*^9}, {3.7516559568995624`*^9, 3.751655959601763*^9}, {
   3.7517393876180973`*^9, 3.75173939049594*^9}, {3.7517394346569033`*^9, 
   3.751739436859147*^9}, {3.751739481552821*^9, 3.751739482099723*^9}, {
   3.7517396360990305`*^9, 3.7517396376428185`*^9}, {3.751739707744193*^9, 
   3.751739709754423*^9}, {3.7517397594672966`*^9, 3.751739764678769*^9}, {
   3.7517398141128025`*^9, 3.7517398439213953`*^9}, {3.7517398946867113`*^9, 
   3.751739906610604*^9}, {3.751777318100591*^9, 3.7517773186176395`*^9}, {
   3.751825367809388*^9, 3.751825373827042*^9}, {3.751825474965791*^9, 
   3.751825478539391*^9}, {3.751825624973032*^9, 3.751825628640165*^9}, {
   3.7518261149734726`*^9, 3.751826118642008*^9}, {3.751827283346988*^9, 
   3.7518272846786757`*^9}, {3.751828701008978*^9, 3.751828702830877*^9}, {
   3.7526032617471714`*^9, 3.752603262307495*^9}, {3.7526040126838017`*^9, 
   3.7526040128339586`*^9}, {3.7526055501957226`*^9, 
   3.7526055559472523`*^9}, {3.7528387661596394`*^9, 3.752838767052846*^9}, {
   3.752838857217001*^9, 3.7528388578953648`*^9}, {3.753019178139283*^9, 
   3.753019180826672*^9}, {3.7752181687838116`*^9, 3.7752181786457663`*^9}, {
   3.7752496747887273`*^9, 3.775249691810316*^9}, {3.850745347464692*^9, 
   3.8507453480635204`*^9}, {3.85074575835836*^9, 3.850745758952396*^9}, {
   3.850789454211578*^9, 3.8507894553993645`*^9}, {3.85780607694471*^9, 
   3.8578060831430407`*^9}, {3.8578786170114713`*^9, 3.857878631289914*^9}, {
   3.8579131611269474`*^9, 3.857913164522959*^9}, {3.857913203631836*^9, 
   3.8579132235939474`*^9}, {3.857913792376492*^9, 3.8579137968535423`*^9}, {
   3.857925333420268*^9, 3.8579253344305506`*^9}, {3.857925394734469*^9, 
   3.8579253971045094`*^9}, {3.8628428255157876`*^9, 
   3.8628428302592297`*^9}, {3.8628447105042686`*^9, 3.862844711927375*^9}, {
   3.8628455627396283`*^9, 3.8628455653331985`*^9}, {3.86284818046189*^9, 
   3.862848183287689*^9}, {3.862849621830513*^9, 3.8628496245250998`*^9}, {
   3.8628833996597953`*^9, 3.8628834017315784`*^9}, {3.8628843058150887`*^9, 
   3.8628843094611044`*^9}, {3.862886093681155*^9, 3.8628860976220264`*^9}, 
   3.865498252544183*^9, {3.8655820649194355`*^9, 3.8655821004631696`*^9}, 
   3.865582162624036*^9, 3.8655821967758293`*^9, 3.8655858398409653`*^9, {
   3.865585907522145*^9, 3.865585934636943*^9}, {3.865585999201132*^9, 
   3.8655860017480927`*^9}, 3.8655934705105853`*^9, {3.8766454004576874`*^9, 
   3.87664540414887*^9}, 3.87664555477232*^9, {3.876645667364785*^9, 
   3.8766456685541506`*^9}, {3.876645785189412*^9, 3.8766457906753597`*^9}, {
   3.877667904958999*^9, 3.8776679075373583`*^9}, {3.902999855641488*^9, 
   3.9029998869395638`*^9}, {3.902999964934442*^9, 3.902999983445662*^9}, {
   3.903867944431066*^9, 
   3.903867957949087*^9}},ExpressionUUID->"6c4ca98c-0ad3-47b8-ac3d-\
462340d8b54b"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" The new ordering of attributes used for calculating the \
solutio order=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "3", ",", "2", ",", "1", ",", "6"}], "}"}]}],
  SequenceForm[
  " The new ordering of attributes used for calculating the solutio order=", {
   5, 4, 3, 2, 1, 6}],
  Editable->False]], "Print",
 CellChangeTimes->{3.9038665573853683`*^9, 3.903867600439234*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"d91631e7-391a-43ff-95b1-da3a2c5e9f02"],

Cell[BoxData["\<\"Method {DifferentialEvolution, CrossProbability -> 0.5, \
InitialPoints -> Automatic, PenaltyFunction -> Automatic, PostProcess -> \
Automatic, RandomSeed -> 12, ScalingFactor -> 0.6, SearchPoints -> 300, \
Tolerance -> 0.001}\"\>"], "Print",
 CellChangeTimes->{3.9038665573853683`*^9, 3.903867600441057*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"ef319df3-a2fa-4fb2-a602-1fe6035bac1f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Completed : \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Number of satisfied inequalities\"\>", "\[Rule]", 
      "3731.`"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"kn_similarity\"\>", "\[Rule]", "4.981905468469215`"}], 
       ",", 
       RowBox[{"\<\"_sq (kn_similarity)\"\>", "\[Rule]", 
        RowBox[{"-", "2.4016513033944378`"}]}], ",", 
       RowBox[{"\<\"cites_size\"\>", "\[Rule]", "0.06642024971697014`"}], ",", 
       RowBox[{"\<\"cites_experience\"\>", "\[Rule]", "1.2889501155821126`"}],
        ",", 
       RowBox[{"\<\"cites_rankcmd\"\>", "\[Rule]", "1.3983116175519597`"}], 
       ",", 
       RowBox[{"\<\"domain_similarity\"\>", "\[Rule]", 
        "2.76088191399337`"}]}], "}"}], ",", 
     RowBox[{"\<\"Number of inequalities\"\>", "\[Rule]", "3745"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\"\\nSatisfied Ineqs Analysis:\\n \"\>", 
   "\[InvisibleSpace]", 
   TagBox[GridBox[{
      {"\<\"Market no\"\>", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10",
        "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", 
       "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33"},
      {"\<\"Satisfied\"\>", "36", "66", "20", "36", "28", "21", "21", "55", 
       "15", "66", "208", "28", "90", "209", "21", "55", "209", "104", "91", 
       "276", "44", "149", "170", "66", "153", "435", "28", "153", "231", 
       "105", "120", "377", "45"},
      {"\<\"Total\"\>", "36", "66", "21", "36", "28", "21", "21", "55", "15", 
       "66", "210", "28", "91", "210", "21", "55", "210", "105", "91", "276", 
       "45", "153", "171", "66", "153", "435", "28", "153", "231", "105", 
       "120", "378", "45"},
      {"\<\"Percentage %\"\>", "100", "100", "95", "100", "100", "100", "100",
        "100", "100", "100", "99", "100", "99", "100", "100", "100", "100", 
       "99", "100", "100", "98", "97", "99", "100", "100", "100", "100", 
       "100", "100", "100", "100", "100", "100"}
     },
     AutoDelete->False,
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]}],
  SequenceForm[
  "Completed : ", {
   "Number of satisfied inequalities" -> 3731., {
    "kn_similarity" -> 4.981905468469215, 
     "_sq (kn_similarity)" -> -2.4016513033944378`, "cites_size" -> 
     0.06642024971697014, "cites_experience" -> 1.2889501155821126`, 
     "cites_rankcmd" -> 1.3983116175519597`, "domain_similarity" -> 
     2.76088191399337}, "Number of inequalities" -> 3745}, 
   "\nSatisfied Ineqs Analysis:\n ", 
   Grid[{{
     "Market no", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
      18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}, {
     "Satisfied", 36, 66, 20, 36, 28, 21, 21, 55, 15, 66, 208, 28, 90, 209, 
      21, 55, 209, 104, 91, 276, 44, 149, 170, 66, 153, 435, 28, 153, 231, 
      105, 120, 377, 45}, {
     "Total", 36, 66, 21, 36, 28, 21, 21, 55, 15, 66, 210, 28, 91, 210, 21, 
      55, 210, 105, 91, 276, 45, 153, 171, 66, 153, 435, 28, 153, 231, 105, 
      120, 378, 45}, {
     "Percentage %", 100, 100, 95, 100, 100, 100, 100, 100, 100, 100, 99, 100,
       99, 100, 100, 100, 100, 99, 100, 100, 98, 97, 99, 100, 100, 100, 100, 
      100, 100, 100, 100, 100, 100}}, Frame -> All]],
  Editable->False]], "Print",
 CellChangeTimes->{3.9038665573853683`*^9, 3.903867600503633*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"fdb732f0-a1d5-4d7b-a6b2-af65e348bc08"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Confidence Intervals", "Section",
 CellChangeTimes->{{3.6304822013320837`*^9, 3.6304822015664587`*^9}, {
  3.684107642567583*^9, 
  3.684107657451939*^9}},ExpressionUUID->"95c09f6d-9646-4129-9b50-\
7d1c427084f3"],

Cell[CellGroupData[{

Cell["execution", "Subsection",
 CellChangeTimes->{{3.902898545286371*^9, 
  3.902898547013657*^9}},ExpressionUUID->"f0dde87b-1842-47c0-8251-\
87267e62fdd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ssSize", "=", "28"}], ";", 
  RowBox[{"numSubsamples", "=", "2500"}], ";", 
  RowBox[{"alpha", "=", "0.05"}], ";"}]], "Input",
 CellChangeTimes->{{3.630310397247117*^9, 3.630310402465867*^9}, 
   3.630310937637742*^9, 3.6305594046037283`*^9, {3.6305728467632647`*^9, 
   3.6305728468413897`*^9}, 3.6305736592388506`*^9, {3.671170646515985*^9, 
   3.671170649539482*^9}, 3.671171562366686*^9, 3.671171630504067*^9, 
   3.671172133070477*^9, {3.671172621267507*^9, 3.671172623146764*^9}, {
   3.71843801786828*^9, 3.7184380229677043`*^9}, {3.7188243637410774`*^9, 
   3.718824364402115*^9}, {3.7188257767346506`*^9, 3.7188257811396737`*^9}, {
   3.7189131997942867`*^9, 3.718913200236312*^9}, {3.741631622456807*^9, 
   3.7416316319839354`*^9}, 3.7504441048374376`*^9, 3.7516317353686614`*^9, 
   3.751647088775778*^9, {3.751655354778119*^9, 3.751655355127874*^9}, {
   3.7526045538867445`*^9, 3.7526045677943745`*^9}, {3.757067916732103*^9, 
   3.7570679169149556`*^9}, {3.774934813909644*^9, 3.774934815423119*^9}, {
   3.775215230698141*^9, 3.775215232189506*^9}, {3.7752181833646107`*^9, 
   3.7752181838635564`*^9}, {3.775249658186366*^9, 3.775249668364419*^9}, 
   3.775367986632574*^9, {3.7753718321118584`*^9, 3.7753718329430957`*^9}, {
   3.775398860532031*^9, 3.775398861203822*^9}, 3.7797782923047695`*^9, {
   3.7802006193051033`*^9, 3.780200619873547*^9}, {3.78020352117225*^9, 
   3.7802035219528413`*^9}, 3.7805960624221954`*^9, {3.780599886973386*^9, 
   3.7805998870968304`*^9}, {3.850735876075034*^9, 3.8507358785644894`*^9}, 
   3.8507429367435045`*^9, 3.850754348909645*^9, {3.8507894605441127`*^9, 
   3.850789461601899*^9}, {3.850790290417602*^9, 3.850790291503863*^9}, 
   3.857803612552045*^9, {3.865575188629183*^9, 3.86557518979929*^9}, 
   3.86558196687096*^9, 3.8679441380236006`*^9, 3.868032956196849*^9, 
   3.8682436507678537`*^9, 3.8776678873997154`*^9, {3.8789691804921722`*^9, 
   3.878969181411969*^9}, {3.8795318153698215`*^9, 3.8795318173445454`*^9}, 
   3.879589339701396*^9, {3.879594449094036*^9, 3.879594450856142*^9}, {
   3.8795957645330653`*^9, 3.8795957660639195`*^9}, 3.8796245263338423`*^9, {
   3.8796245838460083`*^9, 3.8796245853606586`*^9}, {3.879878633677662*^9, 
   3.879878635603636*^9}, {3.8799072977399673`*^9, 3.8799073020621767`*^9}, {
   3.879961593460987*^9, 3.879961603321316*^9}, {3.8815831007193136`*^9, 
   3.8815831010847325`*^9}, {3.881643195494691*^9, 3.881643205386758*^9}, {
   3.901929914318879*^9, 3.901929917204464*^9}, {3.901930357798924*^9, 
   3.90193037727621*^9}, {3.9019419764141893`*^9, 3.901941978398734*^9}, {
   3.9022737632725677`*^9, 3.902273764859241*^9}, {3.902908052921977*^9, 
   3.902908054143011*^9}, {3.9029937321745853`*^9, 3.902993734790411*^9}, {
   3.902995564770545*^9, 3.902995567388145*^9}, {3.902999120343672*^9, 
   3.902999121488326*^9}, {3.903057221473806*^9, 3.903057221801098*^9}, {
   3.903058513202173*^9, 3.903058513338109*^9}, {3.903744673228565*^9, 
   3.903744673405995*^9}, {3.903745249051074*^9, 3.903745249349374*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"8153c58f-56c4-494d-b2a3-491cfd546369"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
    "If", " ", "you", " ", "want", " ", "to", " ", "calculate", " ", 
     "confidence", " ", "intervals", " ", "with", " ", "other", " ", 
     "subSamples", " ", "please", " ", "uncomment", " ", "the", " ", "code", 
     " ", "below"}], "*)"}],
   FontSize->14,
   FontWeight->"Bold",
   FontColor->RGBColor[0.5019607843137255, 0., 0.]], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Starting pointIdentified process where alpha = \>\"", ",", 
        "alpha"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"pointIdentified", "=", 
       RowBox[{"pointIdentifiedCR", "[", 
        RowBox[{"ssSize", ",", "numSubsamples", ",", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{"Cx", "[", 
          RowBox[{"noAttr", "-", "1"}], "]"}], ",", " ", "groupIDs", ",", " ",
          "dataArray", ",", "method", ",", "True", ",", 
         RowBox[{"confidenceLevel", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"1", "-", "alpha"}], ")"}]}], ",", 
         RowBox[{"asymptotics", "\[Rule]", "nests"}], ",", " ", 
         RowBox[{"progressUpdate", "\[Rule]", "10"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"pointIdentified", ",", "\[IndentingNewLine]", 
        RowBox[{"ListPlot", "@", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Map", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"MapIndexed", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Flatten", "@", 
                  RowBox[{"{", 
                   RowBox[{"#2", ",", "#1"}], "}"}]}], "&"}], ",", "#"}], 
               "]"}], "&"}], ",", "\[IndentingNewLine]", 
             RowBox[{"pointIdentified", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
            "]"}], ",", "1"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
     ")"}], "//", "AbsoluteTiming"}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.630310275200242*^9, {3.630310329918992*^9, 3.630310357309617*^9}, {
   3.630310589606492*^9, 3.630310614840867*^9}, {3.630310768262742*^9, 
   3.630310769262742*^9}, {3.630311286325242*^9, 3.630311287637742*^9}, {
   3.6303355083603983`*^9, 3.6303355101728983`*^9}, {3.6303358144541483`*^9, 
   3.6303358164853983`*^9}, {3.6303359362353983`*^9, 
   3.6303359372822733`*^9}, {3.6304824158477087`*^9, 
   3.6304824168008337`*^9}, {3.6305725670601397`*^9, 
   3.6305725904507647`*^9}, {3.6305729219195147`*^9, 
   3.6305729247632647`*^9}, {3.6305733948794756`*^9, 
   3.6305734127544756`*^9}, {3.6305734630669756`*^9, 
   3.6305734834263506`*^9}, {3.9019303608972*^9, 3.901930381574362*^9}, {
   3.90193174345966*^9, 3.901931747603012*^9}, {3.9029935511034718`*^9, 
   3.902993556942482*^9}, {3.902993724423065*^9, 3.90299372783045*^9}, {
   3.903057262945971*^9, 3.903057263617872*^9}, {3.903226447729773*^9, 
   3.903226452942013*^9}, {3.903228937319675*^9, 3.903228973697847*^9}, {
   3.903229012235186*^9, 3.903229012346157*^9}, {3.9038626372369957`*^9, 
   3.903862676350317*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"058a9a13-9dae-4800-892b-318cbb05cce5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "If", " ", "you", " ", "need", " ", "to", " ", "save", " ", "the", " ", 
    "calculated", " ", "list", " ", "of", " ", "subSamples", " ", "please", 
    " ", "uncomment", " ", "the", " ", "code", " ", "below"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"savedGroups", "=", "randomGroups"}], ";", "\[IndentingNewLine]", 
    RowBox[{"savedGroups", ">>", "\"\<savedGroups.m\>\""}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"savedGroups", "\[IndentingNewLine]", "savedGroups"}], "=."}], 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"clears", " ", "the", " ", "variable"}], "*)"}], 
   "\[IndentingNewLine]", "*)"}]}]], "Input",
 CellChangeTimes->{{3.901942509585409*^9, 3.901942520934511*^9}, {
  3.902285468457823*^9, 3.9022854734303617`*^9}, {3.902285514906727*^9, 
  3.90228551745146*^9}, {3.902285588550123*^9, 3.9022855888590612`*^9}, {
  3.90299361750697*^9, 3.902993620223475*^9}, {3.902994574163557*^9, 
  3.902994576195326*^9}, {3.9032264731443157`*^9, 3.9032264764855623`*^9}, {
  3.903228896995109*^9, 3.90322890721941*^9}, {3.903228982052988*^9, 
  3.903229038324854*^9}},
 Background->RGBColor[1, 1, 0],
 CellLabel->"In[16]:=",ExpressionUUID->"4a0315c1-852a-4cb2-a867-db7e9d4bd545"],

Cell[CellGroupData[{

Cell["Run with saved subSamples (Random Groups)", "Subsubsection",
 CellChangeTimes->{{3.903229048912941*^9, 3.903229066604827*^9}, {
  3.903229104518812*^9, 
  3.903229120347959*^9}},ExpressionUUID->"7aa69475-664e-4202-9223-\
82711749cbfa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"savedGroups", "=", 
   RowBox[{"<<", "\"\<../data/savedGroupsReplication.m\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"numSubsamples", "=", 
  RowBox[{"Length", "[", "savedGroups", "]"}]}]}], "Input",
 CellChangeTimes->{{3.902272788560197*^9, 3.90227284311373*^9}, {
   3.902272927239952*^9, 3.902272971076291*^9}, {3.902273498057432*^9, 
   3.90227349855459*^9}, {3.902273799563682*^9, 3.90227380846456*^9}, {
   3.902274196645982*^9, 3.902274247667609*^9}, {3.902274417532733*^9, 
   3.9022744354206448`*^9}, {3.9022837346457987`*^9, 
   3.9022837956321363`*^9}, {3.902285528417015*^9, 3.9022855822366533`*^9}, {
   3.902993623137549*^9, 3.902993628132927*^9}, {3.90299457925368*^9, 
   3.90299458271485*^9}, {3.9032264804326963`*^9, 3.903226501411935*^9}, {
   3.903228912144611*^9, 3.903228912899105*^9}, {3.90339938022556*^9, 
   3.903399398679229*^9}, {3.9037442779774113`*^9, 3.903744279561153*^9}, 
   3.903744383980123*^9, {3.9037446905593567`*^9, 3.903744708805357*^9}, {
   3.9038432358713007`*^9, 3.903843238115677*^9}, {3.9038648543216276`*^9, 
   3.9038648560607395`*^9}, {3.903866570112615*^9, 3.903866625723048*^9}, {
   3.903867568828137*^9, 3.903867569812767*^9}},
 Background->RGBColor[1, 1, 0],
 CellLabel->"In[17]:=",ExpressionUUID->"73344bb0-0037-4945-acfe-2ea9b7dbcd06"],

Cell[BoxData["2500"], "Output",
 CellChangeTimes->{{3.9038665823610773`*^9, 3.903866626473473*^9}, 
   3.90386760070282*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"94aae6f5-82fd-4c7d-89d7-a6c227bef4ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<Starting pointIdentified process where alpha = \>\"", ",", 
       "alpha"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"pointIdentified", "=", 
      RowBox[{"pointIdentifiedCR", "[", 
       RowBox[{"ssSize", ",", "numSubsamples", ",", 
        RowBox[{"sol", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
        RowBox[{"Cx", "[", 
         RowBox[{"noAttr", "-", "1"}], "]"}], ",", " ", "groupIDs", ",", " ", 
        "dataArray", ",", "method", ",", "True", ",", 
        RowBox[{"confidenceLevel", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"1", "-", "alpha"}], ")"}]}], ",", 
        RowBox[{"asymptotics", "\[Rule]", "nests"}], ",", " ", 
        RowBox[{"progressUpdate", "\[Rule]", "10"}], ",", 
        RowBox[{"useSavedGroups", "\[Rule]", "True"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointIdentified", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"pointIdentified", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"MapIndexed", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Flatten", "@", 
                 RowBox[{"{", 
                  RowBox[{"#2", ",", "#1"}], "}"}]}], "&"}], ",", "#"}], 
              "]"}], "&"}], ",", "\[IndentingNewLine]", 
            RowBox[{"pointIdentified", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
           "]"}], ",", "1"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
    ")"}], "//", "AbsoluteTiming"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.630310275200242*^9, {3.630310329918992*^9, 3.630310357309617*^9}, {
   3.630310589606492*^9, 3.630310614840867*^9}, {3.630310768262742*^9, 
   3.630310769262742*^9}, {3.630311286325242*^9, 3.630311287637742*^9}, {
   3.6303355083603983`*^9, 3.6303355101728983`*^9}, {3.6303358144541483`*^9, 
   3.6303358164853983`*^9}, {3.6303359362353983`*^9, 
   3.6303359372822733`*^9}, {3.6304824158477087`*^9, 
   3.6304824168008337`*^9}, {3.6305725670601397`*^9, 
   3.6305725904507647`*^9}, {3.6305729219195147`*^9, 
   3.6305729247632647`*^9}, {3.6305733948794756`*^9, 
   3.6305734127544756`*^9}, {3.6305734630669756`*^9, 
   3.6305734834263506`*^9}, {3.9019303608972*^9, 3.901930381574362*^9}, {
   3.90193174345966*^9, 3.901931747603012*^9}, {3.9019420126839457`*^9, 
   3.9019420224949703`*^9}, {3.901942065601927*^9, 3.901942067655796*^9}, 
   3.9022730419267*^9, {3.902287817024399*^9, 3.9022878231221657`*^9}, {
   3.9030575205002193`*^9, 3.903057521191359*^9}, {3.903745134413439*^9, 
   3.903745161126507*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"1e72ac41-1763-4f4e-8c85-5e200208df11"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Starting pointIdentified process where alpha = \"\>", 
   "\[InvisibleSpace]", "0.05`"}],
  SequenceForm["Starting pointIdentified process where alpha = ", 0.05],
  Editable->False]], "Print",
 CellChangeTimes->{3.9038666311231327`*^9, 3.9038676007633047`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"97593658-6896-4795-92e0-da0e5a10073a"],

Cell["\<\

Iterations completed:10

Iterations completed:20

Iterations completed:30

Iterations completed:40

Iterations completed:50

Iterations completed:60

Iterations completed:70

Iterations completed:80

Iterations completed:90

Iterations completed:100

Iterations completed:110

Iterations completed:120

Iterations completed:130

Iterations completed:140

Iterations completed:150

Iterations completed:160

Iterations completed:170

Iterations completed:180

Iterations completed:190

Iterations completed:200

Iterations completed:210

Iterations completed:220

Iterations completed:230

Iterations completed:240

Iterations completed:250

Iterations completed:260

Iterations completed:270

Iterations completed:280

Iterations completed:290

Iterations completed:300

Iterations completed:310

Iterations completed:320

Iterations completed:330

Iterations completed:340

Iterations completed:350

Iterations completed:360

Iterations completed:370

Iterations completed:380

Iterations completed:390

Iterations completed:400

Iterations completed:410

Iterations completed:420

Iterations completed:430

Iterations completed:440

Iterations completed:450

Iterations completed:460

Iterations completed:470

Iterations completed:480

Iterations completed:490

Iterations completed:500

Iterations completed:510

Iterations completed:520

Iterations completed:530

Iterations completed:540

Iterations completed:550

Iterations completed:560

Iterations completed:570

Iterations completed:580

Iterations completed:590

Iterations completed:600

Iterations completed:610

Iterations completed:620

Iterations completed:630

Iterations completed:640

Iterations completed:650

Iterations completed:660

Iterations completed:670

Iterations completed:680

Iterations completed:690

Iterations completed:700

Iterations completed:710

Iterations completed:720

Iterations completed:730

Iterations completed:740

Iterations completed:750

Iterations completed:760

Iterations completed:770

Iterations completed:780

Iterations completed:790

Iterations completed:800

Iterations completed:810

Iterations completed:820

Iterations completed:830

Iterations completed:840

Iterations completed:850

Iterations completed:860

Iterations completed:870

Iterations completed:880

Iterations completed:890

Iterations completed:900

Iterations completed:910

Iterations completed:920

Iterations completed:930

Iterations completed:940

Iterations completed:950

Iterations completed:960

Iterations completed:970

Iterations completed:980
Iterations completed:990

Iterations completed:1000

Iterations completed:1010

Iterations completed:1020

Iterations completed:1030

Iterations completed:1040

Iterations completed:1050

Iterations completed:1060

Iterations completed:1070

Iterations completed:1080

Iterations completed:1090

Iterations completed:1100

Iterations completed:1110

Iterations completed:1120

Iterations completed:1130

Iterations completed:1140

Iterations completed:1150

Iterations completed:1160

Iterations completed:1170

Iterations completed:1180

Iterations completed:1190

Iterations completed:1200

Iterations completed:1210

Iterations completed:1220
Iterations completed:1230

Iterations completed:1240

Iterations completed:1250

Iterations completed:1260

Iterations completed:1270

Iterations completed:1280

Iterations completed:1290

Iterations completed:1300

Iterations completed:1310

Iterations completed:1320

Iterations completed:1330

Iterations completed:1340

Iterations completed:1350

Iterations completed:1360

Iterations completed:1370

Iterations completed:1380

Iterations completed:1390

Iterations completed:1400

Iterations completed:1410

Iterations completed:1420

Iterations completed:1430

Iterations completed:1440

Iterations completed:1450

Iterations completed:1460

Iterations completed:1470

Iterations completed:1480

Iterations completed:1490

Iterations completed:1500

Iterations completed:1510

Iterations completed:1520

Iterations completed:1530

Iterations completed:1540

Iterations completed:1550

Iterations completed:1560

Iterations completed:1570

Iterations completed:1580

Iterations completed:1590

Iterations completed:1600

Iterations completed:1610

Iterations completed:1620

Iterations completed:1630

Iterations completed:1640

Iterations completed:1650

Iterations completed:1660

Iterations completed:1670

Iterations completed:1680

Iterations completed:1690

Iterations completed:1700

Iterations completed:1710

Iterations completed:1720

Iterations completed:1730

Iterations completed:1740

Iterations completed:1750

Iterations completed:1760

Iterations completed:1770

Iterations completed:1780

Iterations completed:1790

Iterations completed:1800

Iterations completed:1810

Iterations completed:1820

Iterations completed:1830

Iterations completed:1840

Iterations completed:1850

Iterations completed:1860

Iterations completed:1870

Iterations completed:1880

Iterations completed:1890

Iterations completed:1900

Iterations completed:1910

Iterations completed:1920

Iterations completed:1930

Iterations completed:1940

Iterations completed:1950

Iterations completed:1960

Iterations completed:1970

Iterations completed:1980

Iterations completed:1990

Iterations completed:2000

Iterations completed:2010

Iterations completed:2020

Iterations completed:2030

Iterations completed:2040

Iterations completed:2050

Iterations completed:2060

Iterations completed:2070

Iterations completed:2080

Iterations completed:2090

Iterations completed:2100

Iterations completed:2110

Iterations completed:2120

Iterations completed:2130

Iterations completed:2140

Iterations completed:2150

Iterations completed:2160

Iterations completed:2170

Iterations completed:2180

Iterations completed:2190

Iterations completed:2200

Iterations completed:2210

Iterations completed:2220

Iterations completed:2230

Iterations completed:2240

Iterations completed:2250

Iterations completed:2260

Iterations completed:2270

Iterations completed:2280

Iterations completed:2290

Iterations completed:2300

Iterations completed:2310

Iterations completed:2320

Iterations completed:2330

Iterations completed:2340

Iterations completed:2350

Iterations completed:2360

Iterations completed:2370

Iterations completed:2380

Iterations completed:2390

Iterations completed:2400

Iterations completed:2410

Iterations completed:2420

Iterations completed:2430

Iterations completed:2440

Iterations completed:2450

Iterations completed:2460

Iterations completed:2470

Iterations completed:2480

Iterations completed:2490

Iterations completed:2500\
\>", "Print",
 CellChangeTimes->{3.9038666311231327`*^9, 3.903867690951297*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"dcc58d1c-4517-4552-91f2-85978afa1753"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"17651.041866`", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Symmetric case\"\>", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\<\"kn_similarity\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "1.1750399809833745`", ",", "8.788770955955055`"}], 
                    "}"}]}], ",", 
                   RowBox[{"\<\"_sq (kn_similarity)\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5.155014767836711`"}], ",", 
                    "0.3517121610478351`"}], "}"}]}], ",", 
                   RowBox[{"\<\"cites_size\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.1125299989059743`"}], ",", 
                    "1.2453704983399145`"}], "}"}]}], ",", 
                   RowBox[{"\<\"cites_experience\"\>", "\[Rule]", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"]}], ",", 
                   RowBox[{"\<\"cites_rankcmd\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.15878153405696627`", ",", "2.637841701046953`"}], 
                    "}"}]}], ",", 
                   RowBox[{"\<\"domain_similarity\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "1.2952121080032537`", ",", "4.226551719983486`"}], 
                    "}"}]}]}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], "}"}], ",", 
             GraphicsBox[{{}, {{}, 
                {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                  NCache[
                   Rational[1, 360], 0.002777777777777778]], 
                 AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
s2UVVinYr7feicYgbxn7YdMHnKfrn4NfJ+f0KE/xJX5fIcw7ltwnob/xVFTp
my1PLWE/K8LsZvs+6O91u9212FKN+ZTklTCbaG/gh+cO0FMyE/sZOEj3ip02
0hZDf0C8VsSEU6yQsN+3Sv25NRb6xgnDf0yKqdH/mjv9zm9C9x98yYVBNTQK
/tM5tAWHm6N/wfviqW2eDvg53+Z7Tlv0wv7e609UeWZR/zpMi8an/4T+/KcX
V+j4xegI+17mRV8bQ4EvJXJqNk42gD+mb7GU/l4a53PMdSWDxgj9r3eTN/Mf
2IC/6m+ZdZYpF/7fXXkYojaD+SCad1fcaOjBj32bFVVJdRj6Tqvs8jM9s21E
/K23JwUpbYJ+xX0xqkuqkZh/UfrNq+Lvjf2SvcxXvGrWYT5x6O79WxRseN8P
S6/uC6BCfW1Upb5VrLiUiM+oe4Kzjyj4A9/GC2ipg3A+Q+6L6y5eBb6Xzu+e
sNUd/O2ZBK/wgJV4wv8PsyFt7iPgj9V9cdkklwd9Y5mOyRomejLezkMam9Eq
GUwEvzr2iIbl3Xr8fqNlOb1ZpWMI+9P6qpJx0sAHNGoGJ+4N1xD+myxo2liF
Qr/IToK3tsIW/YtXv0kLTRrQp91w8tiDx93YL0C9qNLrKzZF2K/68akvLBb6
peqStTV3BhEfyaLljX6SOD9vDrRGvPuF+dPw3Sl19/dA33v/o+7LB5WAf3rd
jD7e+Rv7Z98XOAmlSeD+/1IouJniAPT5ubOPbOOvxPzv75o2Rrr9rYT9zRY3
t3yTQv6wMeqEyAVvvI+ucbmPi8LAz9lw9PjUjirwo2TMOPT4kz8S33el7EB+
uTz09wpLA1oj4sD/dFx9u37xEPDhjRExkQP30F8o62qt0ekA/+d+3yOBbBXw
zy9vKjncWAD+bW02j7yMC/ojipOP6T6HjBHfV/vr3ht/jgOfpKjr8KcagT6e
5Fr8HXYX3G+Lr0xsf6zgfvu4Q3cp7xvwH5HOi2xhTiOE/ecCka8+XEN/qsG6
xS/yD/i9gedeM509Bv1Yo898mRcbUV+cbOn+xWsPfpG75EW3UUfsNxF8v+Id
IoD+qf2nOk5Re7y/Zk/ivE9oIr9NvPbltTVzNeG/fNKszL37g4T9xzfXWu9F
Ad/W4I3RT+1B/XjjnOvh9NNvCfuG05SfGpqxX8ZR0vD5jz/gR0nzyqVEVyM/
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
Hy50dQA+sH0f99GzpErC/9TSOU59P+H/9TeDd7p6jxLnP118x3leB/3lw27s
3TTaiJ/vPxb2XlVAfTqeVeF5+Df0YY4l8bacvv+J8A+H3vD9ak/ot7zZpUQz
vxH7Oza8Co09+Qv2y85uSd0jg/z50jXh71ZsyB9u8h0/3yC6TNiXMW0s658F
/3C+VjSzeuCf+usRzZq8+jjhH/Yv7N2tRL/6v/hc4P/Jce8uEtn+dc/Ulwzh
soR//EsjKpOI/XispKVWhssU7oKE/Tyj38lDXMAnBxivl/o7kfmSE2rSTuvs
FqfAz7yyusBeLzVO3E9GizNmt93Bf3vWQco5thXf1wPWPtmT1OiP8zsNV3W+
wPmLNxYf+Lkf/YsDxlve1n0D/9xm8jxb31vwl47v3uw0a4X3i/ay5saWF/B/
eI2zJfsq5tNVlQ577U2F/kNFdXq+r/8//a/7gYfOd0J/NXvxudmbcuDDez+2
cWt7gB9VkmyRbROO+vTdux08Xv7g356jExt040d/9uiNY3u56cE/JG1v2KL8
BP0jsU9plf4tmK9hNnUhndVC/ibvdtMhZVib8L/fvgaFmWbMR7QGdDAeVkB+
9XCa3cdEEfoVD3kGvI+RkF+l+QfLTzSBvy3IMyx/yAD6hA9oGX7n8YPf9f4F
z/mHV7A/otk8e/DKRfRPp66w7bmqhP6UhlXt/FAu6pcTEkuFvdfA/3nclMsV
zof3S9br45cLz5E/uNKMXvFMHyHuT8ndTZuZ6t4T56fUXhqRDh8i7o+A9O1T
Tw3A/6Efs5FNekKeL6UnPZPIMNW8Dn54i+D+VmqlWcI/zG4fp2oXwY9KzOg/
PLYN9d29dF3vsIPgPzBYJKzTkkT/gu5515XY78gPEz0rZ7zvIH6eHNWopcoC
vqE23yvVQYn78ztX4/RUjDxx/vKp34qPJ6WJ8zeVLS6xXIX+wFKKveBVCvC3
rbYb3t8ni/r3UIjO0KTEFhLZft0Uc7KZNPSRHp/LjOB1DCXOPyiRWZ3fj/77
6Whenkg/7DcxbtSrUbyC/ERa2lcuRQv9qV9ZacO0Scgf3l1SKp8QgX7LFUEW
PYVyfL/3lLcfEJUE/hOzMbyAZbiV8P9w2o3epAnEZ7/H6nkJI6WEfY79JmKB
DRnE/cml/TJpU0zen8lK2uF38vV1efBn7gh2q706j/fxlL6KqrIC+GkeG2/s
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
e+cV3r3D/W96IaUwck1+pctWFSA5Bf2f9IOxlaY04AcuNBS784uT8TUKUhP9
3pDNK+R+KA3J0Ds3iqUW979812PBDyp4HztKol0UncFfcvQaHM2tQf5fsk5t
OMQJ94//Vd6ML02Yz3WSnjzdRYP+Y/XA5COe8WkiPm8zD+t8bQY+KdkyNK5G
R/bnv/zB+frm1hzg21InXDfXzn8n4lO2/KddsRT3wwXpLXd0pNH/ZXVdCjqr
y1JCtr+xbh9l3hHkn1T1xr2395H/fgoSX/jYXb9byN++v6gbOHMe+ZvNM3YZ
yibkz89KWEzlrcDPD/NmEBlds5+ur51mncYpMj7+3/s+qvGvohT8B77U6ZlU
X/ATenqfp/3jw/yd+o+UTcwK1IT/V90LHl6hAz9Tsa7Crtwav6/RD+POwTO4
n/lPPRLczID+aUMZe/DHyveE/75eUSwqy+CP2QTlh9aeQv3bnCHsxdKH+ijK
c5OfTBbqo+C8H6PJStBXtLLRVRM1IN/v/+VXsX2sbe3Arwof/xVoPYr6aGBP
pv+nRHK9R0GKuCgkXO4/QJyf35m1uUcHoW/cyGml38wM/r9cW4BIsRvwgUcX
ZO2iesGfeSB599N2TfCHmepzZiJWoN/O3zf9TZsG+vbxGhs21Gri/ry8SGV2
1LyDsG+tJOUqLYL+bIixqfGcDPRVDBeMain3oH/ayyrhFpEEfHvWMVuc9fE8
4f9VtWscs4boT71eSbPcX4b+I5NLQ7rmFugnLzmKdOu0gD8//G6MSl8K/C4l
wR0zNRX4viS5XM672UF/z6/t647eP9DPuUzZkSoiuJfw33qChumWBVk/97/8
0MXJ/u6WNfzMzCX5szzQBz4VL5960Bj8hwCGY8F0d8Gf956pj5D/C/2WQ1kC
TJ9SEJ+XAhllXdbQ57E7s3Orthjunz1SObFlKZiPjqO5pl0TivedXid9e5Mp
Gc+gIHG1BzuJboW+2cgGWfXKdZiPW/q9/KXnPvQT9K/5x5tm1xDx0WaX85lu
w/6gfQF76fJ4MX9X12zMxO8K/7kt5pzV1HII/wWq7PukzwO/os+Z3MvyB/Mv
7SfPK8ckoz+4/iidRcuxNfwNHlqBlVtr+jupjQXUSm8J/xXVj+j8sgQ+c56S
67iwOX5fmaqseq0c9PcntbtT6Ih9jBSkUXYK7kvbsF9jaPhY7HAC3vcOc+qc
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
i6VifiTj+Dtq29QDhH19iU3naxKR/6RIuvRKDOF8utt/ZJfNZifsj5wsDy9d
YCfs+3y7LbG4An2AP5zsvN+vexLxcdo6S7LsA34VFbT0/tcDxF90mTXNogXz
oXTPbobs9QT+/zJRlGM73XPi+zrIFOYQFRtO2H9MMrCWd2ojzn+N2zOexS7s
L569qNFcRg9979K0vbcUlNOJ8zOoxhj3UXkNP/Yxl5fsnzjkt+ctuOWCMb+2
Ub876tso+LH39Wq6vSoxnyLqJ96ttBP8BGPakHeCp6sI/4/0f1r9NIX+GvvG
phQjB9QXC8LaFH9S0J8i5ajcrsvH/N0Gg8S5JbqPhP0ttVssg8sGCPvSb3wq
20NR/8pNHg46K4r9dGa6e3gqLD4T9n04YtkFZlBf1Bpwbw7ZW0nY56BR+h9t
1/3P9fu9rYSIQmRElGxRMopeIUSUVEZWRsjISGSVkZGKjIxSRCGzZJREhewk
EjIzKjN7lD7v7w+v59U/8P0HzuN+nvt+3vc517nOdbJLP5HxUArST5mxJPMO
xIdxLP4ffl4g87FZSNWs/EZp/+ir3N0R5/DRBus36Nm0MOQ5SPj/hl95aJUD
6oPDewKv16qjP7F24ljpRX3ok8xO7ss6H4r8a9FjbjuVBPpbc6u2zERbYj6d
Vkn5Ye6yZsK+bvZJipJgxM/Umt8C01ugT1XAQC34Jxj90RezGW9eDMb6za8z
CjusIj5Ji2j1ygqEfmnrOrOsEQ2y3sN/ceG3mH2RXMAH9j7dw0c5gfinR0bo
mLbca8I+N5PgAbll4KsG+2qm/6iivuB87pmD2yrih+GFLa4Ukog/57u3dDJU
Qr/lTWph3g81zO+zDFIIPWcPfeOIZetzxy2RXzyl+rKZfTfuT1XrqKhSG7xf
mzwef3bIqCfs2wrVaEhuxP81kydpTt0K/KRvx4eGtU3IHy8/stPj/gR9gwph
GofBX2R9ov/yO5q5xZRNmK93Rezx9dKyv8T6xyijHvW9/ETsr8ni8tvLJuhP
dHvJp/vtLuq/l3+I7XD8mk7Y93Rgp53bh/yu//anP6pOeB+fqRpdpLqB/Oju
y8Tf3jfJ9U8K0uA5H/fYNtQHI7Loh8bv4/4sO+5w6soK9K+CWEzbvdahvzXb
n83Jw3KMWP/8tK3Ux00zhH9iyn5ScjgCP6n6nFxg+RT5i1lkyoe9Cuj/DXjK
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
oC/taCpc2Z4N/VvDY5kT+wrnCP/4aFSPzgqgP2vyub16nB7mUzsV7Gfyrkwm
zo9a6HvdzG/g3y6FJ1Nqbgc/kLF7IuHdJTJeyUYqzxSWe2SJ+kL14lBR6QLw
pTAt49OH69GfmJe4wDQyAPxnXHPXUQtT2N8wycWX3wn91erCm+wZ3ni/Nky2
vO5woCLsO7EV1Fz6Zz7UM6+OzFYd8HNOSn+m2qwF/DD9x1VSJxXyoxjm/BKS
F/r7GNgmV6pt0b+5VPeR56TWF+L8VCdvUL0hlk+s/+FUuOufl4ifc04YbGQ5
j/6dueIrXvoC6P/lLa1Y4bLDfNtLDx5d+LyE/sHfo5+qXVeBP5w197p36BD4
vZs1NJSLSqBft1jCdKYsvJGwb9W1N16mHv7py1WOHW8RIOzHM6l9dFzkIux7
XtxeSjkDfhH32Ymft/7hJydyZh/PXgH/xzEke99+OeDPVJMx8erfUV+ofR70
2GwJ/afMNUYdXfmoX7x3+6RTO4n+hUz5i2/FNKFPIiW+o/2IPDn++C8+adzv
5LcJ8UnJ5fGKWoLvS0dq/1hv2DKK+Jadx5tpTx3y6xOJT+mKZKGPV7JfzyHz
OP4v2nfyW8T40R8aej6t8mgv4it3FZmw+Dxawn6qlYSyDDUtYV/xWRcNuwr+
36x060aTXPCHm1kn1Rh4UN/ZMHh7v3EM6teMGcOPbV0aCP90ZIc03hCpIfwj
8HlscuA19NWZF55ISgRREf7/kOV5KMIQ+gmkcwK3nopC31Xhj9ZKpDk5v2Uh
rVoOKxy+Rcan/m/+mv3NWFXwzx+H72XM3oD9HRiJrB+1RH7q0mBSfcWyivDP
EetsWitx+Mdt4UyRHBviB0FajSxTZ/y/VgHSQaee4f4xV524W2UI/m1oO3vH
Rw3M175HoSlWN475p1bH50LeiLIT9qPPTtle+Id/zpzfvfbwn/31UbKmM+n+
Jz/SyY058hDnR6225PfuQtSX2wQEmY/wYn7QnEUB45FS5HcP7EfDJo+2E+dz
ysBdi5GSzJf6L36z4bXbdwT47cioSUFQOuLPR0y7Y/QuQl+LZ29Qh0gv+tfY
RGca0v3J9av/8qPqT/UjWdA/52Gh0mb9iflTWXc2/Nr2FvNDw26/U3FSRH7h
2VXMeoMH/JN1qee2fXRH/HmsW/PtjieIH7LZghMHzRG/cXknugzFUxH2G21c
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
Dkfia7qlT6ifJgeHSl1e9yf8v1PldNvbUOzvtND6WN1+1I+Yf7yvM3eoJ9Z/
YKbjY8Bu6A/cadrY8ikC/a3Pmi02CXSvEvbnDJzHBZ6gfrfrbXaOXzrsqxhL
Kf7Vx/uYdlY/qD0O8ZXvs9pIBTvk7w+sLGw7SoGfZ25QfylXjv6sm4kZwsWe
4HcNKH6QmmJA/DZZJXP/gjf4e9MS22uWUoCvFtEdGpbaDH3m2Uif+qtBeF+O
GeykEmUFf1LzerlCm8V3wj8lekpG5m8wH+Q9vYSEpSn4sTJ9yXcLQzGf13zZ
6eRD2Xhif+faRXS3amJ/af7kcnqcQn129vQ17YBg8PfopsJLjneS88//vY+k
6nNPLNG/bNepzS/9j773MdEbjdzxqB8J8Eu6mEqhP/1MX10yrTuZLzejqt14
Nsh/N3c52f4fhjyaLXLg/z+97l5AJwf9mXcldLtOdQLfPqD24zPnT9w/bwLF
OAt0yHjQjKoUf4IO2yHgJws9vc0LKXgfY3b5aOzIgb5B8e6D/0l6VBP2hUlD
gVvpwS9S3Rb6YzoW8b+zottMoBDqv8cmvIZ7riE/nTCd/yWQD36OPMNeAQqH
ZsK+lHKRx9cerF/g+4lI3k7gM++v5PtGZ4K/0SX7vvVWGeqbR2Y98t9qo742
08U9FfgQ+vDp1/MGK1LBv/q1fSw2e2c9YV/RReyJXBbmOyyKXZlf5kd9dqe5
mePDV/i+yrgiog5sBv48P5ac9fGf/rvfPQHPmUegz+C7nVTscPQH4f8dWzfO
pY1XEvYZKo0N983TEvZDLre1X0uHfm/35zGD7eno/91C69d7hQn9rd23bnU9
ekCOlylIwymFllnXEZ8rf3y719cA9fENxbleYfF4348cfnZu+1us32iq6fjv
LuhrORbeO7LZAPyNJ2enmIrlML+vuPCtzP4J8N/KDT6UDT8pItZ/rLN2NZAN
/VOx2+W4nEzAT9gmdJ39Bi/iqwmZK41tbJif9aWJyohKGfPvEip/DDBH4/xb
sPOru0mAn3wpMVJ+cRDv+y2Gt4rPP9QQ5+egQGJ6vyry3/vi/lxn1aAvmmh/
mjuzBvfb0LuHER9ogW/HH/zLkWkM/vxyOdsl5RrkF0YtDr4VSbjfZP2zwt3D
8P7KjTmcDZMTIOy/7lnrSg1CfV8mUse7VR74s84Beqa0l8gvXm26ZlxxH/y3
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
d+1bcQnqU2llKjMedsnE+rfnS/LUOKG/tVFe3VVlFe/7IaE4twLHKWJ/yy4E
cw2eIu8XBUmxbMr64DD0SajMdstvHCefD1bSTPLj1Mt+2N+W3Xy3Zc2BD7Oo
B2zk16MtJ9t/TflTYuNABuGfhgK12EYt6Luq6AYpexH+ZSXpLHicoJZ9Svjn
vPJcUVkZvl+NA5/jNXqB/7zKel7T7g7+uZz98wnuTUXE+v9yreYYvUX9Ze7K
uit/DeKrQa+xu3a+4G9UCvIMVVSS7c2o1m/dl7JOQ0vY32x+3frwP/r8c03v
9t7jJf/7/+LzCbW5TR/BzzymIrXgbwh8bJDBv/QkPeZXyqmv/ObvJutPU5Dm
yrUb97OSv5f/xQ+/Diuu6ZH7w1lJo9+/v9nTTo6n2UirmhfzNTI+EfbndBgY
7odDX/qhU4d7ddg2wn4k48jct370F98bZt0sOQ991I9n/7La76Ij7CuEZ0wt
vcT8vkm3yWO54sCHabclWg+aoL8jIcZr+b8q1O/O5za+ofqA+y2VyVGezwX4
m0LkZ6lxf+j3RoYoxckzUhL2JezkFLN4yonzP1/xvcjnBuZPZf1Vfp0sBv6A
oqKJSn0n8CsD2r/sXfXAx1aeFunsEnlD+P+XhvfVUt1a4nyam7c+GWCHfiZL
qeWv1z+wfu7cW9mtmpnE9+X+4PgBlTi8vyIbfgrafgX/ZPNo72GrDOjH9tYY
P9a27yDWb3KXve9WLt7fMnb5t92PkX99DjqudIYN+dHtiRaVj13gZ94f0+38
tdxD+Ef7TuPc68fgh+/peEXhVfSA2F+6BOPO9rhKwj980lbdUtpfCP9PnVzf
o5mdQNwPNwy9ZpNHEJ+LMlZlPb4M/s/cn+D5KCbyfv0vvqVYj024QT5/bKRO
vuHISjPUp4ZSj79+Yorzo9zD6XOjCf2/n3yt8uwWof8zpHo3/lQ+4ttS2nWK
oydoCf+UHFeO3afdQ/jH2uzNuJgi9LVi9o63tB/C/EcNPUW5LRPQN6vhTRtL
3Y/4IT6R31nvSy3hn6hHvG7ae9HfLfxR6kL/OOZztbNdU972E/XrUw8u5aXY
Al8VPZ6gzrsZ+OSQs+elrwfRf+p7Tf1dqlEjYX+C38k4/2sn4X+Jlp+vBU+C
XzfNqiP0ShD5tWv4ofZX3OivKfd2jMmMBX6y5+7R0W2myH/3aMfOec8jvtJ8
4nXzxCfURxwL7YYr7dEfsbM8gX0tHO9X16uEZEUqnE8qSbvfHxdRf6c9Myt3
TxzxSSn38ilrfegnsKSx/eTgR/yvaGkz7LoL+E9SgcV8YQ7iT6WfNcXi/qgf
RfXV/f3NhPhfzKJK2UtohfBPqYZsjL4Z8lPSSxZb31d9hP21fdt8vniVE/55
m3C5MEwG+anYTpvWn9Soj7N3h8ZuUUV9nLTFaLvdNOYjPHnVsuHXOPTrFDhr
LYybUD9dfhx9coMG9BN4A0Xb33ih/yivv+qt9kVpEtm+d72o80II6ndq1rbs
sZfJ9SpW0shLV61hbujXLcV6n9blJtePuUh/PzpLNm8RIpHtF/JeaHk0Av0W
Pj0b46O86J8y+cbHUc6I+O3d7uGsjfXgPxsk8GlkVML/h8+42B0Owfmxslu5
whpI/j4pSApbxe4df4P5idqCSn5WqujfZ+2OfnFpEu/jieLzHrfqEN8yNsu+
DzmN+nLrcGecrFURsX6dYBXFiGH0vy9d10kNWcX6Q9PYvxfdmCP2d7/egrAn
D/SRChXb9sRnI38Jv2foXEDMO6MgnY1kfyx8D/PZszwXVq2JfJSVpHbYhz+z
GvFn5p7ixQtR2N9Pp+ZzNn35Sqy/LvayQOZlxIejXoLnBA79019wqvmFVCq+
rz8vo+OMNqN//MaOoV9KqujvC/tx+5FgO/gPQXPNknT/1E/F6ILPqhUBP1E/
cLaWxQ34doiSY9LhavJ5YSP5HHQY+KOO/OsjkwPDM7F2Yn+DSwyu6G/DfMYE
n9XsZRn0v19X3MA7fQX5e+dUjEZuOPQf7k+nLqVFQ1/96RWPArGmJcL+Fg6d
lwPSiG+3W/yULfmM+un5S9aLTrPo/z06qfacYdMqsb/eF4pWr5uBP0z9suDq
7aPzhP0NP+eDL+7H/exprhlUzYz6S3RdsMpWd+hfqbP7R94thn5Ucc+Xypaj
OP8mpjof9iQDfxYpZ9lQxAt+tf5JN5sogi9OT3okfztM8Q76iw0ibnTz8+J8
ntOa1i30/UOs/27CB8l7gcA/n+c/3NT1F++vRqpv+KvtmI9pxR/nH2sJ/Pn8
AF/D9x2UJLJ9TVWBbEYW7O++ltZrf9Qw/0Lj3EmvCXrgJ+1N/VqX/yP/f3qS
GfVh40OhyN8ftgg8PFmH+eypiy8MOXYhPj8vOfv8P1now9zbZ2CzJR76FW8a
JKlrGMAv+pEY43D1AuqnOUL9gbTDqO9w8DuX/rUHf+nuts7mxZvAr6Q/Kqtt
pwH+6eFmNkg1B/xWdmTUm/Mp5h85qO7ZmK4E/Cd7+cSNY4/Jf//v/rxg7fN2
Dvylw0nuBp0zqB/FCXdsW3LD/FAu1ydPE0RQH/Tv2Ei1jwP9v5YL8ofMX4Kf
OXhZcfl2Dfg/glo9jUwxmC+mRKu/0WsG5/+s/hOTur4pYv27BUlzdxpiCft6
5TuajMLAj02S+VtMIwr+WOdDp7MzLLjfvgwLvj/0FfjA5+suf2PkEN/e+u21
7tqI950ib1v//izED/OVB7Q2aH4j7GdSdTaLbgJ/tZnRluchF+YPGoR3V8T/
Rn/BA8Gvf4rNMJ/FZuKq0ll+1Nek8yYun3d4T9gPtntUPNIK//PUFhdyaqL+
eOj03eaEGPQ33a+b2q/bTK6nspEmd+3c27mO+uDe2rJjKt3QD7kyPFxyayfi
f51HddrfTdFfwLx987UvX6AfYkyzsHjWEP1xEffmjmjKkOMbLhKTwoksBx30
Zx1mjmfeKov6vqh9EJ25OfSL/JtfW50LwvkZ2Mwq0bsB9eX1NmPVpG3At8WZ
6FSWEoCvylxgqTj6CPUX47DTKjMtU4R9jsgTbMYquN9mlfN3ZxxA/0vy91W7
ID/k76WWsYcPRVYR5zPBhypV5CLi86Uho5SZb2S+IT1J2pPyRqUy+r+01P9M
ckuhf42B+rvfVkJvhYv0je5IOPUKvl/vFtOC4TDMR7BZTszvFcd87eJF5+MX
3RHfehWejTcRpyX8c/VMxxeD9X/0D20Ko2m98P2ukP5Sdu1D/KwbbkgpTY/z
6V5pye5qBXx4w4CokD0v5p86Jv9pmt0G/H9YI2VBShL6fpd3tFUa9WP+C9O2
1ssb9jsS63/TxB8ofg36D1IBhQo/xaGvbrR76PyNI8B/uAMlzm3fi/zlVZr6
vKkb+T6lIKU6S/UdkFwn7D9LjaY45w/+sK3rD6GHB3B+hLgm5DpWsb/hJU/F
JaVQP4p8xW+tpYnvq6bmh0btF+QvuRuvRnVfyyfs08a/H46NAD9hNjl3YNsr
6Lvyjl2MKOGKIc5P6CHZaEFXvL99ISbXhGgQn/TbPKxZEEF8GOF4alLfgPx+
s5GYLo2IG00Bf7aYDZx05K4m7Ec/XqdvWwW/96ymMUuMYBXhnwKF9nt2ubTl
ZPsTw8dGZWyRX4w2tutTGwEf4CkRWVLSQ/7ePe/T8V0U+ePL+UNWU8fEifUz
dLo4ZJ5sJfwz4UC5TcMB/MBfqYJDQsvkehQX6XLnUfdTTsDf5Np8lF1dwK/+
QiXaZ6+QQPhfJJNaNKEW/E+XL32B/p+A/3dMFMnkRUMfTMfzjt2KO/pzJVU2
tDPQYP6pr0ug8RZ5vF93z17g6WnoI9YvWXI+RWnyA2H/W2hVgNQE6vuGIlu+
pHInEfZ5o9Rki/zyCf/X6tBa3r4HfGzDgiwPTzAZH2Il0Zc1c8b7IL9odL1n
mFaO/pQvDz859XUNEvYZNZSH1u4NEes/zH3r8Nf/UH9/6vPOwPVXIbH+15aX
GQs5wD+05+PaHJuK/KI74DWD/7kJYn//Zjjlm6mh/m61dDPlphvqF2drkk8Z
tg4R9i3s2pxvuEG/7iqTWVwOD+J/iay+rJ92wCf9FDl+Ud1FfB6b+7pmtyjy
07sKbGs1T3H//Lr/i0N/FfqfoY7DiocswV/6229QtT+/i/DPc/3nQTyumA8+
HKlGGdkqWk62L2QfEvfYD/jY9NVd1HNRwGdChXjOpb5Cf7fC6FMdjk3ghzC9
cLV5tgPzxQz381nrbMf8phlD3k139yL+P+ZrFD7IAP7tqNHTlT5d9Ed0XXHK
Z19hJ+zHzFaH3H2F+Q6eisP88RnoP326dTZS6R/9nPC1ZyG6/m3E+VSyf3Kf
6xjme8Zw/7Kn5B4j/KP6Jv6grBL0tUhrNl6akui/DtxhpfDjFvClZrPnWdX+
tOVk+4+qdCNlBhHf/gosW9v7Ffl7Y8R9udsXoA9T/WjL/M3b6E957ds2y+gF
/NnMQdHWoxn13whLF8eyBNz/9JuoD25UBL+oZK9UAqUh8O0//Eefp1lD3yNS
PLehuxj9y6cPKJ48cxjxudQHr/Xv32gJ+zdTd6/zGWI++4FHp+ao/ZG/986F
UTi8TyPWz6xx48/+G9CHdP5cwexYGk2sP+HXcIv4wlfC//f6TWOGueB/wZRg
2ZdPUoj9tfV+mb1pCfxVmcIsb94IxJ+a37I7b6qCn78rQzfnzzXEP/aRdVuD
1lAfMQyO6BhTSCP2dye3hCA9G7k+QU9KLEla8eAA//OVk9UWYyPEb0oeWlnT
Fvi+6qeEfR8NYT7Ut5YL6uXf0R89/LWFdN8B+PZqBJXI6HfwiyjcM572X0R/
lqDRZ+UXHIhP3rxikLa2wnyut99/1J9VnyLWf5E0k8zTDP4z72q5iMZpzB/P
YaevmuCiJfzj+nH3Rrk55Nf9aQ9SVjxRvy4Rm9U9qbCNRLZ/f33gsYcv/LOl
hmrfJXXUvwY3R0qMaJC/VzbSYNPhmkp26IvuYJ156nET+rStolllKeXgV6j5
lfkMc2E+KVut5p2Wx+iPO3Nwou+EAvILOnY/X2kO6M/cO6aXMDWI91fFOewS
+yngD6XVJirbZTF/KnWjipHALPSNqwLNJrrYoX/r/KHz9Atx1F86N1VZZcpj
vtVHZc4BavtOwv8vdXKKLo4CPxe9fnT3MVacz2vhGUYRpeCv1qo0f4r5Av7G
TWHv4VAz6JOkVp4pdWoDvurS0n01uOYH4Z8LN8eMdOPR/9Lps0t6TAL5Kddl
2dOqdU3E/vqcfK7kJAx81eJ+sEvqUDdxPnn3+vhuKAO/qyTtZYZ+JfhFklNh
0+N3UR9hHYy4Nv8Q/cX1+zIC1J+lE/a7RpkaVcwwH2Simzqz2wb8wLHyUOVX
l8n3OSvpyt6AIEZ/zM+9+tvzfms2vt+N7esne5OB/yuFfjNgKYa+xHatEPPW
b+gva+YS3Ky+AH7X83sCYzIJ8E9Hn4TU2gTqm0eECz55UkE/J+tRfwptKfjt
PuI3fSMi/uF/Fl1W35iJ+ovVTs7GYnnEJz9NkuLrS0KI9U8+OGwd44X74e+G
aJUXQejfPxGwbafTMdRPW2fXbcx1MX/H5GbEj/NHEX/SXYrY5H3uA2G/R9JV
KyUN8bnbVs43z2Rw/8/l60fvO9dH2N/x37XcUkPweweGFTn2nGUj7NPfiRWf
fAF8I4N9b++dGNQ395T0FM7UQX/ja93fXWJM6I8z37rUFBgNfFLc81WP7Qzq
1x1RPxcLoqAPGX+8avI/V+QvWcFz8cLLyO8aqFeDda+BH+vOZPgi/x/9OgPx
/C9v04GvCi0mdYT2A59fO8pUrRkIfZuP3xgLTWbQf5cfsVZNEYj3sZLqct/H
RJyftzShBpvNsL+p5o6Lhmf/iQ/HEkIYqIAPS6/8TLxqg/xu9cpQ/FdK6Kso
CFoZX+UC/v9C8+PD2WXwB2TjaTazdCD/0mzTfH+WHv07tLqN09obMR+HW9Ht
yVA/+uN+lGi7WnSS+fT/yx+dr/J0J6B+V8domFkvc46w//tgoevyOXJ/7Yxq
oudcsJYy9MFiX1F/TYoC/+fV2fz5EUFy/MdKOrTW7f7TAvWLHkXBTatPUJ/V
/uD3beQ06tdzc5YZ3O3gnw8fv/Cu79gksf78k1SCPFnAP0nqCZ8/t+H7leez
ETHfB//0n2sQeEQP/vbD8PsTqtPgzwumMia0UiI/PRnyflukI+aLZaWO8SXv
Iuv7sJEmdFPN0n6h/7orL378WxD4mQUUN0toeKA/JkAtPDlwC/gqK5c1/6gu
5gu0HNXivze5Qtj/aV55tIAG84Psaxe6TP1xv7nomcpqGqE//bSdh7bUSBWx
/nDbd2X1dMBnVqXq3eXCoa/ic45KuWIN+UW7OuVS6koH4X9BFoVUqYVvxPm5
YX8j/Q8X9LsuaeRVSlOAX3H6mTFN341SYv1779YJR6+qEfYf2A6frq3B+ec6
bll8QwH9O0VelupSYagfWTFtVfPVMsX9dvX5MWrvdMK+o44GW4cJLeGfZMa6
DROLqF9HZfa0Vq9ivrAN6dkJvwfQ3/6ecb6ROh76LXPlwoWDFsAfFqkY5Q80
A//MOGmtT6MEfqam0vn/ZKihv6Qt2/jg1Q/01zdKGf2MiML9Zmpf1pP/nrxe
NlJxivUgzQXgzxv2RZzkUYV/lN/M/KBISiT8X93YvXaoDO/Xwykp7cgdNcT6
r+8S76Lahf31S/kofkUb8eeoqdcjjSzkj3xsWfcrP0L/sLeDpj7BFP4/xyyz
oP4R84lmvk23Jw7mE/YTK1tv//Ei4yFcpDiWbwUf23F/xss4MRpfBz72MZvC
NecI9LU+7H9S2xyH/jLdA58VNx3rI/bXUqOoyVoa+I9bF0d0Rwj5986o/hDt
HN06Af650o1tj/JFcwn7KrFWkaE0qC9INJvvOHoJ/N5rTPqbFhdxP1erCOXr
KiH/zTdqbFH5g/7NksTxUheNf/iNRbYPIu2RXxt/XFhWO4P8gmGB7nqIIOIH
54pj3ekXEV9t7r3WoxBESSLb31Gh7BhuBX513vXI8HfnoL8holIgv70a9Z15
u6c63bw9hP8Xq5RYHB5ME+t3JkVov94GfD67v4/hcQPiQ6pGx2NLYuAPFLrU
Px5pB//QbiLubsREN2Hf/M7X2yfD8L7Qj/42PCwC/EQ+7iEXf18CYX/GmkJs
7jSZP8RKihoYDThwFus319liqOcK/vDlDq0+sSDMH78Y9CGvbGqKsH99RtBm
+irqL6ZvzKwfXUd/us2JtCrK3zWE/UcCzJ4hTH6E/S11j1NGr4MfbjJkXJ32
9J/55uyxBxmLUR9fbPaStL6eS6z/dtlDxpVi6Bs0cIoH/VAcI+zrMNhI/aUj
54MzqtWLlHtm30P/04dy3jKREvyE32W5Ng/lEJ8E3BVYZN+N+jXHYOwr8ZOo
L9BkODhVn8B8hwFRumcsqahPFV4KmdzeX0b4x2rfxkO5segPfTenG/1Oc5BY
/10/WtPA4B/E+vcLPoqJrYG+4lN5i8xPOz8S9i/QhfKOeSO/plZgmh0Lg37j
7/DLEQVv/tE/MfkwsNiC+FNteOHzvlXox0rkRqXQC6P+eDe9qcuuEvr5ikIV
j2Qp0f91ukNp2p8b61/l584OlYI+T+SDF3HXvv0zX/6VS/vsLQ7CfvPRYeFa
WswfeTc6cYtRj5JEts9h8qS6+eEoYV8rLT+rc2WSsF8wJ7aXRA37r69121EQ
3xsFSYxlKdQoHfOV1p3T9638M//i2hyNu7M5+F2zmTNPFVahbyP0a+870f56
wv+syh9Zr3qT4wUK0nleqxZ+Es7PYRYp3U+26K9PVhItuTsG/RwBt0gTwZZ/
6oMFLnMdG4DPVHJWr+S+wfzcPVsXWUXswf/JTusRTUgAvkfZ7c2ZE4/4nKoi
WIY0hPyrSqmHqoQEfS1ziymfPYzFhH12+37rmx/w/r5WoPS/eQD1Kc4egyDu
A7C/KDAaOWc4Rfifv+TSwBdD8J8fbGzrbHiI+kLO6uPr8+rAT3hVHrfHWeN+
W8kLGi//BP6DSB23E3c3+t+3X+nfUONegfXfnRQZZ0Z+RJVKF11jhPmzd3pD
bR+11hD+D416eOwqBfCx/7xfH/IaBb/CKXTUIyAR+Ft2qb+I157dJLJ9iXd8
NkVpuH90ndQ/Tf4Fv6JdllR/rRD485+x5Citd32Ef7KXdmdxUWB+Iv25nLxL
dcivZ5pdnqxvRH99XVa8EakA909q7FuOYTPMj+71s8+e/o7vKyfDQ/vnCvif
NftudDMeRX3w6yn2UaX3o4T/T8ptqWIWQH76pz1qNqB1klg/82naHh5P4JNq
auX1YzuhL/R8ZsNa/13w51X/MDX0P/5K+L+dulfSMQP9y1a7dzQr70V+t8ON
6UGaMfiNabtOarkwI/55oTvEtZSM/mvZeKkWoR/AlxyuVDe1FYO/WhVlrnN1
BP31ots2SUsd6ybsP4k+c2pNC/NTPpj2B+0zrif8s3GMSnJCG/1Bxo1JoZ9u
Aj+Uu6WYdSod5/+bTn2STRr8I36N99xU/gjhH7r89ppz34APL2nLV6suVRP2
N/NqBExEDRDnU23wtljTJvAfmp/auPR5gF9qFUqVlPkE8S1VcVX+jhD0Z1UH
2wytDIA/f+FvT6/VBeBj4Zfawv6vqesMxLKNwiQjK6QikdUyIisNvA3JHhGh
VLIrWQmJIiOiyJ7ZK6JkpJCRhAjZhIoohFDW9/15n8vP/pyO89zvfZ9znetc
Z3uqM2GfNbVKbl4D98P11n+HhG9gf3F41n7Nmp0KJLL9UxNLSV9cJCrI9uly
T00XKAL/Uf+V33etV4BEtm9guPiKYR3qo6oNXSO/d5P1PP7/vmKNlKP7sZ+U
cqKgWyMQ7wtztXN8hRnwN1s6+XbbVOhDGpcF5Ia/gX7FFZdZJcmX0DdOGDqw
c+gC6sdt2YVMwXPoX1eVPaXb7oj7OXS7TV29O+oLYXpqmV7aNfuD3vd+USrA
fpD1+x/bDy2hv8NOq59YqYr8sFtGt6X3Bvp3ccsWvLpL5HyanWSu/CIn7Svy
/5c2xXJDDPh9sZ4cFMwtwn49Hi8qkuR5M8L/c7Q3Myq98H3lnj7Xb/2I+FQY
7Irs1sL5LO4z6lXl+Ub4//3mmZqnPdDXqo/meDSVDf09rSPeklGs2O929pyH
A4PLd8J/qmVZXrd5cj7CQZIKCJetHvtG+N/XNPw9Myma8J/XcPBnoQHmW1kb
h2sqr2C/SVxvkIZZMuKvpjkR7ZOE+Yt79boxm842EP7fcxI6ySuK/lFXTUpH
Ajfe9+hWoUXtQtxvlgfligeNPxL+c5YbdMj6gP/PNNd2UW4a+6nDZu5uCL4O
fqnRS6pNPJuAzzdpOAs+64a+SvG2m4I/VrE/osiGv5leI4ewn+Yz3DJJj/nu
5LyF/olU3J/PhvqcGf3BT6ibdowTH1/Tvxg5y6m/Y42+ova6Kzdq8D56+cdf
v1ANfbbkXzotDJLgnzx7UHloz6sUwr7LrI0II3scER8KjvbvSbHAB36oXQiP
T0V/VsAu6O6RWPAPR+44SW9zRv/o2ju+wDsboP8WFBbK+cWRfP/9//u91Omc
chj450fXFOHfjvXE9x1IbPbw2gP8k/YGw0hoIvp3AvST073zXYR99UGfDI1W
8McCFVQ9u24BX5rv5nMVKwd+8jvuZnZVGt6XzaLGAqpHnhD2eV1PF+5wAD+q
g6dQ8ZYJ8PkE3+9eH2mQ/6soCCzsjcX8UUfU+vOfeXA/P9vbsO6kI/J/9pht
EwNewPcCDI3zwro+EfFv0NOzvOz3gzg/K/ff9NNaIf5MVqMNJbtw/zR/Fepp
uIH9iScm5E4qHckh7Js3S0rHMqF/mkN584cwbyzxfR81vFoRHkN+G+LRyJPY
Bv4Se2IP76FT2G+ol1AWSqUF/QG/w0a7j63RJxEM5hU6Wgj78m/vcl0rKiTi
Q9V48sR5D+BjgRUOb/2WyPNz/+dve17PPGovI/y/nfsmosCa3E/4Pz951yNu
4YX9xYFlBplffwDfEPnUsW7/C/K85v/1465OgbbsZiI++zkfamYJFxHnZyKt
KfWNFvRjRdPt4g0qvhD2K1L2OAyzFRHx+aQvq1d3O4aIz8LT7uhDdWJEfEwn
usuV2wWJ+Ng4OVmqn1uzHypQb+MOE8w/bulQ4fANJ88T/J/fdmusTAyQ+11T
CgV8Vwoal3E/JIcXu1/1Qf5moU37L7sA+fnnhXPU7aPg/3zdVRqll/+K8F9R
bt1uXWHgG1xWFR0F3eAPVBRe2uvrsp/w32253CPwMfSrj7DNHNmaCvznuFL1
785Q3P/P+XLjvITJehNTCvu28Dj/2i5A2P9Ao50Q+hrv+wnStpNDSsCHiy9T
vTn4Hf3B+3Ms3zp4yfUUB2lZI82Lbw1/VSevjD3qET9h3/DrPK3hUcx32NZc
6z15CP33Rj9vb5roP4T/VM5+6a7B3wn/acUjZE2ZMD/OvmtyLjwR+vNitaF6
UfexH0054DpXz/Rrwr5Qn8ofv6fYTx02r2dy5Av0YYI820J8WMCfr8yXN+5+
Av00b7kdg/Ej4A+sd3CYvSE/TMQ/z8qk42wm5kPlaXSKFRWAj3VSr9vkyoz+
7540p6G0x7j/51k8z5iOQ5/85W8v3sE51I+Ge65z6/zE/fz50lu1S27IfyTL
njAU7cB+Xm6e5dN/bZH/7Kh8/TzuQSfx+xqJopd/vhfve32OjZtzDvQJI/Ty
JJkvg7+R+Xd7j1XQLyI+fXm36XJv4vz/FaFeTNJdJfzv4ZLMefIW/MDH78Jz
mUfJeAY7aaCqWSa6BPy9u2Lq9dw6yP/T6WKunrqM/PD+n+DzgVc6CP/f9LBU
VGdmE/aDuIr6X8bjfj4StPVdnAfsX0xS0/OeAT/2rsGcNu0f8N/k7e5a71kE
/+fg95jftJXwX6VHdHfnQ9w/jO0b3godQH4yQfXrados8LEYqYwbTdswn3uS
73K8IDX08/OjLQ6y38P5fzL0NuR4Jb7vIqcNl/UTzDeVLU7ZCHrgfdT+eGk0
/jTmZ/enMTLGyGF+0/ml58fXeetIZPscSfu2t0Tj97t1u05wQUQpYb+reSrl
2NBvwv9EcwW3gIuYr1nXVs7dNA1+b6Nk3HJtQBXhf6Usl3fnHfSvf7Ut/Gkc
Qf37SOOYjXMN9O0rvvxJHm+FPrPS9/h2AQrwx7qsOFfOyiN/s/eV2Vh5APF5
Rp28/voX4HtZ4f8uTspiPlraxzxGdS/0fz7zJZUXrtEP7E/sM3s2gfz56mtq
6nlO4APHS+vpsvPx+1owNJU4Ewx+rF2SWP/jnzg/LHy8MQbimF8wivvHOPln
kLAf9uG9budnzK+dDhSovLkR/a+6y1G9lpdx/xhECqhYza/xP1twsZEX/L1u
Lwb9fS+Bz+zyPvEo5R7eF8rpAnGdW+BHHWzXSZmdhv5VDKvWHodQst4iBUly
KcP7yiDOj4kx2wz7DZz/SdfNzrEHwM9xNE9wbB+vIOwLp3oW2IViPmKzXLQe
KaqeiE/5x2PPHG7i/lQKbTffoYH99b+Hdx4OWTPfTUkdVGPPiv7OxN53opv6
2gj/o15Z2f+Rxf3PUZ7dyzaN+kJdNCq66BqZD8NCctY0PqZ9HviJ+Q6rrtlm
9DdL9Tt/cp/A/Xwg0WksVwL8UpcXtQUmPuT9W3SkM6QuvR0swG+vntKSCCDm
adlJD9u/nzC6gPvTs/CP5b0x7Cfl389gK8QH/ZDMmS2HtPmAP7C5Ue1/fBz6
bMO8KrkkO8x3M4vVyvA4Y77vsINDZ7YD+Dn9HAZ1gocTifiILG8wN2GcIex3
Ll6vpLND/517wN/rfirwGcEf65l/rOmPc/JLFZ/fO02cz8YbkY699Lgfesqe
XttZhfeXlKbaMtlG/l4sJMUtWiwh7rifH6mV8T4qXCHi09d8+k/RffR/x9el
9w+dJtcL/3/f5+Ma0vewH9l6VTpQuAj85E+3rq807MN8U/LNFyn9J1B/yRgM
fj1ojP5194nVsQY64Ht9NqvbGN6iv9zzR7g8RQj4Rsn8Bv2sy+hfFM4cDGlS
BP/KTOhA/sUj4F8Jd1pI/TueT8S/xyf5vCcbzr8B89t+QS3wW2ZjhDbre+H3
yz4arZXSjf1oGiICxzgkwV+KuMO7NNwAfECCP57u+hUawn837QP2t+I+EOcz
eWv4m8vf0N8Unng4u3ER9cvOp1yqu25i/3Kacm1sQzt+v5XX29Ktt4wR/vPc
5T18/wn0eQolG24treEPzAkqfWhMhL6K6qz8dhkl6D9IiDzwin4K/ZPGD718
fxZXiO9bFcLBlfQO+XnKRs3A/dvwfsUn1/vM7Ac/dolaP/3Q8gphn+9Rf+Tf
UOjrchov3C5NA7/F+5Bf8ZwH5ltN/I9SXaoAvmccwdrcc7iF8J8+x+ez90f0
j07GH3U168V+bafpB2NjwpjvSDaxZVF4Rf4eLKTYd2f0Vezwfa35z78fnkf+
2ZU3GMlshPedvaZ/z/co3M/ff4vpOWlzV5Dtp+9/QP0yDvohTClxNen9wJ+d
9ZpdDnf+JX5fHbGRbDxT6L98umV5t70Z+s+L4vk07D4NRHxMQsxu8wqT+RAs
pI6ETS2FPoPE+Y/f/EXLwQj3szr9ycvGkw8J/2W4TfV66A8T/hemutpbNEgT
/k/t08zRFUJ98eDPOUbf3+S/j51kJTdLK/KRzGf7P38TUZfb0kOet51SqO7l
X5ETx+83LHjshbQE8Hka55GjdDPIH5aTLy1dogN/8umHQaa/rojPXEPs4fAM
4PMqrq9OaRsCX7IM/TPdWgn96g0im3Y5urYT8Tl1btnPih/9Wdf4/j+1Wch/
un4M1Y2+xf257VBw/d8m8LsWyoxenz+I/TVnsxRaqC7gfW86ofaVlwP6orO/
dbzih4Ef6p6wSLlWhPmafVJ2+n+EthLxodha1neWCe/7fc2OT0za+H156l6y
4UiaJ/y/0mr8NufPS8L/JOOPgUcuY3/35W9TjD4T4J+w+yRve6sJfsXhJypq
kmvql8ywlzW39fF+JWinmHKt4Q/kW+ue0t2O+cQhliS+oJRFIv6i40k//MzJ
+zDoSHFDO+2XTqzR//fo1hi7hfxzgf9l90UbMv7NQSpS7dP9oIj504t6xwMS
q7iJ+FgKNA9kXcT9/1q70Yj+YTfxfe8eFnAdHwO+9FffW3r7OibC/hNueh2p
t9h/yug8f+6JDN73b1JfBzd1Qh/eafV0ajQd+MNfE68Ps11FfGSWnpmc7kd/
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
                  "]]}, {}}, {}, {}, {}, {}},
              AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
              Axes->{True, True},
              AxesLabel->{None, None},
              AxesOrigin->{0, 0},
              DisplayFunction->Identity,
              Frame->{{False, False}, {False, False}},
              FrameLabel->{{None, None}, {None, None}},
              FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
              GridLines->{None, None},
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              ImagePadding->All,
              Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}},
              PlotRange->{{0, 6.}, {-7.971609648713748, 7.056501314195079}},
              PlotRangeClipping->True,
              PlotRangePadding->{{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.05], 
                 Scaled[0.05]}},
              Ticks->{Automatic, Automatic},
              ImageCache->GraphicsData["CompressedBitmap", "\<\
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
fvdXP075rP7ds9XXl0lnNf/V19Pn//UlNJw=\
\>"]]}], "}"}]}], "}"}],
         Short[#, 10]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{186., {6., 23.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{164., {0., 23.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 19, 27100744344693812515, 10/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{185., {0., 23.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 19, 27100744344693812515, 10 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{139., {0., 23.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 19, 27100744344693812515, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{249., {0., 23.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[27100744344693812515 === $SessionID, 
   Out[19], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.903866834888376*^9, 3.903885251783269*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"744667a0-ba0e-4732-b488-dd312cab775a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{3840, 2086},
WindowMargins->{{0, Automatic}, {Automatic, -2086}},
DockedCells->{},
TaggingRules->Association["TryRealOnly" -> False],
Magnification->3.,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info103903878389-9537494"->{
  Cell[34287, 789, 645, 10, 213, "Print",ExpressionUUID->"9af89f60-78c4-420c-ba1a-9a96eb3f415e",
   CellTags->"Info103903878389-9537494"]},
 "Info33903878382-9537494"->{
  Cell[2805, 75, 1316, 20, 1527, "Print",ExpressionUUID->"2b6a3bab-f2bb-4f2e-b6ab-59039d1f8597",
   CellTags->"Info33903878382-9537494"],
  Cell[4277, 102, 247, 5, 139, "Print",ExpressionUUID->"51e30f0d-ddd0-4b5a-925e-df4e2a8fa726",
   CellTags->"Info33903878382-9537494"],
  Cell[4527, 109, 450, 8, 213, "Print",ExpressionUUID->"f1a20b00-998b-4cda-ac10-c81b40a6d196",
   CellTags->"Info33903878382-9537494"],
  Cell[4980, 119, 400, 7, 286, "Print",ExpressionUUID->"20f3143a-021a-4424-a0f0-3b6034e41f69",
   CellTags->"Info33903878382-9537494"]},
 "Info33903878383-9537494"->{
  Cell[5383, 128, 528, 9, 578, "Print",ExpressionUUID->"fba0b234-5920-4152-aca5-ef30c43df5b1",
   CellTags->"Info33903878383-9537494"],
  Cell[5914, 139, 728, 11, 359, "Print",ExpressionUUID->"9a8f339d-36cb-4d57-b8fc-7ff00cdad692",
   CellTags->"Info33903878383-9537494"],
  Cell[6645, 152, 572, 9, 213, "Print",ExpressionUUID->"1a01e7cb-0bfc-4a59-b5a2-65da1ae8a380",
   CellTags->"Info33903878383-9537494"],
  Cell[7375, 168, 775, 12, 286, "Print",ExpressionUUID->"b50c0216-f87e-4f46-8ffe-dd7d1ae42e45",
   CellTags->"Info33903878383-9537494"],
  Cell[8153, 182, 550, 9, 359, "Print",ExpressionUUID->"02c82268-cc9a-4792-a68a-6548fc903048",
   CellTags->"Info33903878383-9537494"]},
 "Info33903878384-9537494"->{
  Cell[8706, 193, 535, 9, 213, "Print",ExpressionUUID->"fe41242d-9cc3-450a-b651-527bd4812830",
   CellTags->"Info33903878384-9537494"],
  Cell[9244, 204, 943, 14, 359, "Print",ExpressionUUID->"ac1417ba-1f33-4f13-9482-53443b28dfe9",
   CellTags->"Info33903878384-9537494"],
  Cell[10190, 220, 1140, 17, 432, "Print",ExpressionUUID->"f87ebccd-79c3-4adf-96ae-f0a4169f6d51",
   CellTags->"Info33903878384-9537494"],
  Cell[11492, 244, 846, 13, 286, "Print",ExpressionUUID->"825dd051-3537-4e5e-b6b8-f64a13e179a2",
   CellTags->"Info33903878384-9537494"],
  Cell[12341, 259, 390, 7, 139, "Print",ExpressionUUID->"db99923c-fb3c-4b67-be9d-b48a3f8e0a18",
   CellTags->"Info33903878384-9537494"]},
 "Info33903878385-9537494"->{
  Cell[12890, 273, 441, 8, 213, "Print",ExpressionUUID->"e75d297a-154e-4f11-9f1b-5713835d28ca",
   CellTags->"Info33903878385-9537494"],
  Cell[13490, 288, 398, 7, 139, "Print",ExpressionUUID->"25202384-e1d7-438d-b84f-a835a3825305",
   CellTags->"Info33903878385-9537494"],
  Cell[13891, 297, 529, 8, 213, "Print",ExpressionUUID->"f01f7129-d098-4bef-931d-ccebc7c1dbd2",
   CellTags->"Info33903878385-9537494"]},
 "Info33903878386-9537494"->{
  Cell[14578, 312, 644, 10, 213, "Print",ExpressionUUID->"a71af2c1-0461-4749-8ebe-9aec7e6c90a1",
   CellTags->"Info33903878386-9537494"],
  Cell[15382, 329, 1371, 20, 1235, "Print",ExpressionUUID->"3fe3d56b-f338-4f82-bfdb-1eb5c687b491",
   CellTags->"Info33903878386-9537494"]},
 "Info33903878387-9537494"->{
  Cell[16913, 356, 602, 10, 213, "Print",ExpressionUUID->"073d28b7-52ff-4087-9ba7-d68a2d0b83f4",
   CellTags->"Info33903878387-9537494"],
  Cell[17518, 368, 550, 10, 213, "Print",ExpressionUUID->"7275c5a2-dbbf-4469-b13a-c61a6a8cc66b",
   CellTags->"Info33903878387-9537494"],
  Cell[18071, 380, 1415, 21, 651, "Print",ExpressionUUID->"b0055cfa-6710-45f3-8760-8026dbb622ae",
   CellTags->"Info33903878387-9537494"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info103903878389-9537494", 259377, 5065},
 {"Info33903878382-9537494", 259547, 5068},
 {"Info33903878383-9537494", 260124, 5077},
 {"Info33903878384-9537494", 260837, 5088},
 {"Info33903878385-9537494", 261555, 5099},
 {"Info33903878386-9537494", 261997, 5106},
 {"Info33903878387-9537494", 262306, 5111}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 864, 17, 719, "Section",ExpressionUUID->"a07aa20e-9937-4186-bc43-89ffc8a76382"],
Cell[CellGroupData[{
Cell[1469, 43, 1158, 23, 230, "Input",ExpressionUUID->"42a4d363-9498-4b0b-bf7c-5f123f12c347"],
Cell[CellGroupData[{
Cell[2652, 70, 150, 3, 78, "Echo",ExpressionUUID->"04eddbb7-6f6d-47ce-b7b5-e7215cabd748"],
Cell[2805, 75, 1316, 20, 1527, "Print",ExpressionUUID->"2b6a3bab-f2bb-4f2e-b6ab-59039d1f8597",
 CellTags->"Info33903878382-9537494"],
Cell[4124, 97, 150, 3, 78, "Echo",ExpressionUUID->"6a6067d7-b0f4-4057-b50b-20e7cf8cb941"],
Cell[4277, 102, 247, 5, 139, "Print",ExpressionUUID->"51e30f0d-ddd0-4b5a-925e-df4e2a8fa726",
 CellTags->"Info33903878382-9537494"],
Cell[4527, 109, 450, 8, 213, "Print",ExpressionUUID->"f1a20b00-998b-4cda-ac10-c81b40a6d196",
 CellTags->"Info33903878382-9537494"],
Cell[4980, 119, 400, 7, 286, "Print",ExpressionUUID->"20f3143a-021a-4424-a0f0-3b6034e41f69",
 CellTags->"Info33903878382-9537494"],
Cell[5383, 128, 528, 9, 578, "Print",ExpressionUUID->"fba0b234-5920-4152-aca5-ef30c43df5b1",
 CellTags->"Info33903878383-9537494"],
Cell[5914, 139, 728, 11, 359, "Print",ExpressionUUID->"9a8f339d-36cb-4d57-b8fc-7ff00cdad692",
 CellTags->"Info33903878383-9537494"],
Cell[6645, 152, 572, 9, 213, "Print",ExpressionUUID->"1a01e7cb-0bfc-4a59-b5a2-65da1ae8a380",
 CellTags->"Info33903878383-9537494"],
Cell[7220, 163, 152, 3, 78, "Echo",ExpressionUUID->"70aa1270-8a10-4c77-836e-42595e65571d"],
Cell[7375, 168, 775, 12, 286, "Print",ExpressionUUID->"b50c0216-f87e-4f46-8ffe-dd7d1ae42e45",
 CellTags->"Info33903878383-9537494"],
Cell[8153, 182, 550, 9, 359, "Print",ExpressionUUID->"02c82268-cc9a-4792-a68a-6548fc903048",
 CellTags->"Info33903878383-9537494"],
Cell[8706, 193, 535, 9, 213, "Print",ExpressionUUID->"fe41242d-9cc3-450a-b651-527bd4812830",
 CellTags->"Info33903878384-9537494"],
Cell[9244, 204, 943, 14, 359, "Print",ExpressionUUID->"ac1417ba-1f33-4f13-9482-53443b28dfe9",
 CellTags->"Info33903878384-9537494"],
Cell[10190, 220, 1140, 17, 432, "Print",ExpressionUUID->"f87ebccd-79c3-4adf-96ae-f0a4169f6d51",
 CellTags->"Info33903878384-9537494"],
Cell[11333, 239, 156, 3, 78, "Echo",ExpressionUUID->"d7d210bd-f0e5-4e1a-9d9f-3f37c619bd97"],
Cell[11492, 244, 846, 13, 286, "Print",ExpressionUUID->"825dd051-3537-4e5e-b6b8-f64a13e179a2",
 CellTags->"Info33903878384-9537494"],
Cell[12341, 259, 390, 7, 139, "Print",ExpressionUUID->"db99923c-fb3c-4b67-be9d-b48a3f8e0a18",
 CellTags->"Info33903878384-9537494"],
Cell[12734, 268, 153, 3, 78, "Echo",ExpressionUUID->"157e7790-471e-4459-81e9-a1c612bc4551"],
Cell[12890, 273, 441, 8, 213, "Print",ExpressionUUID->"e75d297a-154e-4f11-9f1b-5713835d28ca",
 CellTags->"Info33903878385-9537494"],
Cell[13334, 283, 153, 3, 78, "Echo",ExpressionUUID->"40f915ea-1350-49e0-9da5-2395524646f6"],
Cell[13490, 288, 398, 7, 139, "Print",ExpressionUUID->"25202384-e1d7-438d-b84f-a835a3825305",
 CellTags->"Info33903878385-9537494"],
Cell[13891, 297, 529, 8, 213, "Print",ExpressionUUID->"f01f7129-d098-4bef-931d-ccebc7c1dbd2",
 CellTags->"Info33903878385-9537494"],
Cell[14423, 307, 152, 3, 78, "Echo",ExpressionUUID->"fb05b48f-8e8a-4066-8918-66cfe435dbbc"],
Cell[14578, 312, 644, 10, 213, "Print",ExpressionUUID->"a71af2c1-0461-4749-8ebe-9aec7e6c90a1",
 CellTags->"Info33903878386-9537494"],
Cell[15225, 324, 154, 3, 78, "Echo",ExpressionUUID->"9cec490e-31cb-4418-a3b1-874ef8e723f4"],
Cell[15382, 329, 1371, 20, 1235, "Print",ExpressionUUID->"3fe3d56b-f338-4f82-bfdb-1eb5c687b491",
 CellTags->"Info33903878386-9537494"],
Cell[16756, 351, 154, 3, 78, "Echo",ExpressionUUID->"15017f78-fbf3-4f08-a671-daa0989b4932"],
Cell[16913, 356, 602, 10, 213, "Print",ExpressionUUID->"073d28b7-52ff-4087-9ba7-d68a2d0b83f4",
 CellTags->"Info33903878387-9537494"],
Cell[17518, 368, 550, 10, 213, "Print",ExpressionUUID->"7275c5a2-dbbf-4469-b13a-c61a6a8cc66b",
 CellTags->"Info33903878387-9537494"],
Cell[18071, 380, 1415, 21, 651, "Print",ExpressionUUID->"b0055cfa-6710-45f3-8760-8026dbb622ae",
 CellTags->"Info33903878387-9537494"]
}, Closed]],
Cell[19501, 404, 239, 4, 136, "Output",ExpressionUUID->"4e602fb2-17dd-4713-8e27-3a760de1dbae"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19789, 414, 262, 4, 203, "Section",ExpressionUUID->"416c3353-f5b9-4d09-be4d-6ea5d195adb0"],
Cell[20054, 420, 232, 4, 107, "Text",ExpressionUUID->"cf1aea60-faba-4443-8417-502a3ce75e62"],
Cell[20289, 426, 445, 8, 183, "Input",ExpressionUUID->"959f3ecc-5958-4830-87a9-802b23509b58"],
Cell[CellGroupData[{
Cell[20759, 438, 504, 11, 204, "Input",ExpressionUUID->"534c9725-9fc5-4ddc-a626-008f72861c46"],
Cell[21266, 451, 8074, 211, 403, "Output",ExpressionUUID->"efb0c267-cdbd-43e5-91c8-cd4c9d587d12"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[29389, 668, 271, 6, 203, "Section",ExpressionUUID->"ced5500b-4566-48ac-8cde-a8906449ff29"],
Cell[29663, 676, 430, 8, 135, "Input",ExpressionUUID->"f9f339ed-6e9d-4219-9f14-ec4fd6ee0620"],
Cell[30096, 686, 307, 6, 135, "Input",ExpressionUUID->"f0620080-0323-4a60-85b2-985dcc798459"],
Cell[30406, 694, 498, 10, 135, "Input",ExpressionUUID->"162d8ea8-a453-4914-9a88-892e1f6d36ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30941, 709, 208, 4, 203, "Section",ExpressionUUID->"71386755-6d8d-46c0-87b9-c454c7a907e6"],
Cell[CellGroupData[{
Cell[31174, 717, 176, 3, 164, "Subsection",ExpressionUUID->"fca830df-8a71-4e7e-be61-98fc484b7b07"],
Cell[31353, 722, 244, 4, 107, "Text",ExpressionUUID->"c90d05f2-32d6-4dd4-93a2-55c5e0799e87"],
Cell[31600, 728, 2463, 52, 615, "DefinitionBox3Col",ExpressionUUID->"325b5874-97af-491c-8ad3-6a4532534bc2",
 CellID->18427541],
Cell[CellGroupData[{
Cell[34088, 784, 196, 3, 135, "Input",ExpressionUUID->"2c8a2a07-5435-40dc-ba26-872f39c8d32c"],
Cell[34287, 789, 645, 10, 213, "Print",ExpressionUUID->"9af89f60-78c4-420c-ba1a-9a96eb3f415e",
 CellTags->"Info103903878389-9537494"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34969, 804, 5586, 83, 230, "Input",ExpressionUUID->"6c4ca98c-0ad3-47b8-ac3d-462340d8b54b"],
Cell[CellGroupData[{
Cell[40580, 891, 564, 13, 74, "Print",ExpressionUUID->"d91631e7-391a-43ff-95b1-da3a2c5e9f02"],
Cell[41147, 906, 431, 7, 138, "Print",ExpressionUUID->"ef319df3-a2fa-4fb2-a602-1fe6035bac1f"],
Cell[41581, 915, 3599, 69, 458, "Print",ExpressionUUID->"fdb732f0-a1d5-4d7b-a6b2-af65e348bc08"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45253, 992, 218, 4, 203, "Section",ExpressionUUID->"95c09f6d-9646-4129-9b50-7d1c427084f3"],
Cell[CellGroupData[{
Cell[45496, 1000, 157, 3, 164, "Subsection",ExpressionUUID->"f0dde87b-1842-47c0-8251-87267e62fdd7"],
Cell[45656, 1005, 3143, 44, 135, "Input",ExpressionUUID->"8153c58f-56c4-494d-b2a3-491cfd546369"],
Cell[48802, 1051, 3468, 73, 952, "Input",ExpressionUUID->"058a9a13-9dae-4800-892b-318cbb05cce5"],
Cell[52273, 1126, 1329, 27, 592, "Input",ExpressionUUID->"4a0315c1-852a-4cb2-a867-db7e9d4bd545"],
Cell[CellGroupData[{
Cell[53627, 1157, 241, 4, 137, "Subsubsection",ExpressionUUID->"7aa69475-664e-4202-9223-82711749cbfa"],
Cell[CellGroupData[{
Cell[53893, 1165, 1339, 22, 252, "Input",ExpressionUUID->"73344bb0-0037-4945-acfe-2ea9b7dbcd06"],
Cell[55235, 1189, 203, 3, 147, "Output",ExpressionUUID->"94aae6f5-82fd-4c7d-89d7-a6c227bef4ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55475, 1197, 3148, 68, 748, "Input",ExpressionUUID->"1e72ac41-1763-4f4e-8c85-5e200208df11"],
Cell[CellGroupData[{
Cell[58648, 1269, 414, 9, 74, "Print",ExpressionUUID->"97593658-6896-4795-92e0-da0e5a10073a"],
Cell[59065, 1280, 6835, 503, 26415, "Print",ExpressionUUID->"dcc58d1c-4517-4552-91f2-85978afa1753"]
}, Open  ]],
Cell[65915, 1786, 193019, 3260, 857, "Output",ExpressionUUID->"744667a0-ba0e-4732-b488-dd312cab775a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

